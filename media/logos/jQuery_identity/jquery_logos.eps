%!PS-Adobe-3.1 EPSF-3.0%%Title: jquery_logos.eps%%Creator: Adobe Illustrator(R) 11%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: Scott Jehl%%CreationDate: 9/1/08%%BoundingBox: 0 0 2311 687%%HiResBoundingBox: 0 0 2310.7725 686.4327%%CropBox: 0 0 2310.7725 686.4327%%LanguageLevel: 2%%DocumentData: Clean7Bit%%Pages: 1%%DocumentNeededResources: %%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)%%+ procset Adobe_CoolType_Core (2.23 0)%%+ procset Adobe_AGM_Core (2.0 0)%%+ procset Adobe_AGM_Utils (1.0 0)%%DocumentFonts: %%DocumentNeededFonts: %%DocumentNeededFeatures: %%DocumentSuppliedFeatures: %%DocumentProcessColors:  Cyan Magenta Yellow Black%%DocumentCustomColors: %%CMYKCustomColor: %%RGBCustomColor: %ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 40 8%%BeginData: 4762 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD1CFFA82752A8FD07FFA8FFFFA87DFD3AFFA8A8FFA8FFFFFFA8A8%272752FFA8FFA8FFA8FFA8A8FFFF52FD16FFA8FFA8A8A8FF7D5227A85252%52A82752F852522752A827A8FD26FFA8A8A8FD10FFA85252527DA8FFA852%277DA827527D525227275252277D5252FFFF7D7D5252FD10FFFD04A8FFFF%522752FF5227527D2727522727A87DF87DFD26FF527D2727FD10FF7DFF7D%A8A8A8FFA82727A8A827527D522727522752FF2752FFFFFF527DF827FD10%FFA87D7DA8A8FF277D2752F852FD052752F8FF5227FD27FF7D7D5227FD10%FF7D7DFFFF7D7DFF525252FD062752F852277DFF277DFD06FFA8FD11FFA8%A8A8FF7D27FFA87D7DA8A87DFFA87D7DA8FFA8A8FD3BFFA87D7DA87DFFA8%277DFFA8A8A8FFA8FFFF7D52A8A8FFA8FD1AFFA8FFFF527DFFFFFFFD0BA8%FD3DFFA8A8A8FFFFA852FD07FF7DFD05A87DA8FD23FFA8FFFFFFA8FFFFFF%A8FD4FFFA8FFFFFFA8FDFCFFFDFCFFFDFCFFFDFCFFFD30FFA8A8A8FD50FF%A87DFD0DFFA8FD17FFA9A9FFFFA97E5327277DA8A9A8A87DA8A852A8FF7D%7DFD39FFCAC8C8C9C8CFFFFF7D7D275252FD05A852FF7D52A8FF27FFFF2F%5A2852FD10FF84A97E84A8FF532827FF522E2EA82727F8272752285327FD%26FFCFC9A87DFD10FFC8C1C0C1C8C8FFA85227A8A827277D5227F8F82752%5252277DFFFF0E2F2727FD10FF847E8584AFFF522752FF52285253280052%5227A87DF8A8FD26FFC0C727F8FD10FFC8CFC9C9C8C9FFA827277D7D2752%52522727525252FFF852FFFFFFA8FFA8FD11FFA8365A84A8FF05A8272700%7D27275252275227FF7D52FD27FFC9A77D7DFD10FFC9C1FFCFC8C9FF5252%7D2727525227527D2752287DFF52A8FD18FFA88584FF5252FFFFA8FFA8A9%A8FFA8A984FFA9AFFD3DFFC8C7C8C8FFA8277DFD07FFCFCFC9CFCAFFCFFD%1DFF7DA8FFFFFF84605A857E85FD04845AAFFD3EFFCFFFFFA87DFD07FFC8%C9C9CEC9C9C8CEFDFCFFFDFCFFFDFCFFFD23FFA8A8A8FFA8A8A8FFA8A8A8%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FD35FFA8A8A8FFA8A8A8FFA8A8A8%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8FD11FFA8F8270005F8270005%F827F800F8270005F8270005F8270005F827000000FD33FFA827F827F827%F827F827F827F827F827F827F827F827F827F827F827F827FD11FFA827F8%270027F8270005F8050527F8270005F8050005F8270000F827F827FD34FF%2727F805F827F827F827F827F827F827F827F827F827F827F827F827F8FD%11FFA8F800F8270505F805002752FFA82700FD0527002805005253F80500%FD33FFA827F8274A514A512027F82727A8A87DF827F8272727F8272727F8%7D2727FD05FFA8FD0BFFA827F828062E0628F87DA8FF2EA9A8A852A87EFF%FD04A852FF52270027FD22FFCFFFA8FD0FFF272775C8C0C8C875F8277DA8%7D52FFA8527DA8A8FFA8A8FF7DA8A827F814602727A8FFA8FD0AFFAF0000%062E0C2E05277DFF7DF87DA87D7DA8FFA8A8A8527DFF52F8F80500FD21FF%CFC7C127F8A8A8A8FD0AFFA827F89FC9C7C2CF74F852FFA85227FFA87D7D%FFFD04A827FFA827F8273C5A5228FFA8FD0BFFA827F82E0D2F0C28F8FF7D%FFA8FFA8FFA8A8FFFF7DFF0084A8050027F827FD22FFC8C95252A8FFA8FD%0BFF270574CFFFFFC975F87DA8A8A8FFA8A8A8FFA8FF7DA87D27FF52F827%27FFFFA8FFA8FFA8FD0AFFA8F805F82E0C2F007DA827527D5252527D2752%7D5928002728F827F80000FD33FFA827F84B9FCEC9C12027A87DF87D5252%277D2E27527C5227F852F827F827FD11FFA8270027F8270027A87DF805F8%2E0D2F062F0C28062E0C2F052700270027FD34FF272700517475262752A8%2727F827F82726754A51507574754A27002727FD11FFA8F8270005F82700%05F8270005002805050528050505280505F827000000FD33FFA827F827F8%27F827F827F827F827F827F827264B264B264B264BF827F827FD11FFA827%F82700270027002700270027F8270027F8270027F827002700270027FD34%FFFD0427F8272727F8272727F8272727F8270027F8270027F8272727F8FD%11FFA8F800F827F805F827F805F827F805F827F805F827F805F827F805F8%0500FD33FFA827F827F827F827F827F827F827F827F827F827F827F827F8%27F827F827%%EndData%%EndComments%%BeginDefaults%%ViewingOrientation: 1 0 0 1%%EndDefaults%%BeginProlog%%BeginResource: procset Adobe_AGM_Utils 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Utils 68 dict dup begin put/bdf{	bind def} bind def/nd{	null def}bdf/xdf{	exch def}bdf/ldf {	load def}bdf/ddf{	put}bdf	/xddf{	3 -1 roll put}bdf	/xpt{	exch put}bdf/ndf{ 	exch dup where{		pop pop pop	}{		xdf	}ifelse}def/cdndf{	exch dup currentdict exch known{		pop pop	}{		exch def	}ifelse}def/bdict{	mark}bdf/edict{	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end}def/ps_level	/languagelevel where{		pop systemdict /languagelevel get exec	}{		1	}ifelsedef/level2 	ps_level 2 gedef/level3 	ps_level 3 gedef/ps_version	{version cvr} stopped {		-1	}ifdef/makereadonlyarray{	/packedarray where{		pop packedarray	}{		array astore readonly	}ifelse}bdf/map_reserved_ink_name{	dup type /stringtype eq{		dup /Red eq{			pop (_Red_)		}{			dup /Green eq{				pop (_Green_)			}{				dup /Blue eq{					pop (_Blue_)				}{					dup () cvn eq{						pop (Process)					}if				}ifelse			}ifelse		}ifelse	}if}bdf/AGMUTIL_GSTATE 22 dict def/get_gstate{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_clr_spc currentcolorspace def	/AGMUTIL_GSTATE_clr_indx 0 def	/AGMUTIL_GSTATE_clr_comps 12 array def	mark currentcolor counttomark		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop	/AGMUTIL_GSTATE_fnt rootfont def	/AGMUTIL_GSTATE_lw currentlinewidth def	/AGMUTIL_GSTATE_lc currentlinecap def	/AGMUTIL_GSTATE_lj currentlinejoin def	/AGMUTIL_GSTATE_ml currentmiterlimit def	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf	/AGMUTIL_GSTATE_sa currentstrokeadjust def	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def	/AGMUTIL_GSTATE_op currentoverprint def	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf	/AGMUTIL_GSTATE_ht currenthalftone def	/AGMUTIL_GSTATE_flt currentflat def	end}def/set_gstate{	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_clr_spc setcolorspace	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor	AGMUTIL_GSTATE_fnt setfont	AGMUTIL_GSTATE_lw setlinewidth	AGMUTIL_GSTATE_lc setlinecap	AGMUTIL_GSTATE_lj setlinejoin	AGMUTIL_GSTATE_ml setmiterlimit	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash	AGMUTIL_GSTATE_sa setstrokeadjust	AGMUTIL_GSTATE_clr_rnd setcolorrendering	AGMUTIL_GSTATE_op setoverprint	AGMUTIL_GSTATE_bg cvx setblackgeneration	AGMUTIL_GSTATE_ucr cvx setundercolorremoval	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or		{		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne			{			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark			} if		}{		AGMUTIL_GSTATE_ht sethalftone		} ifelse	AGMUTIL_GSTATE_flt setflat	end}def/get_gstate_and_matrix{	AGMUTIL_GSTATE begin	/AGMUTIL_GSTATE_ctm matrix currentmatrix def	end	get_gstate}def/set_gstate_and_matrix{	set_gstate	AGMUTIL_GSTATE begin	AGMUTIL_GSTATE_ctm setmatrix	end}def/AGMUTIL_str256 256 string def/AGMUTIL_src256 256 string def/AGMUTIL_dst64 64 string def/AGMUTIL_srcLen nd/AGMUTIL_ndx nd/agm_sethalftone{ 	dup	begin		/_Data load		/Thresholds xdf	end	level3 	{ sethalftone }{		dup /HalftoneType get 3 eq {			sethalftone		} {pop} ifelse	}ifelse} def /rdcmntline{	currentfile AGMUTIL_str256 readline pop	(%) anchorsearch {pop} if} bdf/filter_cmyk{		dup type /filetype ne{		exch () /SubFileDecode filter	}	{		exch pop	}	ifelse	[	exch	{		AGMUTIL_src256 readstring pop		dup length /AGMUTIL_srcLen exch def		/AGMUTIL_ndx 0 def		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{			1 index exch get			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put			/AGMUTIL_ndx AGMUTIL_ndx 1 add def		}for		pop		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval	}	bind	/exec cvx	] cvx} bdf/filter_indexed_devn{	cvi Names length mul names_index add Lookup exch get} bdf/filter_devn{		4 dict begin	/srcStr xdf	/dstStr xdf	dup type /filetype ne{		0 () /SubFileDecode filter	}if	[	exch		[			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx			currentdict /srcStr get /readstring cvx /pop cvx			/dup cvx /length cvx 0 /gt cvx [				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx				names_index Names length currentdict /srcStr get length 1 sub {					1 /index cvx /exch cvx /get cvx					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx				} for				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx			] cvx /if cvx			/end cvx		] cvx		bind		/exec cvx	] cvx	end} bdf/AGMUTIL_imagefile nd/read_image_file{	AGMUTIL_imagefile 0 setfileposition	10 dict begin	/imageDict xdf	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def	/imbufIdx 0 def	/origDataSource imageDict /DataSource get def	/origMultipleDataSources imageDict /MultipleDataSources get def	/origDecode imageDict /Decode get def	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ imageDict begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse	{		/imbufCnt imageDict /DataSource get length def		/imbufs imbufCnt array def		0 1 imbufCnt 1 sub {			/imbufIdx xdf			imbufs imbufIdx imbufLen string put			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put		} for		DeviceN_PS2 {			imageDict begin		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def			/MultipleDataSources false def			/Decode [0 1] def			end		} if	}{		/imbuf imbufLen string def		Indexed_DeviceN level3 not and DeviceN_NoneName or {			imageDict begin		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def			/Decode [0 1] def			end		}{			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put		} ifelse	} ifelse	imageDict exch	load exec	imageDict /DataSource origDataSource put	imageDict /MultipleDataSources origMultipleDataSources put	imageDict /Decode origDecode put		end} bdf/write_image_file{	begin	{ (AGMUTIL_imagefile) (w+) file } stopped{		false	}{		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 		2 dict begin		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {			/imbuf imbufLen string def		}if		1 1 Height { 			pop			MultipleDataSources {			 	0 1 DataSource length 1 sub {					DataSource type dup					/arraytype eq {						pop DataSource exch get exec					}{						/filetype eq {							DataSource exch get imbuf readstring pop						}{							DataSource exch get						} ifelse					} ifelse					AGMUTIL_imagefile exch writestring				} for			}{				DataSource type dup				/arraytype eq {					pop DataSource exec				}{					/filetype eq {						DataSource imbuf readstring pop					}{						DataSource					} ifelse				} ifelse				AGMUTIL_imagefile exch writestring			} ifelse		}for		end		true	}ifelse	end} bdf/close_image_file{	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile}defstatusdict /product known userdict /AGMP_current_show known not and{	/pstr statusdict /product get def	pstr (HP LaserJet 2200) eq 		pstr (HP LaserJet 4000 Series) eq or	pstr (HP LaserJet 4050 Series ) eq or	pstr (HP LaserJet 8000 Series) eq or	pstr (HP LaserJet 8100 Series) eq or	pstr (HP LaserJet 8150 Series) eq or	pstr (HP LaserJet 5000 Series) eq or	pstr (HP LaserJet 5100 Series) eq or	pstr (HP Color LaserJet 4500) eq or	pstr (HP Color LaserJet 4600) eq or	pstr (HP LaserJet 5Si) eq or	pstr (HP LaserJet 1200 Series) eq or	pstr (HP LaserJet 1300 Series) eq or	pstr (HP LaserJet 4100 Series) eq or 	{ 		userdict /AGMP_current_show /show load put		userdict /show {		  currentcolorspace 0 get		  /Pattern eq		  {false charpath f}		  {AGMP_current_show} ifelse		} put	}if	currentdict /pstr undef} if/consumeimagedata{	begin	currentdict /MultipleDataSources known not		{/MultipleDataSources false def} if	MultipleDataSources		{		1 dict begin		/flushbuffer Width cvi string def		1 1 Height cvi			{			pop			0 1 DataSource length 1 sub				{				DataSource exch get				dup type dup 				/filetype eq					{					exch flushbuffer readstring pop pop					}if				/arraytype eq					{					exec pop					}if				}for			}for		end		}		{		/DataSource load type dup 		/filetype eq			{			1 dict begin			/flushbuffer Width Decode length 2 div mul cvi string def			1 1 Height { pop DataSource flushbuffer readstring pop pop} for			end			}if		/arraytype eq			{			1 1 Height { pop DataSource pop } for			}if		}ifelse	end}bdf/addprocs{	  2{/exec load}repeat	  3 1 roll	  [ 5 1 roll ] bind cvx}def/modify_halftone_xfer{	currenthalftone dup length dict copy begin	 currentdict 2 index known{	 	1 index load dup length dict copy begin		currentdict/TransferFunction known{			/TransferFunction load		}{			currenttransfer		}ifelse		 addprocs /TransferFunction xdf 		 currentdict end def		currentdict end sethalftone	}{ 		currentdict/TransferFunction known{			/TransferFunction load 		}{			currenttransfer		}ifelse		addprocs /TransferFunction xdf		currentdict end sethalftone				pop	}ifelse}def/clonearray{	dup xcheck exch	dup length array exch	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 	{	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 	dup type /dicttype eq		{			AGMCORE_tmp			exch			clonedict			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	dup type /arraytype eq		{			AGMCORE_tmp exch			clonearray			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 		} if	exch dup	AGMCORE_tmp 4 -1 roll put	}forall	exch {cvx} if}bdf/clonedict{	dup length dict	begin		{		dup type /dicttype eq			{				clonedict			} if		dup type /arraytype eq			{				clonearray			} if		def		}forall	currentdict	end}bdf/DeviceN_PS2{	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and} bdf/Indexed_DeviceN{	/indexed_colorspace_dict AGMCORE_gget dup null ne {		/CSD known	}{		pop false	} ifelse} bdf/DeviceN_NoneName{		/Names where {		pop		false Names		{			(None) eq or		} forall	}{		false	}ifelse} bdf/DeviceN_PS2_inRip_seps{	/AGMCORE_in_rip_sep where	{		pop dup type dup /arraytype eq exch /packedarraytype eq or		{			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and			{				/currentcolorspace exch AGMCORE_gput				false			}			{				true			}ifelse		}		{			true		} ifelse	}	{		true	} ifelse} bdf/base_colorspace_type{	dup type /arraytype eq {0 get} if} bdf/doc_setup{	Adobe_AGM_Utils begin}bdf/doc_trailer{	currentdict Adobe_AGM_Utils eq{		end	}if}bdfsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_AGM_Core 2.0 0%%Version: 2.0 0%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Core 216 dict dup begin put/nd{	null def}bind def/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def/AGMCORE_str256 256 string def/AGMCORE_save nd/AGMCORE_graphicsave nd/AGMCORE_c 0 def/AGMCORE_m 0 def/AGMCORE_y 0 def/AGMCORE_k 0 def/AGMCORE_cmykbuf 4 array def/AGMCORE_screen [currentscreen] cvx def/AGMCORE_tmp 0 def/AGMCORE_&setgray nd/AGMCORE_&setcolor nd/AGMCORE_&setcolorspace nd/AGMCORE_&setcmykcolor nd/AGMCORE_cyan_plate nd/AGMCORE_magenta_plate nd/AGMCORE_yellow_plate nd/AGMCORE_black_plate nd/AGMCORE_plate_ndx nd/AGMCORE_get_ink_data nd/AGMCORE_is_cmyk_sep nd/AGMCORE_host_sep nd/AGMCORE_avoid_L2_sep_space nd/AGMCORE_distilling nd/AGMCORE_composite_job nd/AGMCORE_producing_seps nd/AGMCORE_ps_level -1 def/AGMCORE_ps_version -1 def/AGMCORE_environ_ok nd/AGMCORE_CSA_cache 0 dict def/AGMCORE_CSD_cache 0 dict def/AGMCORE_pattern_cache 0 dict def/AGMCORE_currentoverprint false def/AGMCORE_deltaX nd/AGMCORE_deltaY nd/AGMCORE_name nd/AGMCORE_sep_special nd/AGMCORE_err_strings 4 dict def/AGMCORE_cur_err nd/AGMCORE_ovp nd/AGMCORE_current_spot_alias false def/AGMCORE_inverting false def/AGMCORE_feature_dictCount nd/AGMCORE_feature_opCount nd/AGMCORE_feature_ctm nd/AGMCORE_ConvertToProcess false def/AGMCORE_Default_CTM matrix def/AGMCORE_Default_PageSize nd/AGMCORE_currentbg nd/AGMCORE_currentucr nd/AGMCORE_gradientcache 32 dict def/AGMCORE_in_pattern false def/knockout_unitsq nd/AGMCORE_CRD_cache where{	pop}{	/AGMCORE_CRD_cache 0 dict def}ifelse/AGMCORE_key_known{	where{		/Adobe_AGM_Core_Id known	}{		false	}ifelse}ndf/flushinput{	save	2 dict begin	/CompareBuffer 3 -1 roll def	/readbuffer 256 string def	mark	{	currentfile readbuffer {readline} stopped		{cleartomark mark}		{		not			{pop exit}		if		CompareBuffer eq			{exit}		if		}ifelse	}loop	cleartomark	end	restore}bdf/getspotfunction{	AGMCORE_screen exch pop exch pop	dup type /dicttype eq{		dup /HalftoneType get 1 eq{			/SpotFunction get		}{			dup /HalftoneType get 2 eq{				/GraySpotFunction get			}{ 				pop				{					abs exch abs 2 copy add 1 gt{						1 sub dup mul exch 1 sub dup mul add 1 sub					}{						dup mul exch dup mul add 1 exch sub					}ifelse				}bind			}ifelse		}ifelse	}if} def/clp_npth{	clip newpath} def/eoclp_npth{	eoclip newpath} def/npth_clp{	newpath clip} def/add_grad{	AGMCORE_gradientcache 3 1 roll put}bdf/exec_grad{	AGMCORE_gradientcache exch get exec}bdf/graphic_setup{	/AGMCORE_graphicsave save def	concat	0 setgray	0 setlinecap	0 setlinejoin	1 setlinewidth	[] 0 setdash	10 setmiterlimit	newpath	false setoverprint	false setstrokeadjust	Adobe_AGM_Core/spot_alias get exec	/Adobe_AGM_Image where {		pop		Adobe_AGM_Image/spot_alias 2 copy known{			get exec		}{			pop pop		}ifelse	} if	100 dict begin	/dictstackcount countdictstack def	/showpage {} def	mark} def/graphic_cleanup{	cleartomark	dictstackcount 1 countdictstack 1 sub {end}for	end	AGMCORE_graphicsave restore} def/compose_error_msg{	grestoreall initgraphics		/Helvetica findfont 10 scalefont setfont	/AGMCORE_deltaY 100 def	/AGMCORE_deltaX 310 def	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath	0 AGMCORE_&setgray	gsave 1 AGMCORE_&setgray fill grestore 	1 setlinewidth gsave stroke grestore	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto	/AGMCORE_deltaY 12 def	/AGMCORE_tmp 0 def	AGMCORE_err_strings exch get		{		dup 32 eq			{			pop			AGMCORE_str256 0 AGMCORE_tmp getinterval			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt				{				currentpoint AGMCORE_deltaY sub exch pop				clippath pathbbox pop pop pop 44 add exch moveto				} if			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show			0 1 AGMCORE_str256 length 1 sub				{				AGMCORE_str256 exch 0 put				}for			/AGMCORE_tmp 0 def			}			{				AGMCORE_str256 exch AGMCORE_tmp xpt				/AGMCORE_tmp AGMCORE_tmp 1 add def			} ifelse		} forall} bdf/doc_setup{	Adobe_AGM_Core begin	/AGMCORE_ps_version xdf	/AGMCORE_ps_level xdf	errordict /AGM_handleerror known not{		errordict /AGM_handleerror errordict /handleerror get put		errordict /handleerror {			Adobe_AGM_Core begin			$error /newerror get AGMCORE_cur_err null ne and{				$error /newerror false put				AGMCORE_cur_err compose_error_msg			}if			$error /newerror true put			end			errordict /AGM_handleerror get exec			} bind put		}if	/AGMCORE_environ_ok 		ps_level AGMCORE_ps_level ge		ps_version AGMCORE_ps_version ge and 		AGMCORE_ps_level -1 eq or	def	AGMCORE_environ_ok not		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if	/AGMCORE_&setgray systemdict/setgray get def	level2{		/AGMCORE_&setcolor systemdict/setcolor get def		/AGMCORE_&setcolorspace systemdict/setcolorspace get def	}if	/AGMCORE_currentbg currentblackgeneration def	/AGMCORE_currentucr currentundercolorremoval def	/AGMCORE_distilling		/product where{			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and		}{			false		}ifelse	def	level2 not{		/xput{			dup load dup length exch maxlength eq{				dup dup load dup				length dup 0 eq {pop 1} if 2 mul dict copy def			}if			load begin				def 			end		}def	}{		/xput{			load 3 1 roll put		}def	}ifelse	/AGMCORE_GSTATE AGMCORE_key_known not{		/AGMCORE_GSTATE 21 dict def		/AGMCORE_tmpmatrix matrix def		/AGMCORE_gstack 32 array def		/AGMCORE_gstackptr 0 def		/AGMCORE_gstacksaveptr 0 def		/AGMCORE_gstackframekeys 10 def		/AGMCORE_&gsave /gsave ldf		/AGMCORE_&grestore /grestore ldf		/AGMCORE_&grestoreall /grestoreall ldf		/AGMCORE_&save /save ldf		/AGMCORE_gdictcopy {			begin			{ def } forall			end		}def		/AGMCORE_gput {			AGMCORE_gstack AGMCORE_gstackptr get			3 1 roll			put		}def		/AGMCORE_gget {			AGMCORE_gstack AGMCORE_gstackptr get			exch			get		}def		/gsave {			AGMCORE_&gsave			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		/grestore {			AGMCORE_&grestore			AGMCORE_gstackptr 1 sub			dup AGMCORE_gstacksaveptr lt {1 add} if			Adobe_AGM_Core exch			/AGMCORE_gstackptr xpt		}def		/grestoreall {			AGMCORE_&grestoreall			Adobe_AGM_Core			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 		}def		/save {			AGMCORE_&save			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gstackptr 1 add			dup 32 ge {limitcheck} if			Adobe_AGM_Core begin				/AGMCORE_gstackptr exch def				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def			end			AGMCORE_gstack AGMCORE_gstackptr get			AGMCORE_gdictcopy		}def		0 1 AGMCORE_gstack length 1 sub {				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put		} for	}if	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and	{		/AGMCORE_&sysshfill systemdict/shfill get def		/AGMCORE_&usrshfill /shfill load def		/AGMCORE_&sysmakepattern systemdict/makepattern get def		/AGMCORE_&usrmakepattern /makepattern load def	}if	/currentcmykcolor [0 0 0 0] AGMCORE_gput	/currentstrokeadjust false AGMCORE_gput	/currentcolorspace [/DeviceGray] AGMCORE_gput	/sep_tint 0 AGMCORE_gput	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput	/sep_colorspace_dict null AGMCORE_gput	/devicen_colorspace_dict null AGMCORE_gput	/indexed_colorspace_dict null AGMCORE_gput	/currentcolor_intent () AGMCORE_gput	/customcolor_tint 1 AGMCORE_gput	<<	/MaxPatternItem currentsystemparams /MaxPatternCache get	>>	setuserparams	end}def/page_setup{	/setcmykcolor where{		pop		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put	}if	Adobe_AGM_Core begin	/setcmykcolor	{		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput		1 sub 4 1 roll		3 {			3 index add neg dup 0 lt {				pop 0			} if			3 1 roll		} repeat		setrgbcolor pop	}ndf	/currentcmykcolor	{		/currentcmykcolor AGMCORE_gget aload pop	}ndf	/setoverprint	{		pop	}ndf	/currentoverprint	{		false	}ndf	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def	/AGMCORE_plate_ndx 		AGMCORE_cyan_plate{ 			0		}{			AGMCORE_magenta_plate{				1			}{				AGMCORE_yellow_plate{					2				}{					AGMCORE_black_plate{						3					}{						4					}ifelse				}ifelse			}ifelse		}ifelse		def	/AGMCORE_have_reported_unsupported_color_space false def	/AGMCORE_report_unsupported_color_space	{		AGMCORE_have_reported_unsupported_color_space false eq		{			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf		} if	}def	/AGMCORE_composite_job		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def	/AGMCORE_in_rip_sep		/AGMCORE_in_rip_sep where{			pop AGMCORE_in_rip_sep		}{			AGMCORE_distilling 			{				false			}{				userdict/Adobe_AGM_OnHost_Seps known{					false				}{					level2{						currentpagedevice/Separations 2 copy known{							get						}{							pop pop false						}ifelse					}{						false					}ifelse				}ifelse			}ifelse		}ifelse	def	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def	/AGM_preserve_spots 		/AGM_preserve_spots where{			pop AGM_preserve_spots		}{			AGMCORE_distilling AGMCORE_producing_seps or		}ifelse	def	/AGM_is_distiller_preserving_spotimages	{		currentdistillerparams/PreserveOverprintSettings known		{			currentdistillerparams/PreserveOverprintSettings get				{					currentdistillerparams/ColorConversionStrategy known					{						currentdistillerparams/ColorConversionStrategy get						/LeaveColorUnchanged eq					}{						true					}ifelse				}{					false				}ifelse		}{			false		}ifelse	}def	/convert_spot_to_process where {pop}{		/convert_spot_to_process		{			dup map_alias {				/Name get exch pop			} if			dup dup (None) eq exch (All) eq or				{				pop false				}{				AGMCORE_host_sep				{ 					gsave					1 0 0 0 setcmykcolor currentgray 1 exch sub					0 1 0 0 setcmykcolor currentgray 1 exch sub					0 0 1 0 setcmykcolor currentgray 1 exch sub					0 0 0 1 setcmykcolor currentgray 1 exch sub					add add add 0 eq					{						pop false					}{						false setoverprint						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor						currentgray 0 eq					}ifelse					grestore				}{					AGMCORE_distilling					{						pop AGM_is_distiller_preserving_spotimages not					}{						Adobe_AGM_Core/AGMCORE_name xddf						false						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse						not currentpagedevice/OverrideSeparations known and							{							currentpagedevice/OverrideSeparations get								{								/HqnSpots /ProcSet resourcestatus									{									pop pop pop true									}if								}if							}if												{							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not							}{							gsave							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace							false							currentpagedevice/SeparationColorNames 2 copy known							{								get								{ AGMCORE_name eq or}forall							not							}{								pop pop pop true							}ifelse							grestore						}ifelse					}ifelse				}ifelse			}ifelse		}def	}ifelse	/convert_to_process where {pop}{		/convert_to_process		{			dup length 0 eq				{				pop false				}{				AGMCORE_host_sep				{ 				dup true exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or						{pop}						{convert_spot_to_process and}ifelse					}				forall					{					true exch						{						dup (Cyan) eq exch						dup (Magenta) eq 3 -1 roll or exch						dup (Yellow) eq 3 -1 roll or exch						(Black) eq or and						}forall						not					}{pop false}ifelse				}{				false exch					{					dup (Cyan) eq exch					dup (Magenta) eq 3 -1 roll or exch					dup (Yellow) eq 3 -1 roll or exch					dup (Black) eq 3 -1 roll or					{pop}					{convert_spot_to_process or}ifelse					}				forall				}ifelse			}ifelse		}def	}ifelse		/AGMCORE_avoid_L2_sep_space  		version cvr 2012 lt 		level2 and 		AGMCORE_producing_seps not and	def	/AGMCORE_is_cmyk_sep		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or	def	/AGM_avoid_0_cmyk where{		pop AGM_avoid_0_cmyk	}{		AGM_preserve_spots 		userdict/Adobe_AGM_OnHost_Seps known 		userdict/Adobe_AGM_InRip_Seps known or		not and	}ifelse	{		/setcmykcolor[			{				4 copy add add add 0 eq currentoverprint and{					pop 0.0005				}if			}/exec cvx			/AGMCORE_&setcmykcolor load dup type/operatortype ne{				/exec cvx			}if		]cvx def	}if	AGMCORE_host_sep{		/setcolortransfer		{ 			AGMCORE_cyan_plate{				pop pop pop			}{			  	AGMCORE_magenta_plate{			  		4 3 roll pop pop pop			  	}{			  		AGMCORE_yellow_plate{			  			4 2 roll pop pop pop			  		}{			  			4 1 roll pop pop pop			  		}ifelse			  	}ifelse			}ifelse			settransfer  		}			def		/AGMCORE_get_ink_data			AGMCORE_cyan_plate{				{pop pop pop}			}{			  	AGMCORE_magenta_plate{			  		{4 3 roll pop pop pop}			  	}{			  		AGMCORE_yellow_plate{			  			{4 2 roll pop pop pop}			  		}{			  			{4 1 roll pop pop pop}			  		}ifelse			  	}ifelse			}ifelse		def		/AGMCORE_RemoveProcessColorNames			{			1 dict begin			/filtername				{				dup /Cyan eq 1 index (Cyan) eq or					{pop (_cyan_)}if				dup /Magenta eq 1 index (Magenta) eq or					{pop (_magenta_)}if				dup /Yellow eq 1 index (Yellow) eq or					{pop (_yellow_)}if				dup /Black eq 1 index (Black) eq or					{pop (_black_)}if				}def			dup type /arraytype eq				{[exch {filtername}forall]}				{filtername}ifelse			end			}def		/AGMCORE_IsSeparationAProcessColor			{			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or			}def		level3 {			/AGMCORE_IsCurrentColor				{				gsave				false setoverprint				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor				currentgray 0 eq 				grestore				}def			/AGMCORE_filter_functiondatasource				{					5 dict begin				/data_in xdf				data_in type /stringtype eq					{					/ncomp xdf					/comp xdf					/string_out data_in length ncomp idiv string def					0 ncomp data_in length 1 sub						{						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put						}for					string_out					}{					string /string_in xdf					/string_out 1 string def					/component xdf					[					data_in string_in /readstring cvx						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx						[/pop cvx ()]cvx /ifelse cvx					]cvx /ReusableStreamDecode filter				}ifelse				end				}def			/AGMCORE_separateShadingFunction				{				2 dict begin				/paint? xdf				/channel xdf					begin					FunctionType 0 eq						{						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def						currentdict /Decode known							{/Decode Decode channel 2 mul 2 getinterval def}if						paint? not							{/Decode [1 1]def}if						}if					FunctionType 2 eq						{						paint?							{							/C0 [C0 channel get 1 exch sub] def							/C1 [C1 channel get 1 exch sub] def							}{							/C0 [1] def							/C1 [1] def							}ifelse									}if					FunctionType 3 eq						{						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def									}if					currentdict /Range known						{/Range [0 1] def}if					currentdict					end				end				}def			/AGMCORE_separateShading				{				3 -1 roll begin				currentdict /Function known					{					currentdict /Background known						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf					/ColorSpace [/DeviceGray] def					}{					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq						{						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def						}{						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put						}ifelse					ColorSpace 0 get /Separation eq						{							{								[1 /exch cvx /sub cvx]cvx							}{								[/pop cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll put							pop						}{							{								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx							}{								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx							}ifelse							ColorSpace 3 3 -1 roll bind put						}ifelse					ColorSpace 2 /DeviceGray put																							}ifelse				end				}def			/AGMCORE_separateShadingDict				{				dup /ColorSpace get				dup type /arraytype ne					{[exch]}if				dup 0 get /DeviceCMYK eq					{					exch begin 					currentdict					AGMCORE_cyan_plate						{0 true}if					AGMCORE_magenta_plate						{1 true}if					AGMCORE_yellow_plate						{2 true}if					AGMCORE_black_plate						{3 true}if					AGMCORE_plate_ndx 4 eq						{0 false}if							dup not currentoverprint and						{/AGMCORE_ignoreshade true def}if					AGMCORE_separateShading					currentdict					end exch					}if				dup 0 get /Separation eq					{					exch begin					ColorSpace 1 get dup /None ne exch /All ne and						{						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and							{							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 								{								/ColorSpace									[									/Separation									ColorSpace 1 get									/DeviceGray										[										ColorSpace 3 get /exec cvx										4 AGMCORE_plate_ndx sub -1 /roll cvx										4 1 /roll cvx										3 [/pop cvx]cvx /repeat cvx										1 /exch cvx /sub cvx										]cvx																		]def								}{								AGMCORE_report_unsupported_color_space								AGMCORE_black_plate not									{									currentdict 0 false AGMCORE_separateShading									}if								}ifelse							}{							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor							0 exch 							dup not currentoverprint and								{/AGMCORE_ignoreshade true def}if							AGMCORE_separateShading							}ifelse							}if								currentdict					end exch					}if				dup 0 get /DeviceN eq					{					exch begin					ColorSpace 1 get convert_to_process						{						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 							{							/ColorSpace								[								/DeviceN								ColorSpace 1 get								/DeviceGray									[									ColorSpace 3 get /exec cvx									4 AGMCORE_plate_ndx sub -1 /roll cvx									4 1 /roll cvx									3 [/pop cvx]cvx /repeat cvx									1 /exch cvx /sub cvx									]cvx																	]def							}{							AGMCORE_report_unsupported_color_space							AGMCORE_black_plate not								{								currentdict 0 false AGMCORE_separateShading								/ColorSpace [/DeviceGray] def								}if							}ifelse						}{						currentdict						false -1 ColorSpace 1 get							{							AGMCORE_IsCurrentColor								{								1 add								exch pop true exch exit								}if							1 add							}forall						exch 						dup not currentoverprint and							{/AGMCORE_ignoreshade true def}if						AGMCORE_separateShading						}ifelse					currentdict					end exch					}if				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not					{					exch begin					ColorSpace dup type /arraytype eq						{0 get}if					/DeviceGray ne						{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate not							{							ColorSpace 0 get /CIEBasedA eq								{								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def								}if							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or								{								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def								}if							ColorSpace 0 get /CIEBasedDEFG eq								{								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]								}if							currentdict 0 false AGMCORE_separateShading							}if						}if					currentdict					end exch					}if				pop				dup /AGMCORE_ignoreshade known					{					begin					/ColorSpace [/Separation (None) /DeviceGray {}] def					currentdict end					}if				}def			/shfill				{				clonedict				AGMCORE_separateShadingDict 				dup /AGMCORE_ignoreshade known					{pop}					{AGMCORE_&sysshfill}ifelse				}def			/makepattern				{				exch				dup /PatternType get 2 eq					{					clonedict					begin					/Shading Shading AGMCORE_separateShadingDict def					currentdict end					exch AGMCORE_&sysmakepattern					}{					exch AGMCORE_&usrmakepattern					}ifelse				}def		}if	}if	AGMCORE_in_rip_sep{		/setcustomcolor		{			exch aload pop			dup 7 1 roll inRip_spot_has_ink not	{ 				4 {4 index mul 4 1 roll}				repeat				/DeviceCMYK setcolorspace				6 -2 roll pop pop			}{ 				Adobe_AGM_Core begin					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf				end				[/Separation 4 -1 roll /DeviceCMYK				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}				]				setcolorspace			}ifelse			setcolor		}ndf		/setseparationgray		{			[/Separation (All) /DeviceGray {}] setcolorspace_opt			1 exch sub setcolor		}ndf	}{		/setseparationgray		{			AGMCORE_&setgray		}ndf	}ifelse	/findcmykcustomcolor	{		5 makereadonlyarray	}ndf	/setcustomcolor	{		exch aload pop pop		4 {4 index mul 4 1 roll} repeat		setcmykcolor pop	}ndf	/has_color		/colorimage where{			AGMCORE_producing_seps{				pop true			}{				systemdict eq			}ifelse		}{			false		}ifelse	def	/map_index	{		1 index mul exch getinterval {255 div} forall	} bdf	/map_indexed_devn	{		Lookup Names length 3 -1 roll cvi map_index	} bdf	/n_color_components	{		base_colorspace_type		dup /DeviceGray eq{			pop 1		}{			/DeviceCMYK eq{				4			}{				3			}ifelse		}ifelse	}bdf	level2{		/mo /moveto ldf		/li /lineto ldf		/cv /curveto ldf		/knockout_unitsq		{			1 setgray			0 0 1 1 rectfill		}def		/level2ScreenFreq{			begin			60			HalftoneType 1 eq{				pop Frequency			}if			HalftoneType 2 eq{				pop GrayFrequency			}if			HalftoneType 5 eq{				pop Default level2ScreenFreq			}if			 end		}def		/currentScreenFreq{			currenthalftone level2ScreenFreq		}def		level2 /setcolorspace AGMCORE_key_known not and{			/AGMCORE_&&&setcolorspace /setcolorspace ldf			/AGMCORE_ReplaceMappedColor			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get dup /Separation eq					{						pop						dup length array copy						dup dup 1 get						current_spot_alias						{							dup map_alias							{								begin								/sep_colorspace_dict currentdict AGMCORE_gput								pop pop	pop								[ 									/Separation Name 									CSA map_csa									dup /MappedCSA xdf 									/sep_colorspace_proc load								]								dup Name								end							}if						}if						map_reserved_ink_name 1 xpt					}{						/DeviceN eq 						{							dup length array copy							dup dup 1 get [ 								exch {									current_spot_alias{										dup map_alias{											/Name get exch pop										}if									}if									map_reserved_ink_name								} forall 							] 1 xpt						}if					}ifelse				}if			}def			/setcolorspace			{				dup type dup /arraytype eq exch /packedarraytype eq or				{					dup 0 get /Indexed eq					{						AGMCORE_distilling						{							/PhotoshopDuotoneList where							{								pop false							}{								true							}ifelse						}{							true						}ifelse						{							aload pop 3 -1 roll							AGMCORE_ReplaceMappedColor							3 1 roll 4 array astore						}if					}{						AGMCORE_ReplaceMappedColor					}ifelse				}if				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if			}def		}if		}{		/adj		{			currentstrokeadjust{				transform				0.25 sub round 0.25 add exch				0.25 sub round 0.25 add exch				itransform			}if		}def		/mo{			adj moveto		}def		/li{			adj lineto		}def		/cv{			6 2 roll adj			6 2 roll adj			6 2 roll adj curveto		}def		/knockout_unitsq		{			1 setgray			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image		}def		/currentstrokeadjust{			/currentstrokeadjust AGMCORE_gget		}def		/setstrokeadjust{			/currentstrokeadjust exch AGMCORE_gput		}def		/currentScreenFreq{			currentscreen pop pop		}def		/setcolorspace		{			/currentcolorspace exch AGMCORE_gput		} def		/currentcolorspace		{			/currentcolorspace AGMCORE_gget		} def		/setcolor_devicecolor		{			base_colorspace_type			dup /DeviceGray eq{				pop setgray			}{				/DeviceCMYK eq{					setcmykcolor				}{					setrgbcolor				}ifelse			}ifelse		}def		/setcolor		{			currentcolorspace 0 get			dup /DeviceGray ne{				dup /DeviceCMYK ne{					dup /DeviceRGB ne{						dup /Separation eq{							pop							currentcolorspace 3 get exec							currentcolorspace 2 get						}{							dup /Indexed eq{								pop								currentcolorspace 3 get dup type /stringtype eq{									currentcolorspace 1 get n_color_components									3 -1 roll map_index								}{									exec								}ifelse								currentcolorspace 1 get							}{								/AGMCORE_cur_err /AGMCORE_invalid_color_space def								AGMCORE_invalid_color_space							}ifelse						}ifelse					}if				}if			}if			setcolor_devicecolor		} def	}ifelse	/sop /setoverprint ldf	/lw /setlinewidth ldf	/lc /setlinecap ldf	/lj /setlinejoin ldf	/ml /setmiterlimit ldf	/dsh /setdash ldf	/sadj /setstrokeadjust ldf	/gry /setgray ldf	/rgb /setrgbcolor ldf	/cmyk /setcmykcolor ldf	/sep /setsepcolor ldf	/devn /setdevicencolor ldf	/idx /setindexedcolor ldf	/colr /setcolor ldf	/csacrd /set_csa_crd ldf	/sepcs /setsepcolorspace ldf	/devncs /setdevicencolorspace ldf	/idxcs /setindexedcolorspace ldf	/cp /closepath ldf	/clp /clp_npth ldf	/eclp /eoclp_npth ldf	/f /fill ldf	/ef /eofill ldf	/@ /stroke ldf	/nclp /npth_clp ldf	/gset /graphic_setup ldf	/gcln /graphic_cleanup ldf	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {			bind		}if		def	}forall	/currentpagedevice currentpagedevice def/getrampcolor {/indx exch def0 1 NumComp 1 sub {dupSamples exch getdup type /stringtype eq { indx get } ifexchScaling exch get aload pop3 1 rollmul add} forColorSpaceFamily /Separation eq	{	sep	}	{	ColorSpaceFamily /DeviceN eq		{		devn		}		{		setcolor		}ifelse	}ifelse} bind def/sssetbackground { aload pop setcolor } bind def/RadialShade {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/r2 exch def/c2y exch def/c2x exch def/r1 exch def/c1y exch def/c1x exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifc1x c2x eq{c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse}{/slope c2y c1y sub c2x c1x sub div def/theta slope 1 atan defc2x c1x lt c2y c1y ge and { /theta theta 180 sub def} ifc2x c1x lt c2y c1y lt and { /theta theta 180 add def} if}ifelsegsaveclippathc1x c1y translatetheta rotate-90 rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{/max { 2 copy gt { pop } {exch pop} ifelse } bind def/min { 2 copy lt { pop } {exch pop} ifelse } bind deframpdict begin40 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavec1x c1y translatetheta rotate-90 rotate/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def/c1y 0 def/c1x 0 def/c2x 0 defext0 {0 getrampcolorc2y r2 add r1 sub 0.0001 lt{c1x c1y r1 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2y r1 add r2 le{c1x c1y r1 0 360 arcfill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r1 neg def/p1y c1y def/p2x r1 def/p2y c1y defp1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y p1x SS1 div neg def/SS2 90 theta sub dup sin exch cos div def/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y p2x SS2 div neg defr1 r2 gt{/L1maxX p1x yMin p1y sub SS1 div add def/L2maxX p2x yMin p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifc1x c2x sub dup mulc1y c2y sub dup muladd 0.5 exp0 dtransformdup mul exch dup mul add 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if pop/hires exch defhires mul/numpix exch def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} if/xInc c2x c1x sub numsteps div def/yInc c2y c1y sub numsteps div def/rInc r2 r1 sub numsteps div def/cx c1x def/cy c1y def/radius r1 defnewpathxInc 0 eq yInc 0 eq rInc 0 eq and and{0 getrampcolorcx cy radius 0 360 arcstrokeNumSamples 1 sub getrampcolorcx cy radius 72 hires div add 0 360 arc0 setlinewidthstroke}{0numsteps{dupsubsampling { round cvi } ifgetrampcolorcx cy radius 0 360 arc/cx cx xInc add def/cy cy yInc add def/radius radius rInc add defcx cy radius 360 0 arcneofillrampIndxInc add}repeatpop} ifelseext1 {c2y r2 add r1 lt{c2x c2y r2 0 360 arcfill}{c2y r1 add r2 sub 0.0001 le{c2x c2y r2 360 0 arcnpathbbox/aymax exch def/axmax exch def/aymin exch def/axmin exch def/bxMin xMin axmin min def/byMin yMin aymin min def/bxMax xMax axmax max def/byMax yMax aymax max defbxMin byMin movetobxMax byMin linetobxMax byMax linetobxMin byMax linetobxMin byMin linetoeofill}{c2x c2y r2 0 360 arc fillr1 r2 eq{/p1x r2 neg def/p1y c2y def/p2x r2 def/p2y c2y defp1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax linetofill}{/AA r2 r1 sub c2y div def/theta AA 1 AA dup mul sub sqrt div 1 atan def/SS1 90 theta add dup sin exch cos div def/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def/p1y c2y p1x SS1 div sub def/SS2 90 theta sub dup sin exch cos div def/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def/p2y c2y p2x SS2 div sub defr1 r2 lt{/L1maxX p1x yMax p1y sub SS1 div add def/L2maxX p2x yMax p2y sub SS2 div add def}{/L1maxX 0 def/L2maxX 0 def}ifelsep1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add linetoL1maxX L1maxX p1x sub SS1 mul p1y add linetofill}ifelse}ifelse} ifelse} ifgrestoregrestoreendendend} ifelse} bind def/GenStrips {40 dict begin/ColorSpaceFamily exch def/background exch def/ext1 exch def/ext0 exch def/BBox exch def/y2 exch def/x2 exch def/y1 exch def/x1 exch def/rampdict exch def/setinkoverprint where {pop /setinkoverprint{pop}def}ifgsaveBBox length 0 gt {newpathBBox 0 get BBox 1 get movetoBBox 2 get BBox 0 get sub 0 rlineto0 BBox 3 get BBox 1 get sub rlinetoBBox 2 get BBox 0 get sub neg 0 rlinetoclosepathclipnewpath} ifx1 x2 eq{y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse}{/slope y2 y1 sub x2 x1 sub div def/theta slope 1 atan defx2 x1 lt y2 y1 ge and { /theta theta 180 sub def} ifx2 x1 lt y2 y1 lt and { /theta theta 180 add def} if}ifelsegsaveclippathx1 y1 translatetheta rotate{ pathbbox } stopped{ 0 0 0 0 } if/yMax exch def/xMax exch def/yMin exch def/xMin exch defgrestorexMax xMin eq yMax yMin eq or{grestoreend}{rampdict begin20 dict beginbackground length 0 gt { background sssetbackground gsave clippath fill grestore } ifgsavex1 y1 translatetheta rotate/xStart 0 def/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def/ySpan yMax yMin sub def/numsteps NumSamples def/rampIndxInc 1 def/subsampling false defxStart 0 transformxEnd 0 transform3 -1 rollsub dup mul3 1 rollsub dup muladd 0.5 exp 72 div0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt1 index 1 index lt { exch } if popmul/numpix exch defnumpix 0 ne{NumSamples numpix div 0.5 gt{/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def/rampIndxInc NumSamples 1 sub numsteps div def/subsampling true def} if} ifext0 {0 getrampcolorxMin xStart lt{ xMin yMin xMin neg ySpan rectfill } if} if/xInc xEnd xStart sub numsteps div def/x xStart def0numsteps{dupsubsampling { round cvi } ifgetrampcolorx yMin xInc ySpan rectfill/x x xInc add deframpIndxInc add}repeatpopext1 {xMax xEnd gt{ xEnd yMin xMax xEnd sub ySpan rectfill } if} ifgrestoregrestoreendendend} ifelse} bind def}def/page_trailer{	end}def/doc_trailer{}defsystemdict /findcolorrendering known{	/findcolorrendering systemdict /findcolorrendering get def}ifsystemdict /setcolorrendering known{	/setcolorrendering systemdict /setcolorrendering get def}if/test_cmyk_color_plate{	gsave	setcmykcolor currentgray 1 ne	grestore}def/inRip_spot_has_ink{	dup Adobe_AGM_Core/AGMCORE_name xddf	convert_spot_to_process not}def/map255_to_range{	1 index sub	3 -1 roll 255 div mul add}def/set_csa_crd{	/sep_colorspace_dict null AGMCORE_gput	begin		CSA map_csa setcolorspace_opt		set_crd	end}def/setsepcolor{ 	/sep_colorspace_dict AGMCORE_gget begin		dup /sep_tint exch AGMCORE_gput		TintProc	end} def/setdevicencolor{ 	/devicen_colorspace_dict AGMCORE_gget begin		Names length copy		Names length 1 sub -1 0		{			/devicen_tints AGMCORE_gget 3 1 roll xpt		} for		TintProc	end} def/sep_colorspace_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	currentdict/Components known{		Components aload pop 		TintMethod/Lab eq{			2 {AGMCORE_tmp mul NComponents 1 roll} repeat			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll		}{			TintMethod/Subtractive eq{				NComponents{					AGMCORE_tmp mul NComponents 1 roll				}repeat			}{				NComponents{					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll				} repeat			}ifelse		}ifelse	}{		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get		aload pop	}ifelse	end} def/sep_colorspace_gray_proc{	Adobe_AGM_Core/AGMCORE_tmp xddf	/sep_colorspace_dict AGMCORE_gget begin	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get	end} def/sep_proc_name{	dup 0 get 	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{		pop [/DeviceGray]		/sep_colorspace_gray_proc	}{		/sep_colorspace_proc	}ifelse} def/setsepcolorspace{ 	current_spot_alias{		dup begin			Name map_alias{				exch pop			}if		end	}if	dup /sep_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf	AGMCORE_avoid_L2_sep_space{		[/Indexed MappedCSA sep_proc_name 255 exch 			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 		] setcolorspace_opt		/TintProc {			255 mul round cvi setcolor		}bdf	}{		MappedCSA 0 get /DeviceCMYK eq 		currentdict/Components known and 		AGMCORE_sep_special not and{			/TintProc [				Components aload pop Name findcmykcustomcolor 				/exch cvx /setcustomcolor cvx			] cvx bdf		}{ 			AGMCORE_host_sep Name (All) eq and{ 				/TintProc { 					1 exch sub setseparationgray 				}bdf 			}{				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 				AGMCORE_host_sep or				Name () eq and{					/TintProc [						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{							cvx /setcmykcolor cvx						}{							cvx /setgray cvx						}ifelse					] cvx bdf				}{					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{	 					/TintProc [							/dup cvx							MappedCSA sep_proc_name cvx exch							0 get /DeviceGray eq{								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx							}if							/Name cvx /findcmykcustomcolor cvx /exch cvx							AGMCORE_host_sep{								AGMCORE_is_cmyk_sep								/Name cvx 								/AGMCORE_IsSeparationAProcessColor load /exec cvx								/not cvx /and cvx 							}{								Name inRip_spot_has_ink not							}ifelse							[		 						/pop cvx 1							] cvx /if cvx							/setcustomcolor cvx						] cvx bdf 					}{ 						/TintProc /setcolor ldf						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt					}ifelse				}ifelse			}ifelse		}ifelse	}ifelse	set_crd	setsepcolor	end} def/additive_blend{  	3 dict begin  	/numarrays xdf  	/numcolors xdf  	0 1 numcolors 1 sub  		{  		/c1 xdf  		1  		0 1 numarrays 1 sub  			{			1 exch add /index cvx  			c1 /get cvx /mul cvx  			}for 		numarrays 1 add 1 /roll cvx   		}for 	numarrays [/pop cvx] cvx /repeat cvx  	end}def/subtractive_blend{	3 dict begin	/numarrays xdf	/numcolors xdf	0 1 numcolors 1 sub		{		/c1 xdf		1 1		0 1 numarrays 1 sub			{			1 3 3 -1 roll add /index cvx  			c1 /get cvx /sub cvx /mul cvx			}for		/sub cvx		numarrays 1 add 1 /roll cvx		}for	numarrays [/pop cvx] cvx /repeat cvx	end}def/exec_tint_transform{	/TintProc [		/TintTransform cvx /setcolor cvx	] cvx bdf	MappedCSA setcolorspace_opt} bdf/devn_makecustomcolor{	2 dict begin	/names_index xdf	/Names xdf	1 1 1 1 Names names_index get findcmykcustomcolor	/devicen_tints AGMCORE_gget names_index get setcustomcolor	Names length {pop} repeat	end} bdf/setdevicencolorspace{ 	dup /AliasedColorants known {false}{true}ifelse 	current_spot_alias and {		6 dict begin		/names_index 0 def		dup /names_len exch /Names get length def		/new_names names_len array def		/new_LookupTables names_len array def		/alias_cnt 0 def		dup /Names get		{			dup map_alias {				exch pop				dup /ColorLookup known {					dup begin					new_LookupTables names_index ColorLookup put					end				}{					dup /Components known {						dup begin						new_LookupTables names_index Components put						end					}{						dup begin						new_LookupTables names_index [null null null null] put						end					} ifelse				} ifelse				new_names names_index 3 -1 roll /Name get put				/alias_cnt alias_cnt 1 add def 			}{				/name xdf								new_names names_index name put				dup /LookupTables known {					dup begin					new_LookupTables names_index LookupTables names_index get put					end				}{					dup begin					new_LookupTables names_index [null null null null] put					end				} ifelse			} ifelse			/names_index names_index 1 add def 		} forall		alias_cnt 0 gt {			/AliasedColorants true def			0 1 names_len 1 sub {				/names_index xdf				new_LookupTables names_index get 0 get null eq {					dup /Names get names_index get /name xdf					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq					or or or not {						/AliasedColorants false def						exit					} if				} if			} for			AliasedColorants {				dup begin				/Names new_names def				/AliasedColorants true def				/LookupTables new_LookupTables def				currentdict /TTTablesIdx known not {					/TTTablesIdx -1 def				} if				currentdict /NComponents known not {					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def				} if				end			} if		}if		end	} if	dup /devicen_colorspace_dict exch AGMCORE_gput	begin	/MappedCSA CSA map_csa def	currentdict /AliasedColorants known {		AliasedColorants	}{		false	} ifelse	/TintTransform load type /nulltype eq or {		/TintTransform [			0 1 Names length 1 sub				{				/TTTablesIdx TTTablesIdx 1 add def				dup LookupTables exch get dup 0 get null eq					{					1 index					Names exch get					dup (Cyan) eq						{						pop exch						LookupTables length exch sub						/index cvx						0 0 0						}						{						dup (Magenta) eq							{							pop exch							LookupTables length exch sub							/index cvx							0 /exch cvx 0 0							}							{							(Yellow) eq								{								exch								LookupTables length exch sub								/index cvx								0 0 3 -1 /roll cvx 0								}								{								exch								LookupTables length exch sub								/index cvx								0 0 0 4 -1 /roll cvx								} ifelse							} ifelse						} ifelse					5 -1 /roll cvx /astore cvx					}					{					dup length 1 sub					LookupTables length 4 -1 roll sub 1 add					/index cvx /mul cvx /round cvx /cvi cvx /get cvx					} ifelse					Names length TTTablesIdx add 1 add 1 /roll cvx				} for			Names length [/pop cvx] cvx /repeat cvx			NComponents Names length  			TintMethod /Subtractive eq  				{  				subtractive_blend  				}  				{  				additive_blend  				} ifelse		] cvx bdf	} if	AGMCORE_host_sep {		Names convert_to_process {			exec_tint_transform		}		{				currentdict /AliasedColorants known {				AliasedColorants not			}{				false			} ifelse			5 dict begin			/AvoidAliasedColorants xdf			/painted? false def			/names_index 0 def			/names_len Names length def			Names {				AvoidAliasedColorants {					/currentspotalias current_spot_alias def					false set_spot_alias				} if				AGMCORE_is_cmyk_sep {					dup (Cyan) eq AGMCORE_cyan_plate and exch					dup (Magenta) eq AGMCORE_magenta_plate and exch					dup (Yellow) eq AGMCORE_yellow_plate and exch					(Black) eq AGMCORE_black_plate and or or or {						/devicen_colorspace_dict AGMCORE_gget /TintProc [							Names names_index /devn_makecustomcolor cvx						] cvx ddf						/painted? true def					} if					painted? {exit} if				}{					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {					/devicen_colorspace_dict AGMCORE_gget /TintProc [						Names names_index /devn_makecustomcolor cvx					] cvx ddf					/painted? true def					exit					} if				} ifelse				AvoidAliasedColorants {					currentspotalias set_spot_alias				} if				/names_index names_index 1 add def			} forall			painted? {				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put			}{				/devicen_colorspace_dict AGMCORE_gget /TintProc [					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx				] cvx ddf			} ifelse			end		} ifelse	}	{		AGMCORE_in_rip_sep {			Names convert_to_process not		}{			level3		} ifelse		{			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt			/TintProc level3 not AGMCORE_in_rip_sep and {				[					Names /length cvx [/pop cvx] cvx /repeat cvx				] cvx bdf			}{				/setcolor ldf			} ifelse		}{			exec_tint_transform		} ifelse	} ifelse	set_crd	/AliasedColorants false def	end} def/setindexedcolorspace{	dup /indexed_colorspace_dict exch AGMCORE_gput	begin		currentdict /CSD known {			CSD get_csd /Names known {				CSD get_csd begin				currentdict devncs				AGMCORE_host_sep{					4 dict begin					/devnCompCnt Names length def					/NewLookup HiVal 1 add string def					0 1 HiVal {						/tableIndex xdf						Lookup dup type /stringtype eq {							devnCompCnt tableIndex map_index						}{							exec						} ifelse						setdevicencolor						currentgray						tableIndex exch						HiVal mul cvi 						NewLookup 3 1 roll put					} for					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt					end				}{					level3					{					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt					}{					[/Indexed MappedCSA HiVal						[						Lookup dup type /stringtype eq							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}							{/exec cvx}ifelse							/TintTransform load /exec cvx						]cvx					]setcolorspace_opt					}ifelse				} ifelse				end			}{			} ifelse			set_crd		}		{			/MappedCSA CSA map_csa def			AGMCORE_host_sep level2 not and{				0 0 0 0 setcmykcolor			}{				[/Indexed MappedCSA 				level2 not has_color not and{					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{						pop [/DeviceGray]					}if					HiVal GrayLookup				}{					HiVal 					currentdict/RangeArray known{						{ 							/indexed_colorspace_dict AGMCORE_gget begin							Lookup exch 							dup HiVal gt{								pop HiVal							}if							NComponents mul NComponents getinterval {} forall							NComponents 1 sub -1 0{								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range								NComponents 1 roll							}for							end						} bind					}{						Lookup					}ifelse				}ifelse				] setcolorspace_opt				set_crd			}ifelse		}ifelse	end}def/setindexedcolor{	AGMCORE_host_sep {		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {			begin			CSD get_csd begin			map_indexed_devn			devn			end			end		}{			AGMCORE_gget/Lookup get 4 3 -1 roll map_index			pop setcmykcolor		} ifelse	}{		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin			map_indexed_devn			devn			end		}		{			setcolor		} ifelse	}ifelse} def/ignoreimagedata{	currentoverprint not{		gsave		dup clonedict begin		1 setgray		/Decode [0 1] def		/DataSource <FF> def		/MultipleDataSources false def		/BitsPerComponent 8 def		currentdict end		systemdict /image get exec		grestore		}if	consumeimagedata}def/add_csa{	Adobe_AGM_Core begin			/AGMCORE_CSA_cache xput	end}def/get_csa_by_name{	dup type dup /nametype eq exch /stringtype eq or{		Adobe_AGM_Core begin		1 dict begin		/name xdf		AGMCORE_CSA_cache		{			0 get name eq {				exit			}{				pop			} ifelse		}forall		end		end	}{		pop	} ifelse}def/map_csa{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get	}if}def/add_csd{	Adobe_AGM_Core begin		/AGMCORE_CSD_cache xput	end}def/get_csd{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get	}if}def/pattern_buf_init{	/count get 0 0 put} def/pattern_buf_next{	dup /count get dup 0 get	dup 3 1 roll	1 add 0 xpt	get				} def/cachepattern_compress{	5 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	/string_size 16000 def	/readbuffer string_size string def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	/LZWFilter 	{		exch		dup length 0 eq {			pop		}{			patarray dup length 1 sub 3 -1 roll put		} ifelse		{string_size}{0}ifelse string	} /LZWEncode filter def	{ 				ReadFilter readbuffer readstring		exch LZWFilter exch writestring		not {exit} if	} loop	LZWFilter closefile	patarray					end}def/cachepattern{	2 dict begin	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def	/patarray 20 dict def	currentglobal true setglobal 	patarray 1 array dup 0 1 put /count xpt	setglobal	{		ReadFilter 16000 string readstring exch		patarray dup length 1 sub 3 -1 roll put		not {exit} if	} loop	patarray dup dup length 1 sub () put						end	}def/add_pattern{	Adobe_AGM_Core begin		/AGMCORE_pattern_cache xput	end}def/get_pattern{	dup type /nametype eq{		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get		dup wrap_paintproc	}if}def/wrap_paintproc{   statusdict /currentfilenameextend known{	  begin		/OldPaintProc /PaintProc load def		/PaintProc		{		  mark exch		  dup /OldPaintProc get stopped		  {closefile restore end} if		  cleartomark		}  def	  end  } {pop} ifelse} def/make_pattern{	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub	matrix translate exch matrix concatmatrix			  1 index begin		BBox 0 get XStep div cvi XStep mul /xshift exch neg def		BBox 1 get YStep div cvi YStep mul /yshift exch neg def		BBox 0 get xshift add		BBox 1 get yshift add		BBox 2 get xshift add		BBox 3 get yshift add		4 array astore		/BBox exch def		[ xshift yshift /translate load null /exec load ] dup		3 /PaintProc load put cvx /PaintProc exch def		end	gsave 0 setgray	makepattern	grestore}def/set_pattern{	dup /PatternType get 1 eq{		dup /PaintType get 1 eq{			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray		}if	}if	setpattern}def/setcolorspace_opt{	dup currentcolorspace eq{		pop	}{		setcolorspace	}ifelse}def/updatecolorrendering{	currentcolorrendering/Intent known{		currentcolorrendering/Intent get	}{		null	}ifelse	Intent ne{		false  		Intent		AGMCORE_CRD_cache {			exch pop 			begin				dup Intent eq{					currentdict setcolorrendering_opt					end 					exch pop true exch						exit				}if			end		} forall		pop		not{			systemdict /findcolorrendering known{				Intent findcolorrendering pop				/ColorRendering findresource 				dup length dict copy				setcolorrendering_opt			}if		}if	}if} def/add_crd{	AGMCORE_CRD_cache 3 1 roll put}def/set_crd{	AGMCORE_host_sep not level2 and{		currentdict/CRD known{			AGMCORE_CRD_cache CRD get dup null ne{				setcolorrendering_opt			}{				pop			}ifelse		}{			currentdict/Intent known{				updatecolorrendering			}if		}ifelse		currentcolorspace dup type /arraytype eq			{0 get}if		/DeviceRGB eq			{			currentdict/UCR known				{/UCR}{/AGMCORE_currentucr}ifelse			load setundercolorremoval			currentdict/BG known 				{/BG}{/AGMCORE_currentbg}ifelse			load setblackgeneration			}if	}if}def/setcolorrendering_opt{	dup currentcolorrendering eq{		pop	}{		begin			/Intent Intent def			currentdict		end		setcolorrendering	}ifelse}def/cpaint_gcomp{	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not	{		(%end_cpaint_gcomp) flushinput	}if}def/cpaint_gsep{	Adobe_AGM_Core/AGMCORE_ConvertToProcess get	{			(%end_cpaint_gsep) flushinput	}if}def/cpaint_gend{	newpath}def/path_rez{	dup 0 ne{		AGMCORE_deviceDPI exch div 		dup 1 lt{			pop 1		}if		setflat	}{		pop	}ifelse 	}def/set_spot_alias_ary{	/AGMCORE_SpotAliasAry where{		pop pop	}{		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf		true set_spot_alias	}ifelse}def/set_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias 3 -1 roll put	}{		pop	}ifelse}def/current_spot_alias{	/AGMCORE_SpotAliasAry where{		/AGMCORE_current_spot_alias get	}{		false	}ifelse}def/map_alias{	/AGMCORE_SpotAliasAry where{		begin			/AGMCORE_name xdf			false				AGMCORE_SpotAliasAry{				dup/Name get AGMCORE_name eq{					save exch					/Adobe_AGM_Core currentdict def					/CSD get get_csd					exch restore					exch pop true					exit				}{					pop				}ifelse			}forall		end	}{		pop false	}ifelse}bdf/spot_alias{	true set_spot_alias	/AGMCORE_&setcustomcolor AGMCORE_key_known not {		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put	} if	/customcolor_tint 1 AGMCORE_gput	Adobe_AGM_Core begin	/setcustomcolor	{		dup /customcolor_tint exch AGMCORE_gput		current_spot_alias{			1 index 4 get map_alias{				mark 3 1 roll				setsepcolorspace				counttomark 0 ne{					setsepcolor				}if				pop				pop			}{				AGMCORE_&setcustomcolor			}ifelse		}{			AGMCORE_&setcustomcolor		}ifelse	}bdf	end}def/begin_feature{	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if}def/end_feature{	2 dict begin	/spd /setpagedevice load def	/setpagedevice { get_gstate spd set_gstate } def	stopped{$error/newerror false put}if	end	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if}def/set_negative{	Adobe_AGM_Core begin	/AGMCORE_inverting exch def	level2{		currentpagedevice/NegativePrint known{			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{				true begin_feature true{						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice				}end_feature			}if			/AGMCORE_inverting false def		}if	}if	AGMCORE_inverting{		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore	}if	end}def/lw_save_restore_override {	/md where {		pop		md begin		initializepage		/initializepage{}def		/pmSVsetup{} def		/endp{}def		/pse{}def		/psb{}def		/orig_showpage where			{pop}			{/orig_showpage /showpage load def}		ifelse		/showpage {orig_showpage gR} def		end	}if}def/pscript_showpage_override {	/NTPSOct95 where	{		begin		showpage		save		/showpage /restore load def		/restore {exch pop}def		end	}if}def/driver_media_override{	/md where {		pop		md /initializepage known {			md /initializepage {} put		} if		md /rC known {			md /rC {4{pop}repeat} put		} if	}if	/mysetup where {		/mysetup [1 0 0 1 0 0] put	}if	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put	level2		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if}def/driver_check_media_override{	/PrepsDict where		{pop}		{		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq			{			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and			}if			{			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix			}if		}ifelse}defAGMCORE_err_strings begin	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) defendendsystemdict /setpacking known{	setpacking} if%%EndResource%%BeginResource: procset Adobe_CoolType_Core 2.23 0%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.%%Version: 2.23 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }ifuserdict /Adobe_CoolType_Core 60 dict dup begin put/Adobe_CoolType_Version 2.23 def/Level2?	systemdict /languagelevel known dup		{ pop systemdict /languagelevel get 2 ge }	if defLevel2? not	{	/currentglobal false def	/setglobal /pop load def	/gcheck { pop false } bind def	/currentpacking false def	/setpacking /pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpacking/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel		2 copy known not			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }			{			get dup /args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch /args exch put				}				{ pop }			ifelse			}		ifelse			begin			count 2 sub 1 index lt				{ pop count 1 sub }			if			dup /argCount exch def			dup 0 gt				{				exch 1 index 2 add 1 roll				args exch 0 exch getinterval 			astore pop				}				{ pop }			ifelse			count 1 sub /restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		end	} bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{ { pop } repeat }				{ pop }			ifelse			args 0 argCount getinterval {} forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{ { end } repeat }		{ pop }	ifelse	} bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	} bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	} bind def/@ReRaise	{	cvx $error /errorname get errordict exch get exec	stop	} bind def/@Stopped	{	0 @#Stopped	} bind def/@#Stopped	{	@_SaveStackLevels	stopped		{ @_RestoreStackLevels true }		{ @_PopStackLevels false }	ifelse	} bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get		end	} bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup begin		mark			{				(*) { pop stop } 128 string /Category			resourceforall			}		stopped		cleartomark		currentdict eq dup			{ end }		if		not		}		{ false }	ifelse	def/CTHasResourceStatusBug	Level2?		{		mark			{ /steveamerige /Category resourcestatus }		stopped			{ cleartomark true }			{ cleartomark currentglobal not }		ifelse		}		{ false }	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec				{ cleartomark false }				{ { 3 2 roll pop true } { cleartomark false } ifelse }			ifelse			end		} bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad /ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup /CMap CTHasResourceStatusBug						{ CTResourceStatus }						{ resourcestatus }					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup /CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{ exit }								{ stop }							ifelse							}						ifelse						}						{ pop }					ifelse					}				128 string /CMap resourceforall				}			stopped				{ cleartomark }			stopped pop			setglobal			}		if		}	if	} bind def/doc_setup	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mov /moveto load def		/nfnt /newencodedfont load def		/mfnt /makefont load def		/sfnt /setfont load def		/ufnt /undefinefont load def		/chp /charpath load def		/awsh /awidthshow load def		/wsh /widthshow load def		/ash /ashow load def		/sh /show load def		end	userdict /Adobe_CoolType_Data 10 dict dup		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end put	} bind def/doc_trailer	{	currentdict Adobe_CoolType_Core eq		{ end }	if	} bind def/page_setup	{	Adobe_CoolType_Core begin	} bind def/page_trailer	{	end	} bind def/unload	{	systemdict /languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{ undef }				{ pop pop }			ifelse			}		if		}	if	} bind def/ndf	{	1 index where		{ pop pop pop }		{ dup xcheck { bind } if def }	ifelse	} def/findfont systemdict	begin	userdict		begin		/globaldict where { /globaldict get begin } if			dup where pop exch get		/globaldict where { pop end } if		end	endAdobe_CoolType_Core_Defined	{ /systemfindfont exch def }	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{ pop } ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq { 0 } { dup length } ifelse	2 index length add 1 add dict		begin		exch			{			1 index /FID eq				{ pop pop }				{ def }			ifelse			}		forall		dup null eq			{ pop }			{ { def } forall }		ifelse		currentdict		end	exch setglobal	} bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	} bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index  known			{ SharedFontDirectory 3 index get /FontReferenced known }			{ false }		ifelse		}		{		FontDirectory 3 index known			{ FontDirectory 3 index get /FontReferenced known }			{			SharedFontDirectory 3 index known				{ SharedFontDirectory 3 index get /FontReferenced known }				{ false }			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont /FontReferenced get		2 index dup type /nametype eq			{findfont}		if ne			{ pop false }		if		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{ 2 copy get 3 index 3 1 roll put }		for		pop pop pop		}		{		dup type /nametype eq		  { findfont }	  if		dup dup maxlength 2 add dict			begin			exch				{				1 index /FID ne					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type /stringtype eq { cvn } if def dup			currentdict			end		definefont def		}	ifelse	} bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type /dicttype ne			{ 0 dict }		if		currentdict /$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{ def } forall					{ def } forall					currentdict					dup /$Init known						{ dup /$Init get exec }					if					end				/$Strategy exch def				}				{ pop pop pop }			ifelse			}			{ pop pop }		ifelse		end	} bind def/scff	{	$SubstituteFont		begin		dup type /stringtype eq			{ dup length exch }			{ null }		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{ $sname }			ifelse def		end		{ findfont }	@Stopped		{		dup length 8 add string exch		1 index 0 (BadFont:) putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{ findfont }		@Stopped			{ pop /Courier findfont }		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	} bind def/isWidthsOnlyFont	{	dup /WidthsOnly known		{ pop pop true }		{		dup /FDepVector known			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }			{			dup /FDArray known				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }				{ pop }			ifelse			}		ifelse		}	ifelse	} bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 4 index def		/$doSmartSub false def		end	3 index	currentglobal false setglobal exch	/CompatibleFonts /ProcSet resourcestatus		{		pop pop		/CompatibleFonts /ProcSet findresource			begin			dup /CompatibleFont currentexception			1 index /CompatibleFont true setexception			1 index /Font resourcestatus				{				pop pop				3 2 roll setglobal				end				exch				dup findfont				/CompatibleFonts /ProcSet findresource					begin					3 1 roll exch /CompatibleFont exch setexception					end				}				{				3 2 roll setglobal				1 index exch /CompatibleFont exch setexception				end				findfont				$SubstituteFont /$substituteFound true put				}			ifelse		}		{ exch setglobal findfont }	ifelse	$SubstituteFont		begin		$substituteFound			{		 false		 (%%[Using embedded font ) print		 5 index ?str1 cvs print		 ( to avoid the font substitution problem noted earlier.]%%\n) print		 }			{			dup /FontName known				{				dup /FontName get $fontname eq				1 index /DistillerFauxFont known not and				/currentdistillerparams where					{ pop false 2 index isWidthsOnlyFont not and }				if				}				{ false }			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		exch pop exch pop exch		2 dict dup /Found 3 index put		exch findfont exch		}		{		exch exec		exch dup findfont		dup /FontType get 3 eq	  {		  exch ?str1 cvs		  dup length 1 sub		  -1 0		{			  exch dup 2 index get 42 eq			{				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop				 exit			  }			  {exch pop} ifelse		  }for		}		{		 exch pop	  } ifelse		2 dict dup /Downloaded 6 5 roll put		}	ifelse	dup /FontName 4 index put copyfont definefont pop	} bind def/?str2 256 string def/?add	{	1 index type /integertype eq		{ exch true 4 2 }		{ false 3 1 }	ifelse	roll	1 index findfont	dup /Widths known		{		Adobe_CoolType_Data /AddWidths? true put		gsave dup 1000 scalefont setfont		}	if	/Downloaded known		{		exec		exch			{			exch ?str2 cvs exch			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length			?str1 1 index 1 add 3 index putinterval			exch length 1 add 1 index add			?str1 2 index (*) putinterval			?str1 0 2 index getinterval cvn findfont 			?str1 3 index (+) putinterval			2 dict dup /FontName ?str1 0 6 index getinterval cvn put			dup /Downloaded Downloaded put end copyfont			dup /FontName get exch definefont pop pop pop			}			{			pop			}		ifelse		}		{		pop		exch			{			findfont			dup /Found get			dup length exch ?str1 cvs pop			?str1 1 index (+) putinterval			?str1 1 index 1 add 4 index ?str2 cvs putinterval			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn			1 dict exch 1 index exch /FontName exch put copyfont			dup /FontName get exch definefont pop			}			{			pop			}		ifelse		}	ifelse	Adobe_CoolType_Data /AddWidths? get		{ grestore Adobe_CoolType_Data /AddWidths? false put }	if	} bind def/?sh	{	currentfont /Downloaded known { exch } if pop	} bind def/?chp	{	currentfont /Downloaded known { pop } { false chp } ifelse	} bind def/?mv 	{	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse	} bind defsetpackinguserdict /$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{ get }			{ pop pop { pop /Courier } bind }		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams /CannotEmbedFontPolicy 2 copy known			{ get /Error eq }			{ pop pop false }		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup /WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type /stringtype eq { cvn } if def								/FontType 3 def								/FontMatrix [ .001 0 0 .001 0 0 ] def								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def								/FontBBox [ 0 0 0 0 ] def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth /y exch def /x exch def											x y setcharwidth											$SubstituteFont /$Strategy get /$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									} bind def								currentdict								end							exch setglobal							} bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup /WMode known										{ dup /WMode get }										{ 0 }									ifelse									/$WMode exch def									$fontname exch									dup /FontName known										{										dup /FontName get										dup type /stringtype eq { cvn } if										}										{ /unnamedfont }									ifelse									exch									Adobe_CoolType_Data /InVMDeepCopiedFonts get									1 index /FontName get known										{										pop										Adobe_CoolType_Data /InVMDeepCopiedFonts get										1 index get										null copyfont										}										{ $deepcopyfont }									ifelse									exch 1 index exch /FontBasedOn exch put									dup /FontName $fontname dup type /stringtype eq { cvn } if put									definefont									Adobe_CoolType_Data /InVMDeepCopiedFonts get										begin										dup /FontBasedOn get 1 index def										end									} bind def								/$Underprint									{									gsave									x abs y abs gt										{ /y 1000 def }										{ /x -1000 def 500 120 translate }									ifelse									Level2?										{										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]										setcolorspace										}										{ 0 setgray }									ifelse									10 setlinewidth									x .8 mul									[ 7 3 ]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{ .2 setcolor }											{ .8 setgray }										ifelse										fill grestore										stroke										}									forall									pop									grestore									} bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict /FontName known											{											FontName											dup type /stringtype eq { cvn } if											}											{ /unnamedfont }										ifelse										def										/FontName $fontname dup type /stringtype eq { cvn } if def										/currentdistillerparams where											{ pop }											{											/FontInfo currentdict /FontInfo known												{ FontInfo null copyfont }												{ 2 dict }											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									} bind def								end def						/$None							1 dict dup								begin								/$BuildFont {} bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type /stringtype eq { cvn } if						dup /$fontname exch def						$sname null eq							{ $str cvs dup length $slen sub $slen getinterval }							{ pop $sname }						ifelse						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont /$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{ /$match exch def exit }							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont /$dstack get								{								exch									{									1 index eq										{ pop false }										{ true }									ifelse									}									{ begin false }								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{ $match (fonts/) anchorsearch pop pop cvn }							{ /Courier }						ifelse						} bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1  [ /Ryumin-Light /HeiseiMin-W3										  /GothicBBB-Medium /HeiseiKakuGo-W5										  /HeiseiMaruGo-W4 /Jun101-Light ] def							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def							/GB1	  [ /STSong-Light /STHeiti-Regular ] def							/CNS1	 [ /MKai-Medium /MHei-Medium ] def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup /FontType get 0 eq							{							1 dict dup /FontName /copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup /FontName /copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{ $Strategies /$Type3Underprint get exec }						ifelse						} bind def					/$buildfontname						{						dup /CIDFont findresource /CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index (-) putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy (-) putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }							{ pop pop pop pop pop }						ifelse						length						$str 1 index (-) putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						} bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{ get }								{ pop pop [] }							ifelse							}							{ pop pop [] }						ifelse						false exch							{							dup /CIDFont resourcestatus								{								pop pop								save								1 index /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get }									{ false }								ifelse								exch pop								exch restore									{ pop }									{ exch pop true exit }								ifelse								}								{ pop }							ifelse							}						forall							{ $str cvs $buildfontname }							{							false (*)								{								save exch								dup /CIDFont findresource								dup /WidthsOnly known									{ dup /WidthsOnly get not }									{ true }								ifelse								exch /CIDSystemInfo get								dup /Registry get Registry eq								exch /Ordering get Ordering eq and and									{ exch restore exch pop true exit }									{ pop restore }								ifelse								}							$str /CIDFont resourceforall								{ $buildfontname }								{ $fontname $findfontByEnum }							ifelse							}						ifelse						} bind def					end				end				currentdict /$error known currentdict /languagelevel known and dup					{ pop $error /SubstituteFont known }				if				dup					{ $error }					{ Adobe_CoolType_Core }				ifelse				begin					{					/SubstituteFont					/CMap /Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{ dup $str cvs dup length $slen sub $slen getinterval cvn }									{ $sname }								ifelse								Adobe_CoolType_Data /InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{ exch pop true exit }												{ pop }											ifelse											}											{											FontDirectory 1 index known												{ exch pop true exit }												{												GlobalFontDirectory 1 index known													{ exch pop true exit }													{ pop }												ifelse												}											ifelse											}										ifelse										}									forall									}									{ pop pop false }								ifelse									{									exch pop exch pop									}									{									dup /CMap resourcestatus										{										pop pop										dup /$cmapname exch def										/CMap findresource /CIDSystemInfo get { def } forall										$findfontByROS										}										{										128 string cvs										dup (-) search											{											3 1 roll search												{												3 1 roll pop													{ dup cvi }												stopped													{ pop pop pop pop pop $findfontByEnum }													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup /CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup /$cmapname exch def															/CMap findresource /CIDSystemInfo get { def } forall															$findfontByROS															true exit															}															{ pop }														ifelse														}													for													dup type /booleantype eq														{ pop }														{ pop pop pop $findfontByEnum }													ifelse													}												ifelse												}												{ pop pop pop $findfontByEnum }											ifelse											}											{ pop pop $findfontByEnum }										ifelse										}									ifelse									}								ifelse								}								{ //SubstituteFont exec }							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{ $findfontByEnum }								{ //SubstituteFont exec }							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core /scfindfont /systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup /FontName known								{ dup /FontName get dup 3 index ne }								{ /noname true }							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def /$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{ 1 index /FID eq { pop pop } { def } ifelse }										forall										currentdict										end									definefont									dup /FontName known { dup /FontName get } { null } ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using ) print										dup /FontName known											{ dup /FontName get } { (unspecified font) }										ifelse										$str cvs print (.\n) print										}									if									}									{ exch pop }								ifelse								}								{ exch pop }							ifelse							end						} bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core /findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type /stringtype ne { $str cvs } if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{ dup $inVMIndex $AddInVMFont }						if						$doSmartSub							{							currentdict /$Strategy known								{ $Strategy /$BuildFont get exec }							if							}						if						}					if					end				} bind put			}		if		}	if	end/$AddInVMFont	{	exch /FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data /InVMFontsByCMap get exch		$DictAdd		}		{ pop pop pop }	ifelse	} bind def/$DictAdd	{	2 copy known not		{ 2 copy 4 index length dict put }	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get { forall } def				2 copy currentdict put				end			}			{ pop }		ifelse		}	if	get		begin			{ def }		forall		end	} bind defendend%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.19 0systemdict /languagelevel known dup	{ currentglobal false setglobal }	{ false }ifelseexchuserdict /Adobe_CoolType_Utility 2 copy known	{ 2 copy get dup maxlength 25 add dict copy }	{ 25 dict }ifelse putAdobe_CoolType_Utility	begin	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch /eCCRun known not			ct_Level2? and or defct_Level2?	{ globaldict begin currentglobal true setglobal }if	/ct_AddStdCIDMap		ct_Level2?			{ {			((Hex) 57 StartData			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec			} }			{ {			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec			} }		ifelse bind defuserdict /cid_extensions knowndup { cid_extensions /cid_UpdateDB known and } if	 {	 cid_extensions	 begin	 /cid_GetCIDSystemInfo		 {		 1 index type /stringtype eq			 { exch cvn exch }		 if		 cid_extensions			 begin			 dup load 2 index known				 {				 2 copy				 cid_GetStatusInfo				 dup null ne					 {					 1 index load					 3 index get					 dup null eq						  { pop pop cid_UpdateDB }						  {						  exch						  1 index /Created get eq							  { exch pop exch pop }							  { pop cid_UpdateDB }						  ifelse						  }					 ifelse					 }					 { pop cid_UpdateDB }				 ifelse				 }				 { cid_UpdateDB }			 ifelse			 end		 } bind def	 end	 }ifct_Level2?	{ end setglobal }if	/ct_UseNativeCapability?  systemdict /composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring () def		/usewidths? true def		end def	ct_Level2? { setglobal } { pop } ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict /languagelevel known				{ pop /CIDFont findresource /GlyphDirectory get }				{				1 index /CIDFont findresource /GlyphDirectory				get dup type /dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			} def		/+			{			systemdict /languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{ 1 dict begin }			ifelse			/$ exch def			systemdict /languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			? { $ begin } if			} def		/? { $ type /dicttype eq } def		/| {			userdict /Adobe_CoolType_Data known				{			Adobe_CoolType_Data /AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					  begin						AddWidths?								{								Adobe_CoolType_Data /CC 3 index put								? { def } { $ 3 1 roll put } ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont /Widths get exch CC exch put								}								{ ? { def } { $ 3 1 roll put } ifelse }							ifelse					end				end				}				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse				}				{ ? { def } { $ 3 1 roll put } ifelse }			ifelse			} def		/!			{			? { end } if			systemdict /languagelevel known				{ gvm setglobal }			if			end			} def		/: { string currentfile exch readstring pop } executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx [.001 0 0 .001 0 0] def		/ct_1000Mtx [1000 0 0 1000 0 0] def		/ct_raise {exch cvx exch errordict exch get exec stop} bind def		/ct_reraise			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print					errordict exch get exec stop			} bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			} bind def		/ct_GetInterval			{			Adobe_CoolType_Utility /ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{ dup string /dst_string exch def }				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex  get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string  dst_index 2 index putinterval						length dst_index add /dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string  dst_index 2 index putinterval						pop dup dst_index add /dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							  { arrayIndex get }							  {							  pop							  exit							  }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			} bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{ /unknowninstancename /Category resourcestatus }			stopped				{ cleartomark setglobal true }				{ cleartomark currentglobal not exch setglobal }			ifelse				{					{					mark 3 1 roll /Category findresource						begin						ct_Vars /vm currentglobal put						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec							{ cleartomark false }							{ { 3 2 roll pop true } { cleartomark false } ifelse }						ifelse						ct_Vars /vm get setglobal						end					}				}				{ { resourcestatus } }			ifelse bind def			/CIDFont /Category ct_resourcestatus				{ pop pop }				{				currentglobal  true setglobal				/Generic /Category findresource				dup length dict copy				dup /InstanceType /dicttype put				/CIDFont exch /Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit /ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				  /Registry (Adobe) def				  /Ordering (Identity) def				  /Supplement 0 def				end def				/CMapName /Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000> <FFFF>				endcodespacerange				1 begincidrange				<0000> <FFFF> 0				endcidrange				endcmap				CMapName currentdict /CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont  10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{ pop pop /defineresource /undefined ct_raise }				ifelse				} bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{ get 3 1 roll pop pop}						{ pop pop /findresource /undefinedresource ct_raise }					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{ pop pop /findresource /undefined ct_raise }				ifelse				} bind def			/ct_resourcestatus /resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup (Binary) eq						{						pop						null						currentfile						ct_Level2?							{								{ cid_BYTE_COUNT () /SubFileDecode filter }							stopped								{ pop pop pop }							if							}						if						/readstring load						exit						}					if					dup (Hex) eq						{						pop						currentfile						ct_Level2?							{								{ null exch /ASCIIHexDecode filter /readstring }							stopped								{ pop exch pop (>) exch /readhexstring }							if							}							{ (>) exch /readhexstring }						ifelse						load						exit						}					if					/StartData /typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch /GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop /readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				} bind def			/StartData				{				mark					{					currentdict					dup /FDArray get 0 get /FontMatrix get					0 get 0.001 eq						{						dup /CDevProc known not							{							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known								{ get }								{								pop pop								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }								}							ifelse							def							}						if						}						{						 /CDevProc							 {							 pop pop pop pop pop							 0							 1 cid_temp /cid_CIDFONT get							 /FDArray get 0 get							 /FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							 } def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup /cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup /SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup /SubrMapOffset undef										dup /SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{ pop }								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict /CIDFont defineresource pop					end end					}				stopped					{ cleartomark /StartData ct_reraise }				if				} bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit /ProcSet ct_resourcestatus				{ true }				{ /CIDInitC /ProcSet ct_resourcestatus }			ifelse				{				pop pop				/CIDInit /ProcSet findresource				ct_UseNativeCapability?					{ pop null }					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }				ifelse				}				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }			ifelse			ct_Vars exch /ct_oldCIDInit exch put			} bind def		/ct_restoreCIDInit			{			ct_Vars /ct_oldCIDInit get dup null ne				{ /CIDInit exch /ProcSet defineresource pop }				{ pop }			ifelse			} bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility /ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{ pop 0 }						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{ get }								{ pop pop nullstring }							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{ 0 FDBytes ct_cvnsi }									{ pop 0 }								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{ /charstring nullstring def exit }								if								/cid 0 def								}							ifelse							}						loop			} def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			} def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont /Widths get cid					2 copy known						{ get exch pop aload pop }						{ pop pop stringwidth }					ifelse					}					{ stringwidth }				ifelse				setcharwidth				0 0 moveto				}			ifelse			} def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{ get }				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup /FontMatrix 2 copy known						{ get }						{ pop pop ct_defaultFontMtx }					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont /Widths get def					/CharStrings 1 dict dup /.notdef						<d841272cf18f54fc13> dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup /CharStrings get 1 index /Encoding get			ct_dfCharCode get charstring put			rootfont /WMode 2 copy known				{ get }				{ pop pop 0 }			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ ct_str1 show }			ifelse			} def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ ct_1000Mtx matrix concatmatrix concat }				{ pop }			ifelse			/Private get			Adobe_CoolType_Utility /ct_Level2? get not				{				ct_dfDict /Private				3 -1 roll					{ put }				1183615869 internaldict /superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility /ct_Level2? get				{ 1 index }				{ 3 index /Private get mark 6 1 roll }			ifelse			dup /RunInt known				{ /RunInt get }				{ pop /CCRun }			ifelse			get exec			Adobe_CoolType_Utility /ct_Level2? get not				{ cleartomark }			if			} bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility /ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{ stop }			if			end			end			end			end			} bind def		/BaseFontNameStr (BF00) def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix  [0.001 0 0 0.001 0 0] def			/FontBBox  [-250 -250 1250 1250] def			/Encoding ct_cHexEncoding def			/BuildChar /ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString /ct_Type3ShowCharString load def				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup /lenIV 4 put def				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def				/PaintType 0 def				/ct_ShowCharString /ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{ exit }				if				}			for			exch pop exch pop			} bind def		/ct_makeocf			{			15 dict				begin				exch /WMode exch def				exch /FontName exch def				/FontType 0 def				/FMapType 2 def			dup /FontMatrix known				{ dup /FontMatrix get /FontMatrix exch def }				{ /FontMatrix matrix def }			ifelse				/bfCount 1 index /CIDCount get 256 idiv 1 add					dup 256 gt { pop 256} if def				/Encoding					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for					bfCount 1 255 { 2 copy bfCount put pop } for					def				/FDepVector bfCount dup 256 lt { 1 add } if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont /FontBBox known						{ CIDFont /FontBBox get /FontBBox exch def }					if					CIDFont /CDevProc known						{ CIDFont /CDevProc get /CDevProc exch def }					if					currentdict					end				BaseFontNameStr 3 (0) putinterval				0 1 bfCount dup 256 eq { 1 sub } if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup /CIDFirstByte exch 256 mul def						FontType 3 eq							{ /ct_FDDict 2 dict def }						if						currentdict						end					1 index  16					BaseFontNameStr  2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont /Widths get						begin						exch /CIDFont get /GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{ exch pop }			ifelse			} bind def		/ct_ComposeFont			{			ct_UseNativeCapability?				{				2 index /CMap ct_resourcestatus					{ pop pop exch pop }					{					/CIDInit /ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch /WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry (Adobe) def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-) search									{									pop pop									(-) search										{										dup length string copy										exch pop exch pop										}										{ pop (Identity)}									ifelse									}									{ pop  (Identity)  }								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000> <FFFF>							endcodespacerange							1 begincidrange							<0000> <FFFF> 0							endcidrange							endcmap							CMapName currentdict /CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index /CMap ct_resourcestatus					{ pop pop }					{					/CIDInit /ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry (Adobe) def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-) search							{							pop pop							(-) search								{ dup length string copy exch pop exch pop }								{ pop (Identity) }							ifelse							}							{ pop (Identity) }						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000> <FFFF>					endcodespacerange					1 begincidrange					<0000> <FFFF> 0					endcidrange					endcmap					CMapName currentdict /CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get /CIDFont findresource				ct_makeocf				}			ifelse			} bind def		currentdict readonly pop		end	end%%EndResource%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.%%Version: 1.0 0userdict /ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{  version  cvi  2015  ge} bind def/AllocGlyphStorage{  Is2015?  {			pop  }   { 		{string} forall  } ifelse} bind def/Type42DictBegin{	25 dict begin  /FontName exch def  /CharStrings 256 dict 	begin		  /.notdef 0 def		  currentdict 	end def  /Encoding exch def  /PaintType 0 def  /FontType 42 def  /FontMatrix [1 0 0 1 0 0] def  4 array  astore cvx /FontBBox exch def  /sfnts} bind def/Type42DictEnd  {	 currentdict dup /FontName get exch definefont end	ct_T42Dict exch	dup /FontName get exch put} bind def/RD {string currentfile exch readstring pop} executeonly def/PrepFor2015{	Is2015?	{		  		 /GlyphDirectory 		 16		 dict def		 sfnts 0 get		 dup		 2 index		 (glyx)		 putinterval		 2 index  		 (locx)		 putinterval		 pop		 pop	}	{		 pop		 pop	} ifelse			} bind def/AddT42Char{	Is2015?	{		/GlyphDirectory get 		begin		def		end		pop		pop	}	{		/sfnts get		4 index		get		3 index	  2 index		putinterval		pop		pop		pop		pop	} ifelse} bind defend%%EndResourceAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0%%Version: 1.0 0%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.systemdict /setpacking known{	currentpacking	true setpacking} ifuserdict /Adobe_AGM_Image 75 dict dup begin put/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def/nd{	null def}bind def/AGMIMG_&image nd/AGMIMG_&colorimage nd/AGMIMG_&imagemask nd/AGMIMG_mbuf () def/AGMIMG_ybuf () def/AGMIMG_kbuf () def/AGMIMG_c 0 def/AGMIMG_m 0 def/AGMIMG_y 0 def/AGMIMG_k 0 def/AGMIMG_tmp nd/AGMIMG_imagestring0 nd/AGMIMG_imagestring1 nd/AGMIMG_imagestring2 nd/AGMIMG_imagestring3 nd/AGMIMG_imagestring4 nd/AGMIMG_imagestring5 nd/AGMIMG_cnt nd/AGMIMG_fsave nd/AGMIMG_colorAry nd/AGMIMG_override nd/AGMIMG_name nd/AGMIMG_maskSource nd/invert_image_samples nd/knockout_image_samples	nd/img nd/sepimg nd/devnimg nd/idximg nd/doc_setup{ 	Adobe_AGM_Core begin	Adobe_AGM_Image begin	/AGMIMG_&image systemdict/image get def	/AGMIMG_&imagemask systemdict/imagemask get def	/colorimage where{		pop		/AGMIMG_&colorimage /colorimage ldf	}if	end	end}def/page_setup{	Adobe_AGM_Image begin	/AGMIMG_ccimage_exists {/customcolorimage where 		{			pop			/Adobe_AGM_OnHost_Seps where			{			pop false			}{			/Adobe_AGM_InRip_Seps where				{				pop false				}{					true				 }ifelse			 }ifelse			}{			false		}ifelse 	}bdf	level2{		/invert_image_samples		{			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf			/Decode [ Decode 1 get Decode 0 get] def		}def		/knockout_image_samples		{			Operator/imagemask ne{				/Decode [1 1] def			}if		}def	}{			/invert_image_samples		{			{1 exch sub} currenttransfer addprocs settransfer		}def		/knockout_image_samples		{			{ pop 1 } currenttransfer addprocs settransfer		}def	}ifelse	/img /imageormask ldf	/sepimg /sep_imageormask ldf	/devnimg /devn_imageormask ldf	/idximg /indexed_imageormask ldf	/_ctype 7 def	currentdict{		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{			bind		}if		def	}forall}def/page_trailer{	end}def/doc_trailer{}def/imageormask_sys{	begin		save mark		level2{			currentdict			Operator /imagemask eq{				AGMIMG_&imagemask			}{				use_mask {					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse				}{					AGMIMG_&image				}ifelse			}ifelse		}{			Width Height			Operator /imagemask eq{				Decode 0 get 1 eq Decode 1 get 0 eq	and				ImageMatrix /DataSource load				AGMIMG_&imagemask			}{				BitsPerComponent ImageMatrix /DataSource load				AGMIMG_&image			}ifelse		}ifelse		cleartomark restore	end}def/overprint_plate{	currentoverprint {		0 get dup type /nametype eq {			dup /DeviceGray eq{				pop AGMCORE_black_plate not			}{				/DeviceCMYK eq{					AGMCORE_is_cmyk_sep not				}if			}ifelse		}{			false exch			{				 AGMOHS_sepink eq or			} forall			not		} ifelse	}{		pop false	}ifelse}def/process_mask_L3{	dup begin	/ImageType 1 def	end	4 dict begin		/DataDict exch def		/ImageType 3 def		/InterleaveType 3 def		/MaskDict 9 dict begin			/ImageType 1 def			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def			/ImageMatrix [Width 0 0 Height neg 0 Height] def			/NComponents 1 def			/BitsPerComponent 1 def			/Decode [0 1] def			/DataSource AGMIMG_maskSource def		currentdict end def	currentdict end}def/use_mask{	dup type /dicttype eq	{		dup /Mask known	{			dup /Mask get {				level3				{true}				{					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse					3 -1 roll and				} ifelse			}			{false} ifelse		}		{false} ifelse	}	{false} ifelse}def/make_line_source{	begin	MultipleDataSources {		[		Decode length 2 div cvi {Width string} repeat		]	}{		Width Decode length 2 div mul cvi string	}ifelse	end}def/datasource_to_str{	exch dup type	dup /filetype eq {		pop exch readstring	}{		/arraytype eq {			exec exch copy		}{			pop		}ifelse	}ifelse	pop}def/masked_image_simulation{	3 dict begin	dup make_line_source /line_source xdf	/mask_source AGMIMG_maskSource /LZWDecode filter def	dup /Width get 8 div ceiling cvi string /mask_str xdf	begin	gsave	0 1 translate 1 -1 Height div scale	1 1 Height {		pop		gsave		MultipleDataSources {			0 1 DataSource length 1 sub {				dup DataSource exch get				exch line_source exch get				datasource_to_str			} for		}{			DataSource line_source datasource_to_str		} ifelse		<<			/PatternType 1			/PaintProc [				/pop cvx				<<					/ImageType 1					/Width Width					/Height 1					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix					/MultipleDataSources MultipleDataSources					/DataSource line_source					/BitsPerComponent BitsPerComponent					/Decode Decode				>>				/image cvx			] cvx			/BBox [0 0 Width 1]			/XStep Width			/YStep 1			/PaintType 1			/TilingType 2		>>		matrix makepattern set_pattern		<<			/ImageType 1			/Width Width			/Height 1			/ImageMatrix Width 1 matrix scale			/MultipleDataSources false			/DataSource mask_source mask_str readstring pop			/BitsPerComponent 1			/Decode [0 1]		>>		imagemask		grestore		0 1 translate	} for	grestore	end	end}def/imageormask{	begin		SkipImageProc {			currentdict consumeimagedata		}		{			save mark			level2 AGMCORE_host_sep not and{				currentdict				Operator /imagemask eq DeviceN_PS2 not and {					imagemask				}{					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{						[/Separation /Black /DeviceGray {}] setcolorspace						/Decode [ Decode 1 get Decode 0 get ] def					}if					use_mask {						level3 {process_mask_L3 image}{masked_image_simulation}ifelse					}{						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 						{							Names convert_to_process not {								2 dict begin								/imageDict xdf								/names_index 0 def								gsave								imageDict write_image_file {									Names {										dup (None) ne {											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace											Operator imageDict read_image_file											names_index 0 eq {true setoverprint} if											/names_index names_index 1 add def										}{											pop										} ifelse									} forall									close_image_file								} if								grestore								end							}{								Operator /imagemask eq {									imagemask								}{									image								} ifelse							} ifelse						}{							Operator /imagemask eq {								imagemask							}{								image							} ifelse						} ifelse					}ifelse				}ifelse			}{				Width Height				Operator /imagemask eq{					Decode 0 get 1 eq Decode 1 get 0 eq	and					ImageMatrix /DataSource load					/Adobe_AGM_OnHost_Seps where {						pop imagemask					}{						currentgray 1 ne{							currentdict imageormask_sys						}{							currentoverprint not{								1 AGMCORE_&setgray								currentdict imageormask_sys							}{								currentdict ignoreimagedata							}ifelse				 								}ifelse					}ifelse				}{					BitsPerComponent ImageMatrix 					MultipleDataSources{						0 1 NComponents 1 sub{							DataSource exch get						}for					}{						/DataSource load					}ifelse					Operator /colorimage eq{						AGMCORE_host_sep{							MultipleDataSources level2 or NComponents 4 eq and{								AGMCORE_is_cmyk_sep{									MultipleDataSources{										/DataSource [											DataSource 0 get /exec cvx											DataSource 1 get /exec cvx											DataSource 2 get /exec cvx											DataSource 3 get /exec cvx											/AGMCORE_get_ink_data cvx										] cvx def									}{										/DataSource 										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 										/DataSource load										filter_cmyk 0 () /SubFileDecode filter def									}ifelse									/Decode [ Decode 0 get Decode 1 get ] def									/MultipleDataSources false def									/NComponents 1 def									/Operator /image def									invert_image_samples						 			1 AGMCORE_&setgray									currentdict imageormask_sys								}{									currentoverprint not Operator/imagemask eq and{  			 							1 AGMCORE_&setgray  			 							currentdict imageormask_sys  			 						}{  			 							currentdict ignoreimagedata  			 						}ifelse								}ifelse							}{									MultipleDataSources NComponents AGMIMG_&colorimage													}ifelse						}{							true NComponents colorimage						}ifelse					}{						Operator /image eq{							AGMCORE_host_sep{								/DoImage true def								HostSepColorImage{									invert_image_samples								}{									AGMCORE_black_plate not Operator/imagemask ne and{										/DoImage false def										currentdict ignoreimagedata					 				}if								}ifelse						 		1 AGMCORE_&setgray								DoImage									{currentdict imageormask_sys} if							}{								use_mask {									level3 {process_mask_L3 image}{masked_image_simulation}ifelse								}{									image								}ifelse							}ifelse						}{							Operator/knockout eq{								pop pop pop pop pop								currentcolorspace overprint_plate not{									knockout_unitsq								}if							}if						}ifelse					}ifelse				}ifelse			}ifelse			cleartomark restore		}ifelse	end}def/sep_imageormask{ 	/sep_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_avoid_L2_sep_space{			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def		}if 		AGMIMG_ccimage_exists 		MappedCSA 0 get /DeviceCMYK eq and		currentdict/Components known and 		Name () ne and 		Name (All) ne and 		Operator /image eq and		AGMCORE_producing_seps not and		level2 not and		{			Width Height BitsPerComponent ImageMatrix 			[			/DataSource load /exec cvx			{				0 1 2 index length 1 sub{					1 index exch					2 copy get 255 xor put				}for			} /exec cvx			] cvx bind			MappedCSA 0 get /DeviceCMYK eq{				Components aload pop			}{				0 0 0 Components aload pop 1 exch sub			}ifelse			Name findcmykcustomcolor			customcolorimage		}{			AGMCORE_producing_seps not{				level2{					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentdict imageormask				}{ 					currentdict					Operator /imagemask eq{						imageormask					}{						sep_imageormask_lev1					}ifelse				}ifelse 			}{				AGMCORE_host_sep{					Operator/knockout eq{						currentdict/ImageMatrix get concat						knockout_unitsq					}{						currentgray 1 ne{ 							AGMCORE_is_cmyk_sep Name (All) ne and{ 								level2{	 								[ /Separation Name [/DeviceGray]	 								{ 	 									sep_colorspace_proc AGMCORE_get_ink_data										1 exch sub	 								} bind									] AGMCORE_&setcolorspace									/sep_tint AGMCORE_gget AGMCORE_&setcolor 									currentdict imageormask_sys	 							}{	 								currentdict									Operator /imagemask eq{										imageormask_sys									}{										sep_image_lev1_sep									}ifelse	 							}ifelse 							}{ 								Operator/imagemask ne{									invert_image_samples 								}if		 						currentdict imageormask_sys 							}ifelse 						}{ 							currentoverprint not Name (All) eq or Operator/imagemask eq and{								currentdict imageormask_sys 								}{								currentoverprint not									{ 									gsave  									knockout_unitsq 									grestore									}if								currentdict consumeimagedata 		 					}ifelse 						}ifelse		 			}ifelse 				}{					currentcolorspace 0 get /Separation ne{						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt						/sep_tint AGMCORE_gget setcolor					}if					currentoverprint 					MappedCSA 0 get /DeviceCMYK eq and 					Name inRip_spot_has_ink not and 					Name (All) ne and {						imageormask_l2_overprint					}{						currentdict imageormask 					}ifelse				}ifelse			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end}def/decode_image_sample{	4 1 roll exch dup 5 1 roll	sub 2 4 -1 roll exp 1 sub div mul add} bdf/colorSpaceElemCnt{	currentcolorspace 0 get dup /DeviceCMYK eq {		pop 4	}	{		/DeviceRGB eq {			pop 3		}{			1		} ifelse	} ifelse} bdf/devn_sep_datasource{	1 dict begin	/dataSource xdf	[		0 1 dataSource length 1 sub {			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx		} for	] cvx bind	end} bdf		/devn_alt_datasource{	11 dict begin	/srcDataStrs xdf	/dstDataStr xdf	/convProc xdf	/origcolorSpaceElemCnt xdf	/origMultipleDataSources xdf	/origBitsPerComponent xdf	/origDecode xdf	/origDataSource xdf	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def	/samplesNeedDecoding		0 0 1 origDecode length 1 sub {			origDecode exch get add		} for		origDecode length 2 div div		dup 1 eq {			/decodeDivisor 2 origBitsPerComponent exp 1 sub def		} if		2 origBitsPerComponent exp 1 sub ne	def	[		0 1 dsCnt 1 sub [			currentdict /origMultipleDataSources get {				dup currentdict /origDataSource get exch get dup type			}{				currentdict /origDataSource get dup type			} ifelse			dup /filetype eq {				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx			}{				/stringtype ne {					/exec cvx				} if				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx			} ifelse		] cvx /for cvx		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [			0 1 Width 1 sub [				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx				currentdict /origMultipleDataSources get {					0 1 dsCnt 1 sub [						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs								BitsPerComponent /decode_image_sample load /exec cvx							} ifelse						} if					] cvx /for cvx				}{					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx							currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 					[						samplesNeedDecoding {							currentdict /decodeDivisor known {								currentdict /decodeDivisor get /div cvx							}{								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx								BitsPerComponent /decode_image_sample load /exec cvx								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx							} ifelse						} if					] cvx /forall cvx				} ifelse				currentdict /convProc get /exec cvx				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx					currentdict /convProc get /filter_indexed_devn load ne {						255 /mul cvx /cvi cvx 					} if					/put cvx 				] cvx /for cvx			] cvx /for cvx			currentdict /dstDataStr get		] cvx /if cvx	] cvx bind	end} bdf/devn_imageormask{ 	/devicen_colorspace_dict AGMCORE_gget begin	/MappedCSA CSA map_csa def	2 dict begin	dup dup	/dstDataStr exch /Width get colorSpaceElemCnt mul string def	/srcDataStrs [ 3 -1 roll begin		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse		{			Width Decode length 2 div mul cvi string		} repeat		end ] def	begin	SkipImageProc {		currentdict consumeimagedata	}	{		save mark 		AGMCORE_producing_seps not {			level3 not {				Operator /imagemask ne {					/DataSource [						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 						dstDataStr srcDataStrs devn_alt_datasource /exec cvx						] cvx 0 () /SubFileDecode filter def					/MultipleDataSources false def					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				} if			}if			currentdict imageormask 		}{			AGMCORE_host_sep{				Names convert_to_process {					CSA map_csa 0 get /DeviceCMYK eq {						/DataSource							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 							[							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 							dstDataStr srcDataStrs devn_alt_datasource /exec cvx							] cvx						filter_cmyk 0 () /SubFileDecode filter def						/MultipleDataSources false def						/Decode [1 0] def						/DeviceGray setcolorspace			 			currentdict imageormask_sys 					}{						AGMCORE_report_unsupported_color_space						AGMCORE_black_plate {							/DataSource [								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get								dstDataStr srcDataStrs devn_alt_datasource /exec cvx								] cvx 0 () /SubFileDecode filter def							/MultipleDataSources false def							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def				 			currentdict imageormask_sys				 		}						{	 						gsave 	 						knockout_unitsq	 						grestore							currentdict consumeimagedata 						} ifelse 					} ifelse				}				{						/devicen_colorspace_dict AGMCORE_gget /names_index known {	 					Operator/imagemask ne{	 						MultipleDataSources {		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def								/MultipleDataSources false def	 						}{								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def	 						} ifelse							invert_image_samples	 					} if			 			currentdict imageormask_sys	 				}{	 					currentoverprint not Operator/imagemask eq and{							currentdict imageormask_sys 							}{							currentoverprint not								{	 							gsave 	 							knockout_unitsq	 							grestore								}if							currentdict consumeimagedata 			 			}ifelse	 				}ifelse	 			}ifelse 			}{				currentdict imageormask			}ifelse		}ifelse		cleartomark restore	}ifelse	end	end	end}def/imageormask_l2_overprint{	currentdict	currentcmykcolor add add add 0 eq{		currentdict consumeimagedata	}{		level3{ 						currentcmykcolor 			/AGMIMG_k xdf 			/AGMIMG_y xdf 			/AGMIMG_m xdf 			/AGMIMG_c xdf			Operator/imagemask eq{				[/DeviceN [				AGMIMG_c 0 ne {/Cyan} if				AGMIMG_m 0 ne {/Magenta} if				AGMIMG_y 0 ne {/Yellow} if				AGMIMG_k 0 ne {/Black} if				] /DeviceCMYK {}] setcolorspace				AGMIMG_c 0 ne {AGMIMG_c} if				AGMIMG_m 0 ne {AGMIMG_m} if				AGMIMG_y 0 ne {AGMIMG_y} if				AGMIMG_k 0 ne {AGMIMG_k} if				setcolor						}{					/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def				[/Indexed 									[						/DeviceN [							AGMIMG_c 0 ne {/Cyan} if							AGMIMG_m 0 ne {/Magenta} if							AGMIMG_y 0 ne {/Yellow} if							AGMIMG_k 0 ne {/Black} if						] 						/DeviceCMYK {							AGMIMG_k 0 eq {0} if							AGMIMG_y 0 eq {0 exch} if							AGMIMG_m 0 eq {0 3 1 roll} if							AGMIMG_c 0 eq {0 4 1 roll} if												}					]					255					{						255 div 						mark exch						dup	dup dup						AGMIMG_k 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_y 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_m 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop									counttomark 1 roll						}{							pop						}ifelse						AGMIMG_c 0 ne{							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop									counttomark 1 roll						}{							pop						}ifelse						counttomark 1 add -1 roll pop					}				] setcolorspace			}ifelse			imageormask_sys		}{	write_image_file{		currentcmykcolor		0 ne{			[/Separation /Black /DeviceGray {}] setcolorspace			gsave			/Black			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Yellow /DeviceGray {}] setcolorspace			gsave			/Yellow			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Magenta /DeviceGray {}] setcolorspace			gsave			/Magenta			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		}if		0 ne{			[/Separation /Cyan /DeviceGray {}] setcolorspace			gsave			/Cyan 			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]			cvx modify_halftone_xfer			Operator currentdict read_image_file			grestore		} if				close_image_file			}{				imageormask			}ifelse		}ifelse	}ifelse} def/indexed_imageormask{	begin		save mark  		currentdict 		AGMCORE_host_sep{			Operator/knockout eq{				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {					/CSA get map_csa				}{					/CSD get get_csd /Names get				} ifelse				overprint_plate not{					knockout_unitsq				}if			}{				Indexed_DeviceN {					/devicen_colorspace_dict AGMCORE_gget /names_index known {			 			indexed_image_lev2_sep					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					} ifelse				}{		 			AGMCORE_is_cmyk_sep{						Operator /imagemask eq{							imageormask_sys						}{							level2{								indexed_image_lev2_sep							}{								indexed_image_lev1_sep							}ifelse						}ifelse					}{						currentoverprint not{							knockout_unitsq			 			}if			 			currentdict consumeimagedata					}ifelse				}ifelse			}ifelse 		}{			level2{				Indexed_DeviceN {					/indexed_colorspace_dict AGMCORE_gget begin					CSD get_csd begin				}{					/indexed_colorspace_dict AGMCORE_gget begin					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]						setcolorspace					} if					end				} ifelse				imageormask				Indexed_DeviceN {					end					end				} if			}{ 				Operator /imagemask eq{					imageormask				}{					indexed_imageormask_lev1				}ifelse			}ifelse 		}ifelse		cleartomark restore	end}def/indexed_image_lev2_sep{	/indexed_colorspace_dict AGMCORE_gget begin	begin		Indexed_DeviceN not {			currentcolorspace 			dup 1 /DeviceGray put			dup 3			currentcolorspace 2 get 1 add string			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub			{			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put			}for 			put	setcolorspace		} if		currentdict 		Operator /imagemask eq{			AGMIMG_&imagemask		}{			use_mask {				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse			}{				AGMIMG_&image			}ifelse		}ifelse	end end}def  /OPIimage  {  	dup type /dicttype ne{  		10 dict begin  			/DataSource xdf  			/ImageMatrix xdf  			/BitsPerComponent xdf  			/Height xdf  			/Width xdf  			/ImageType 1 def  			/Decode [0 1 def]  			currentdict  		end  	}if  	dup begin  		/NComponents 1 cdndf  		/MultipleDataSources false cdndf  		/SkipImageProc {false} cdndf  		/HostSepColorImage false cdndf  		/Decode [  				0   				currentcolorspace 0 get /Indexed eq{  					2 BitsPerComponent exp 1 sub  				}{  					1  				}ifelse  		] cdndf  		/Operator /image cdndf  	end  	/sep_colorspace_dict AGMCORE_gget null eq{  		imageormask  	}{  		gsave  		dup begin invert_image_samples end  		sep_imageormask  		grestore  	}ifelse  }def/cachemask_level2{	3 dict begin	/LZWEncode filter /WriteFilter xdf	/readBuffer 256 string def	/ReadFilter		currentfile		0 (%EndMask) /SubFileDecode filter		/ASCII85Decode filter		/RunLengthDecode filter	def	{		ReadFilter readBuffer readstring exch		WriteFilter exch writestring		not {exit} if	}loop	WriteFilter closefile	end}def/cachemask_level3{	currentfile	<<		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]		/Intent 1	>>	/ReusableStreamDecode filter}def/spot_alias{	/mapto_sep_imageormask 	{		dup type /dicttype ne{			12 dict begin				/ImageType 1 def				/DataSource xdf				/ImageMatrix xdf				/BitsPerComponent xdf				/Height xdf				/Width xdf				/MultipleDataSources false def		}{			begin		}ifelse				/Decode [/customcolor_tint AGMCORE_gget 0] def				/Operator /image def				/HostSepColorImage false def				/SkipImageProc {false} def				currentdict 			end		sep_imageormask	}bdf	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_colorAry xddf		/customcolor_tint AGMCORE_gget		bdict			/Name AGMIMG_colorAry 4 get			/CSA [ /DeviceCMYK ] 			/TintMethod /Subtractive			/TintProc null			/MappedCSA null			/NComponents 4 			/Components [ AGMIMG_colorAry aload pop pop ] 		edict		setsepcolorspace		mapto_sep_imageormask	}ndf	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put	/customcolorimage	{		Adobe_AGM_Image/AGMIMG_override false put		dup 4 get map_alias{			/customcolor_tint AGMCORE_gget exch setsepcolorspace			pop			mapto_sep_imageormask		}{			AGMIMG_&customcolorimage		}ifelse				}bdf}def/snap_to_device{	6 dict begin	matrix currentmatrix	dup 0 get 0 eq 1 index 3 get 0 eq and	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop	{		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def		0 0 transform		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def		1 1 transform		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def					[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat	}{	}ifelse	end} deflevel2 not{	/colorbuf	{		0 1 2 index length 1 sub{			dup 2 index exch get 			255 exch sub 			2 index 			3 1 roll 			put		}for	}def	/tint_image_to_color	{		begin			Width Height BitsPerComponent ImageMatrix 			/DataSource load		end		Adobe_AGM_Image begin			/AGMIMG_mbuf 0 string def			/AGMIMG_ybuf 0 string def			/AGMIMG_kbuf 0 string def			{				colorbuf dup length AGMIMG_mbuf length ne					{					dup length dup dup					/AGMIMG_mbuf exch string def					/AGMIMG_ybuf exch string def					/AGMIMG_kbuf exch string def					} if				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop			}			addprocs			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage			end	} def				/sep_imageormask_lev1	{		begin			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{					255 mul round cvi GrayLookup exch get				} currenttransfer addprocs settransfer				currentdict imageormask			}{				/sep_colorspace_dict AGMCORE_gget/Components known{					MappedCSA 0 get /DeviceCMYK eq{						Components aload pop					}{						0 0 0 Components aload pop 1 exch sub					}ifelse					Adobe_AGM_Image/AGMIMG_k xddf 					Adobe_AGM_Image/AGMIMG_y xddf 					Adobe_AGM_Image/AGMIMG_m xddf 					Adobe_AGM_Image/AGMIMG_c xddf 					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer						currentdict imageormask					}{ 						currentcolortransfer						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll						setcolortransfer						currentdict tint_image_to_color					}ifelse				}{					MappedCSA 0 get /DeviceGray eq {						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer						currentdict imageormask					}{						MappedCSA 0 get /DeviceCMYK eq {							currentcolortransfer							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}{ 							currentcolortransfer							{pop 1} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll							setcolortransfer 							currentdict tint_image_to_color						}ifelse					}ifelse				}ifelse			}ifelse		end	}def	/sep_image_lev1_sep	{		begin			/sep_colorspace_dict AGMCORE_gget/Components known{				Components aload pop				Adobe_AGM_Image/AGMIMG_k xddf 				Adobe_AGM_Image/AGMIMG_y xddf 				Adobe_AGM_Image/AGMIMG_m xddf 				Adobe_AGM_Image/AGMIMG_c xddf 				{AGMIMG_c mul 1 exch sub}				{AGMIMG_m mul 1 exch sub}				{AGMIMG_y mul 1 exch sub}				{AGMIMG_k mul 1 exch sub}			}{ 				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}			}ifelse			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end	}def	/indexed_imageormask_lev1	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			currentdict			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer				imageormask			}{				MappedCSA 0 get /DeviceGray eq {					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer					imageormask				}{					MappedCSA 0 get /DeviceCMYK eq {						currentcolortransfer						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}{ 						currentcolortransfer						{pop 1} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll						setcolortransfer 						tint_image_to_color					}ifelse				}ifelse			}ifelse		end end	}def	/indexed_image_lev1_sep	{		/indexed_colorspace_dict AGMCORE_gget begin		begin			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}			AGMCORE_get_ink_data currenttransfer addprocs settransfer			currentdict imageormask_sys		end end	}def}ifendsystemdict /setpacking known{	setpacking} if%%EndResourcecurrentdict Adobe_AGM_Utils eq {end} if%%EndProlog%%BeginSetupAdobe_AGM_Utils begin2 2010 Adobe_AGM_Core/doc_setup get execAdobe_CoolType_Core/doc_setup get execAdobe_AGM_Image/doc_setup get execcurrentdict Adobe_AGM_Utils eq {end} if%%EndSetup%%Page: jquery_logos.eps 1%%EndPageComments%%BeginPageSetup/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about='uuid:58f3229c-e4f0-11dc-b4fc-000a95b256e8'
  xmlns:illustrator='http://ns.adobe.com/illustrator/1.0/'>
  <illustrator:Type>Document</illustrator:Type>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:58f3229c-e4f0-11dc-b4fc-000a95b256e8'
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
  <pdf:Producer>Adobe PDF library 6.66</pdf:Producer>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:58f3229c-e4f0-11dc-b4fc-000a95b256e8'
  xmlns:photoshop='http://ns.adobe.com/photoshop/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:58f3229c-e4f0-11dc-b4fc-000a95b256e8'
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:58f3229c-e4f0-11dc-b4fc-000a95b256e8'
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:CreateDate>2008-02-14T08:29:00-05:00</xap:CreateDate>
  <xap:ModifyDate>2008-09-01T16:36:37Z</xap:ModifyDate>
  <xap:MetadataDate>2008-02-14T08:29:00-05:00</xap:MetadataDate>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>256</xapGImg:width>
     <xapGImg:height>76</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgATAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6Zr3/OQH6JGnH/Ddzcfp&#xA;CaSH4Zaen6fpfEf3ZrX1vwxV67irsVdirsVYZP5h1Ka/kt4+az2VxOlxHEAWRUl5wM8PJGaKWD9t&#xA;ehxVIfzT87+ZNMh8q2ehh21TWJpbllt+FZIbGD1pYwhFxVXDCvFq+DYq8W03zJ5dtf8ABOvadq9z&#xA;fefrzUTceZbhp52doVYlrR4T8FHqETiPH2oqi7v8+PPK+W9LutJ1k3l5ZaVNPrkrwRELd3N6beIS&#xA;DgFrEjKYwNjtWtcVRnlD8wfzV8wazpHllPNCv+l71mXULYWktxFBb2xknVqLwA+IMAy1228MVZr5&#xA;CvfzD84+ZZdM1bUp7fQ/JeoXFvf31tN6M+p3UTlI4ZWtxCPTQDk603qAancKvbsVdirsVdirsVdi&#xA;rsVdirsVed+ePzC82aFc6pFpnl99RSyiR7Z1SZvVZlQlRwU1oXI28MVZD+XvmLV/Mfk/T9Z1fT20&#xA;rUbr1vXsGV1MfpzvGu0gDfEqBt/HFWR4q7FXYqwHzcvmG+8w3en6ZqU9pPBp6XNhaxSCJZn9VhJU&#xA;9/hHjiqt5PbXbXzAmmaldy3Mo036xfo83rqk7TKEG6jgeHLYE1xV4/5+856jq3mbUbfW7u7tfy9X&#xA;zFHpGqvE7mFUsI/3sX7lPUQTMwZ/iJNNqUxVJ9A8+6R5d8x3z+WtQk0zyI/mXTlZYvWkjjtI4ZjN&#xA;/eqSI7pxyYD4qL8qqpbqf5v/AJmytbI+vyaZaaktzqVncy0hDCS4eKJA4hmPpIsWyCnep6Yqym08&#xA;6/mRL5V8w+frjX7lo/Lt/a2K2Nu1vFaXJT0Ybk8HikPxNKGG29dt8Vex/ljoXmOCxuvMHme5lk17&#xA;X3F1NYmRzb2UJH7m2hjJ4qUU/GQKk+NKlVm2KuxV2KuxV2KoG+0LRb+ZJr6wt7maPZJJY0dgPCrA&#xA;7YqlJ8haK/naPzhNLcz6nbwG2soJJa21urKEcwxUHFnFeW/c4qmGqaDDd+k9syWVzFKJfrKQQSSb&#xA;VqB6qPxqaHkN9sVQS+WL5IDHHqrI7VDyC2tyWU8SFYFCp3U7kd8VW2vlAWRb9H3KWI5841t7S1RY&#xA;/gKMIxwNAfh+754qnGm2UtpA0cs31h2cuZfTSNjUD7QjCqTt1piqLxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2Kpdq/l7RtX9L9IWwmeA1hkDPHIlevF4yrCvzxVStPK+jWWn3dlYRNaLeq6zzxO5nJd&#xA;SvISuWfktfh32xVR8neTdD8o6P8AorRo3W3aV7iWSVzJLJLJTlJI56saAfRiqdkVBFae4xVjt35R&#xA;lv7eOHUdSe99JleIzwW7hZFP21BTZqfD8ifHFVdNB1lZGf8AT1yQV4hTHAQDWtd0PtiqeYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FVGW7tYpEilmRJJDSNGYBmPTYd+uERJQZAN3F1bW6q1xMkKuwjQyMFDO32VFaVJ7DA&#xA;liFj+cv5a33mNfLtprcc2pvKbeJVjm9F5h1jScp6LN8myXCUWGVJqumSCIpeQOLgOYCsiH1BF/eF&#xA;KH4uH7VOmRSpfp7Q/q31r9I2v1bn6fr+tH6fOlePKtOVN6Y0qy+8yeX7CKzmvNRt4ItQlWCxdpFp&#xA;PK/2Ui3+Mn2w0qZYFdirsVdirsVdirsVdirsVdirsVdirsVdiqHuNQsLZgtzcxQMwqqyOqEjxHIj&#xA;KMupxYzU5Rj7yA2wwzn9MSfcG7a/sbksLa4inK7sI3V6V8eJOHFqceT6JRl7iCieGcPqBHvCVeY/&#xA;O/lTy5Z3N1rGpQ2yWnATxBucwaWvpr6KcpCXoeI4+/QZc1oTyz+ZXkvzJBLLpmpIDBcJaSw3KtbS&#xA;rPLX04+EwRiz8TxA60Phiqaz+ZfLlvG0lxqtnDGkr2zvJcRKBNH9uIksPjWu69Riq5vMXl9dQXTW&#xA;1O0GovxC2Znj9Y815LSPly3U1G3TFWrLzFol9ql9pVneR3GoabwF/bxnkYTIKqHI2BPhXFXkuo/k&#xA;Z58uY7BYvPl1CbSeSaZgbj96riKiGk4+z6Tdf5szdTqYZCDGPC4Wk008YIlLie15hOa7FXYq7FXl&#xA;mr23mG21iS0urS6mt0urmezuYbaa7hmiuZ/rMVZLZ4prae3kJRWrx4+2bXHKBjYIuhe4HIV12ILq&#xA;ckZiVEGrNbE8zfTcEJF+ZpvfMXmTyZ5A028VdViS41LU0lAma2kgtedo8zMZ2Vi7EBubNvXk1anA&#xA;kRZLsYA0AxhfJf5rjy/5J8uN5Tj0u18sX31ybUv0jY8JbhWZop+Ib1BxZi7qKlv1AUUnZjlz+Vn5&#xA;o6r5YsLKLSILFtF0d7Ky9PUbN/rT3F/6lxIhSYhA8UhVuRodxXcDJVRQJA9Uz8kfkh5gbzLo6a1o&#xA;z22gJeNca7Bd3enzw8orUm3T6vbOoq5cg/BWhqcBKRT0P8rPykvtM806lrGuxgadpN9dx+S9PHoG&#xA;GG2uH5G6CQEqHkTio5UbbcdKQkWQD2TIMnYq7FXYq7FXYq7FXYq7FWG+ddC8+6jaaknlzVorCeeN&#xA;VsXkd0EbjhyJ4xyUrRulc1g0+p/NGfEPB/m/D3d/m5py4fA4eH953/H9SZeQdM80aZ5SsbHzTfJq&#xA;Wuw+r9cvY2Z0flM7R0Z0iY8Y2VfsjpmzcJkGKuxV2KsV8x2dkdSkk1BSlrc2wjivAhcRSoxO9AaV&#xA;Gcz2rgxnMTlFQnChKr4ZAu50OWfhgY/qjKzG+YdopsrWaS+SUjSNPsmSS9mURqSGEkjjZfhVU3Jy&#xA;zsrFHxeLHZxQhw8RFWSb22G2zHXTPBU6E5Suu4VTxKx0HzX5u128/Mjy9aRa3bW/mZprTTpmS0a7&#xA;tLCMR20qTSqB8PIqvP7PhnROoRbeQ/zdvPM1x5uuPLcS3kuu2OrNpMmoW5DxWUMscMfqIOIaEPTn&#xA;35fZ2OKsT1P8ivzH9S0uLzSP0nFPDPJeW9rqFlbtFdXFw7sed0JUqU4Dki1O2+2QOSI5kMhA9zKL&#xA;X8jta/wR5hkNlD/i831s3lv15raeaOztTEiFrgnh8UQao2+yPliMsT1C8Eu57X+X/kqz8o+X47CN&#xA;zcahOxudW1B95Lm7k3llYnfrso7D78mxZLirsVdirsVdirsVQ6WFil5JepbRLeSqEluVRRKyilFZ&#xA;wORAoOpxVT1PR9K1WGOHUrSK8hikE0ccyh1WRQQGAPcBjk4ZJQNxNMJ44zFSFoB/JPlGSH0X0e0e&#xA;EsXMbRKV5EKCaEeCL92WDU5LviLWdLjquEL5fJ/lWVnaXSbWR5WDys8SszsAyhnJFWNJG6+JwDUZ&#xA;B/EUnTYzziEdp+madpsBgsLeO1gLFzFEoReRABNBt2yuczI2TbOEIxFAUisizdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVWSxRyxvFKiyRSKVdGAKspFCCDsQRirUFvBbwpBbxrDDGAscUahVUDoAo&#xA;2AxVeQCKHcHFUImkaWi8FtYgpFCAg6A1zFjocIFCEfk3nU5CbMi1+htJqT9Ui3BB+Ed+uD8hg/mR&#xA;+SfzWX+cUbmW47sVdirsVdiqS+YPOflPy68Ka7q1rpj3IYwLdSrGXCUDFeRFachhAW0p/wCVwflb&#xA;/wBTVpn/AEkx/wBceEosO/5XB+Vv/U1aZ/0kx/1x4Sth3/K4Pyt/6mrTP+kmP+uPCVsO/wCVwflb&#xA;/wBTVpn/AEkx/wBceErYd/yuD8rf+pq0z/pJj/rjwlbDv+Vwflb/ANTVpn/STH/XHhK2EZpH5keQ&#xA;dZ1CLTdK8wWN9fz8vRtYJ0eR+Cl24qDU0VScaK2yTAl2KuxV2KuxV2KuxV2KuxV2KuxV2KoPVtX0&#xA;vR9Pl1HVLqKysIOPrXM7BI15sEXkx2FWYDFWO/8AK3fyw/6mnTf+kmP+uKu/5W7+WH/U06b/ANJM&#xA;f9cVd/yt38sP+pp03/pJj/rirv8Albv5Yf8AU06b/wBJMf8AXFXf8rd/LD/qadN/6SY/64q7/lbv&#xA;5Yf9TTpv/STH/XFXf8rd/LD/AKmnTf8ApJj/AK4qjLz8xfIll6P1vXrGD6yzJB6k6LzZePILU7kc&#xA;1+/LJ4pR5imnFqMeQXCQPuTq3vra4bjEzEleS8kdQy7fEpYAMNxuMrbkRirsVfLv/OZf/HT8rf8A&#xA;GG8/4nFluNhN4JHoF0Y2aVliNF4ctlLyRCZEZmoFLIdq5lDCfx83Blq43tv+w0ftTTyZ+Xutea7z&#xA;UbWxZI2023a4lkYPJGzcgkcSvEsihpCfhZiF265TLZy4HiFh6Pefkn5Ekg8y6HpGq6ldecPKtl9b&#xA;v55I4V0yWVVBa3hAHrByfgXkevjkOIsqSmy/5xx82X+qarptlqFjNPpV9Dp0j8pFSSWSFZ5CpKVp&#xA;ChPKorttXHjXhROof840eYrBpbi613TIdIgtPrk2qSmdI0AkEfBl9Mt16HHjXhSvUfyUm0DSNX1r&#xA;zLqsdtpNnFENHuLaN3Oo3NwvOKKFZhAwULu7EbDcVGHiWlv/ADjb/wCTq8u/9Hn/AFAT4z5LHm+5&#xA;cobHYq7FXYq7FXYq7FXYqlOr+avL2jxXEup38VpHaqGuGkJAQNShNB/lDMf83i8Tw+Icfd9rd4E+&#xA;Djr097tI81+X9Zsob7S7sXllcNwiuokkaIsH9Pjz48QeW25zIaU2xV2KvNf+cjf/ACTPmH/oz/6j&#xA;oMVfMHkT8pNS826NcatDeJbW9vIY3BjMhFAvxH4loKsBmn1/a35eZiIGVRsm+V7Ow0ug8WNmQjZo&#xA;LfzA/KbUfJ2k2WqT30V3b3snpIqLxcEqzAkcm/32euT0HafjyAMeG48Q3B2uvgx1Wi8IXd0a5V5p&#xA;n5Q/JoX2iw+aPMd++n+WxZXOo3foxObkRQOI0VPUURFpi1UILbDfNq4KM8xfk1pE+hWvmfylfXMW&#xA;hXGk32rPDrSot0i2EkcfCtuvAmcy/u9qUHXFURpn/OMXnG9aNpNSsbaCSGBllcytWe4j9QQBVQmq&#xA;Lx5N032rviqBl/5x58zQRRRXGq6fHrFwty9rpANxJPMtrIyO0fpxOCDx5A+BFaYqxnz55HtvKEOl&#xA;2V1fmbzLcwC51bTFQBLISfFFE8nIlpSu7LxFPpBxV9d6r+R35c6qLQXthK/1GR5balxMvF5OHImj&#xA;Cv8AdL1y/LqZzNyLi6bRY8IIgKtmVrp6W7IRK8giT0oVfjRENNhxVSfsD7VcocpF4q7FXy7/AM5l&#xA;/wDHT8rf8Ybz/icWW42E3iNp5sWO0SK4tneeONYRPDN6XONPsLKhSRW4djQHM6OooUR9v3uqydn3&#xA;ImJFE3RF0Tzo2Ktl/lvz7ovlb8utYfTNRll87eY7u2eaAROI7OCyuGlWsslRKZf2tzs1D0JzElcp&#xA;WXZQiIxACb2//OQmqXiatw0HQNK1LVESS91URTI0ssThlZgDKXYN8Sg/jhhiB60xy5jAWImXu/aQ&#xA;mTf85C+YxqsN5Zx6BaOLpr674LdLHcyyW5tS8o5MwcRgdPbrvk/y4/nBo/Nyq+CX2frSnzf+cN35&#xA;j0LU9GtoNO0q01iKBLom5u55U+rXJmVVdgV+LnQ0FKA+2COAfzgylqjv6JfZ+thfn/z3rXmSDQ9O&#xA;vJoHsdAsIrGyS1aVo2EahDK/q7+q4RQxoOgwGAiedtsMhmLII96e/wDONv8A5Ory7/0ef9QE+Qny&#xA;bI833LlDY7FXYq7FXYq7FXYq7FUi17yT5Y1+G6h1ay+sxXqhLlfVlj5KtKCsboR9kdMxBocXjeNX&#xA;7zvs91cuXJv/ADOTw/Dv0d32t+X/ACV5b8vaZBpej2z2mn2zmSG2E87qHMnq1PORuXx775ltCeYq&#xA;7FXmv/ORv/kmfMP/AEZ/9R0GKvnf8nPzjtfJNrd6bqVmbrT7os/wqG3YAFWUldvh2P8AmNVrNHkO&#xA;TxMfDK48Moy5EOdp9RAQ4J2KNgjmHfmz+bVj5/u9NsIo207R7eVPUnZKlFFU5LEhNQiux61PTbDo&#xA;9JkGQ5cnCDw8IjHkIo1GeBhwQursk8yUx1387bTSdRtdK8rwQ615Ts9Ft9Fmt9UhYR3RiqzTGOqM&#xA;pJanh7dKbRwkI3/OQ+sOyQf4d0hNL+oPpT6aI5hAbaRg3Ggk2402p4/LFWQH89vMfqXsF5NoFxb3&#xA;tz9YRY3vkERSBY1VXh9NuFIwN96k9umENXIi/Dn9n63JOnF/XH7f1JI35i6wPNnl7zSup6Q0/l+0&#xA;GnWdi012Y2QxOjSykjmXb1asa70Fa0wDWSv+7n8h+tfy4r64/b+p5TqepXuqajc6jfStPeXcjTXE&#xA;rEks7mpO+ZzjP0dxV2KuxV2Kvl3/AJzL/wCOn5W/4w3n/E4stxsJvnDLGDsVdirsVdirsVemf842&#xA;/wDk6vLv/R5/1AT5GfJlHm+5cobHYq7FXYq7FXYq7FXYq7FXYq7FXYq81/5yN/8AJM+Yf+jP/qOg&#xA;xV8R4q7FXYq7FXYq7FXYq//Z</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:58f3229c-e4f0-11dc-b4fc-000a95b256e8'
  xmlns:stRef='http://ns.adobe.com/xap/1.0/sType/ResourceRef#'
  xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/'>
  <xapMM:DocumentID>uuid:8DA4BF1173D5DC1194CFF858E7EBA1F9</xapMM:DocumentID>
  <xapMM:InstanceID>uuid:d149f23a-529b-9544-9144-aa5a40529e8a</xapMM:InstanceID>
  <xapMM:DerivedFrom rdf:parseType='Resource'>
   <stRef:instanceID>uuid:8CA4BF1173D5DC1194CFF858E7EBA1F9</stRef:instanceID>
   <stRef:documentID>uuid:f53c23f0-d481-11dc-9032-0017f2cebc4c</stRef:documentID>
  </xapMM:DerivedFrom>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:58f3229c-e4f0-11dc-b4fc-000a95b256e8'
  xmlns:stDim='http://ns.adobe.com/xap/1.0/sType/Dimensions#'
  xmlns:xapG='http://ns.adobe.com/xap/1.0/g/'
  xmlns:xapTPg='http://ns.adobe.com/xap/1.0/t/pg/'>
  <xapTPg:NPages>1</xapTPg:NPages>
  <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
  <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
  <xapTPg:MaxPageSize rdf:parseType='Resource'>
   <stDim:w>8.500000</stDim:w>
   <stDim:h>11.000000</stDim:h>
   <stDim:unit>Inches</stDim:unit>
  </xapTPg:MaxPageSize>
  <xapTPg:PlateNames>
   <rdf:Seq>
    <rdf:li>Cyan</rdf:li>
    <rdf:li>Magenta</rdf:li>
    <rdf:li>Yellow</rdf:li>
    <rdf:li>Black</rdf:li>
   </rdf:Seq>
  </xapTPg:PlateNames>
  <xapTPg:SwatchGroups>
   <rdf:Seq>
    <rdf:li rdf:parseType='Resource'>
     <xapG:groupName>Default Swatch Group</xapG:groupName>
     <xapG:groupType>0</xapG:groupType>
     <xapG:Colorants>
      <rdf:Seq>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>White</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>255</xapG:red>
        <xapG:green>255</xapG:green>
        <xapG:blue>255</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Black</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>0</xapG:red>
        <xapG:green>0</xapG:green>
        <xapG:blue>0</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Crimson</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>151</xapG:red>
        <xapG:green>15</xapG:green>
        <xapG:blue>0</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Moroccan Rust</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>186</xapG:red>
        <xapG:green>0</xapG:green>
        <xapG:blue>0</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Magenta</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>228</xapG:red>
        <xapG:green>27</xapG:green>
        <xapG:blue>91</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Va Va Va Voom Red</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>255</xapG:red>
        <xapG:green>26</xapG:green>
        <xapG:blue>0</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Orange</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>255</xapG:red>
        <xapG:green>153</xapG:green>
        <xapG:blue>0</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Custard</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>254</xapG:red>
        <xapG:green>222</xapG:green>
        <xapG:blue>88</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Canary Yellow</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>255</xapG:red>
        <xapG:green>255</xapG:green>
        <xapG:blue>62</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Cuban Lime</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>204</xapG:red>
        <xapG:green>255</xapG:green>
        <xapG:blue>66</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Dried Sage</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>163</xapG:red>
        <xapG:green>195</xapG:green>
        <xapG:blue>128</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Calypso Green</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>115</xapG:red>
        <xapG:green>190</xapG:green>
        <xapG:blue>30</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Springfield Green</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>0</xapG:red>
        <xapG:green>255</xapG:green>
        <xapG:blue>0</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Christmas Green</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>1</xapG:red>
        <xapG:green>173</xapG:green>
        <xapG:blue>78</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Pine</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>0</xapG:red>
        <xapG:green>84</xapG:green>
        <xapG:blue>71</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Sky Blue</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>138</xapG:red>
        <xapG:green>219</xapG:green>
        <xapG:blue>255</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Aegean Sea</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>0</xapG:red>
        <xapG:green>160</xapG:green>
        <xapG:blue>198</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Denim</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>2</xapG:red>
        <xapG:green>122</xapG:green>
        <xapG:blue>187</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>St. Petersburg Blue</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>10</xapG:red>
        <xapG:green>80</xapG:green>
        <xapG:blue>255</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Periwinkle</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>128</xapG:red>
        <xapG:green>141</xapG:green>
        <xapG:blue>255</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Maltese Lilac</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>204</xapG:red>
        <xapG:green>204</xapG:green>
        <xapG:blue>255</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Passionate Purple</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>186</xapG:red>
        <xapG:green>0</xapG:green>
        <xapG:blue>255</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Shocking Pink</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>255</xapG:red>
        <xapG:green>102</xapG:green>
        <xapG:blue>255</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Bubble Gum Pink</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>251</xapG:red>
        <xapG:green>174</xapG:green>
        <xapG:blue>255</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Bisque</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>231</xapG:red>
        <xapG:green>185</xapG:green>
        <xapG:blue>138</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Cafe Con Leche</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>169</xapG:red>
        <xapG:green>119</xapG:green>
        <xapG:blue>93</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Malt</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>138</xapG:red>
        <xapG:green>100</xapG:green>
        <xapG:blue>74</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Mocha</xapG:swatchName>
        <xapG:mode>RGB</xapG:mode>
        <xapG:type>PROCESS</xapG:type>
        <xapG:red>90</xapG:red>
        <xapG:green>61</xapG:green>
        <xapG:blue>27</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Global Black</xapG:swatchName>
        <xapG:type>PROCESS</xapG:type>
        <xapG:tint>100.000000</xapG:tint>
        <xapG:mode>RGB</xapG:mode>
        <xapG:red>0</xapG:red>
        <xapG:green>0</xapG:green>
        <xapG:blue>0</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Global Rust</xapG:swatchName>
        <xapG:type>PROCESS</xapG:type>
        <xapG:tint>100.000000</xapG:tint>
        <xapG:mode>RGB</xapG:mode>
        <xapG:red>185</xapG:red>
        <xapG:green>0</xapG:green>
        <xapG:blue>0</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Global Orange</xapG:swatchName>
        <xapG:type>PROCESS</xapG:type>
        <xapG:tint>100.000000</xapG:tint>
        <xapG:mode>RGB</xapG:mode>
        <xapG:red>255</xapG:red>
        <xapG:green>153</xapG:green>
        <xapG:blue>0</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Global Yellow</xapG:swatchName>
        <xapG:type>PROCESS</xapG:type>
        <xapG:tint>100.000000</xapG:tint>
        <xapG:mode>RGB</xapG:mode>
        <xapG:red>255</xapG:red>
        <xapG:green>255</xapG:green>
        <xapG:blue>61</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Global Green</xapG:swatchName>
        <xapG:type>PROCESS</xapG:type>
        <xapG:tint>100.000000</xapG:tint>
        <xapG:mode>RGB</xapG:mode>
        <xapG:red>115</xapG:red>
        <xapG:green>190</xapG:green>
        <xapG:blue>29</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Global Sky</xapG:swatchName>
        <xapG:type>PROCESS</xapG:type>
        <xapG:tint>100.000000</xapG:tint>
        <xapG:mode>RGB</xapG:mode>
        <xapG:red>138</xapG:red>
        <xapG:green>218</xapG:green>
        <xapG:blue>255</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Global Sea</xapG:swatchName>
        <xapG:type>PROCESS</xapG:type>
        <xapG:tint>100.000000</xapG:tint>
        <xapG:mode>RGB</xapG:mode>
        <xapG:red>0</xapG:red>
        <xapG:green>160</xapG:green>
        <xapG:blue>198</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Global Lilac</xapG:swatchName>
        <xapG:type>PROCESS</xapG:type>
        <xapG:tint>100.000000</xapG:tint>
        <xapG:mode>RGB</xapG:mode>
        <xapG:red>204</xapG:red>
        <xapG:green>204</xapG:green>
        <xapG:blue>255</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Global Periwinkle</xapG:swatchName>
        <xapG:type>PROCESS</xapG:type>
        <xapG:tint>100.000000</xapG:tint>
        <xapG:mode>RGB</xapG:mode>
        <xapG:red>128</xapG:red>
        <xapG:green>140</xapG:green>
        <xapG:blue>255</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Global Pink</xapG:swatchName>
        <xapG:type>PROCESS</xapG:type>
        <xapG:tint>100.000000</xapG:tint>
        <xapG:mode>RGB</xapG:mode>
        <xapG:red>250</xapG:red>
        <xapG:green>174</xapG:green>
        <xapG:blue>255</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Global Cafe</xapG:swatchName>
        <xapG:type>PROCESS</xapG:type>
        <xapG:tint>100.000000</xapG:tint>
        <xapG:mode>RGB</xapG:mode>
        <xapG:red>168</xapG:red>
        <xapG:green>119</xapG:green>
        <xapG:blue>92</xapG:blue>
       </rdf:li>
       <rdf:li rdf:parseType='Resource'>
        <xapG:swatchName>Global Mocha</xapG:swatchName>
        <xapG:type>PROCESS</xapG:type>
        <xapG:tint>100.000000</xapG:tint>
        <xapG:mode>RGB</xapG:mode>
        <xapG:red>91</xapG:red>
        <xapG:green>61</xapG:green>
        <xapG:blue>27</xapG:blue>
       </rdf:li>
      </rdf:Seq>
     </xapG:Colorants>
    </rdf:li>
   </rdf:Seq>
  </xapTPg:SwatchGroups>
 </rdf:Description>

 <rdf:Description rdf:about='uuid:58f3229c-e4f0-11dc-b4fc-000a95b256e8'
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
  <dc:title>
   <rdf:Alt>
    <rdf:li xml:lang='x-default'>jquery_logotype_sj2</rdf:li>
   </rdf:Alt>
  </dc:title>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5Adobe_AGM_Utils beginAdobe_AGM_Core/page_setup get execAdobe_CoolType_Core/page_setup get execAdobe_AGM_Image/page_setup get exec%%EndPageSetupAdobe_AGM_Core/AGMCORE_save save ddf1 -1 scale 0 -686.433 translate[1 0 0 1 0 0 ]  concat% page clipgsavenewpathgsave % PSGState0 0 mo0 686.433 li2310.78 686.433 li2310.78 0 liclp[1 0 0 1 0 0 ] concat549.487 39.0313 mo549.487 39.0313 549.488 39.0313 549.488 39.0274 cv546.806 48.5313 li549.487 39.0313 lifalse sop/0 [/DeviceCMYK] add_csa0.666667 0.525491 0.537255 0.611765 cmykf563.279 59.6641 mo560.324 59.6465 li563.279 59.6641 lif562.522 73.8575 mo562.522 73.8575 562.524 73.8575 562.525 73.8575 cv544.82 73.9219 li562.522 73.8575 lif566.235 59.6817 mo563.279 59.6641 li566.235 59.6817 lif564.078 72.6504 mo567.162 60.8887 li564.078 72.6524 li564.078 72.6524 564.078 72.6524 564.078 72.6504 cvf629.259 18.4864 mo623.514 45.4942 li629.259 18.4864 lif614.488 18.4864 mo610.126 38.6622 li614.488 18.4844 li614.488 18.4864 lif628.277 17.2715 mo615.992 17.2715 li615.31 17.2715 614.633 17.8184 614.488 18.4844 cv610.126 38.6622 li605.765 58.8399 li605.621 59.5059 604.945 60.0508 604.263 60.0508 cv596.809 60.0508 li595.568 60.0508 li586.965 60.0508 587.96 54.1016 589.722 45.9493 cv589.74 45.8672 589.757 45.7872 589.775 45.7032 cv589.968 44.6758 li589.98 44.6094 589.994 44.543 590.004 44.4825 cv590.397 42.3907 li590.818 40.1485 li590.946 39.4727 591.14 38.4844 591.267 37.8633 cv593.25 28.1758 li595.234 18.4883 li595.371 17.8204 594.923 17.2715 594.242 17.2715 cv581.632 17.2715 li580.951 17.2715 580.276 17.8204 580.136 18.4864 cv577.425 31.3497 li574.714 44.211 li574.712 44.2168 574.711 44.2247 574.71 44.2305 cv574.458 45.4258 li571.335 59.6836 572.164 73.2794 589.136 73.7051 cv589.414 73.7129 589.628 73.7149 589.628 73.7149 cv616.27 73.7149 li616.952 73.7149 617.626 73.168 617.769 72.5 cv623.514 45.4942 li629.259 18.4864 li629.401 17.8184 628.958 17.2715 628.277 17.2715 cvf677.282 60.1915 mo677.964 60.1915 678.411 60.7383 678.274 61.4063 cv677.081 67.2364 lif675.888 73.0704 mo677.081 67.2364 li675.887 73.0723 li675.887 73.0704 675.888 73.0704 675.888 73.0704 cvf674.398 74.2969 mo674.4 74.2969 674.402 74.295 674.404 74.295 cv670.789 74.3243 659.924 74.4063 651.759 74.4063 cv661.697 74.4063 674.398 74.2969 674.398 74.2969 cvf644.425 52.6817 mo644.416 52.043 645.142 50.9434 645.825 50.9434 cv644.291 50.918 li643.599 57.8711 644.425 52.6817 644.425 52.6817 cvf652.873 74.4044 mo652.794 74.4044 652.714 74.4044 652.636 74.4063 cv652.714 74.4044 652.794 74.4044 652.873 74.4044 cvf677.282 60.1915 mo677.964 60.1915 678.411 60.7383 678.274 61.4063 cv677.081 67.2364 li676.886 68.1876 lif658.688 74.3907 mo658.671 74.3907 658.655 74.3907 658.638 74.3907 cv658.655 74.3907 658.671 74.3907 658.688 74.3907 cvf655.674 74.4004 mo655.615 74.4004 655.558 74.4004 655.5 74.4004 cv655.558 74.4004 655.615 74.4004 655.674 74.4004 cvf654.755 74.4024 mo654.658 74.4024 654.562 74.4024 654.466 74.4044 cv654.562 74.4024 654.658 74.4024 654.755 74.4024 cvf653.818 74.4044 mo653.732 74.4044 653.648 74.4044 653.564 74.4044 cv653.648 74.4044 653.732 74.4044 653.818 74.4044 cvf655.5 74.4004 mo655.25 74.4004 655.002 74.4024 654.755 74.4024 cv655.002 74.4024 655.25 74.4004 655.5 74.4004 cvf658.638 74.3907 mo657.644 74.3946 656.652 74.3985 655.674 74.4004 cv656.652 74.3985 657.645 74.3946 658.638 74.3907 cvf674.404 74.295 mo674.405 74.295 li671.755 74.3165 665.212 74.3653 658.688 74.3907 cv665.21 74.3672 671.753 74.3165 674.404 74.295 cvf675.887 73.0723 mo676.886 68.1876 li675.886 73.0762 li675.886 73.0743 675.887 73.0743 675.887 73.0723 cvf654.466 74.4044 mo654.249 74.4044 654.033 74.4044 653.818 74.4044 cv654.033 74.4044 654.249 74.4044 654.466 74.4044 cvf652.636 74.4063 mo652.341 74.4063 652.048 74.4063 651.759 74.4063 cv652.048 74.4063 652.341 74.4063 652.636 74.4063 cvf653.564 74.4044 mo653.332 74.4044 653.101 74.4044 652.873 74.4044 cv653.101 74.4044 653.332 74.4044 653.564 74.4044 cvf473.856 52.8282 mo475.764 44.3692 li473.583 54.0391 li471.489 63.8887 li473.324 55.254 li473.465 54.586 473.706 53.4942 473.856 52.8282 cvf496.701 17.129 mo483.21 17.129 li482.527 17.129 481.846 17.6739 481.694 18.3379 cv480.415 23.9844 li479.135 29.6329 li478.985 30.2969 479.419 30.8418 480.102 30.8418 cv493.698 30.8418 li494.379 30.8418 495.057 30.2969 495.204 29.6309 cv496.44 23.9844 li497.676 18.3418 li497.676 18.3399 497.676 18.3399 497.676 18.3399 cv497.822 17.6739 497.383 17.129 496.701 17.129 cvf493.764 35.9122 mo493.764 35.9102 493.764 35.9102 493.764 35.9102 cv489.807 54.2168 li493.764 35.9122 lif454.569 96.5665 mo454.569 96.5665 461.37 96.6544 465.693 96.6544 cv462.409 96.6544 456.985 96.5938 454.563 96.5645 cv454.565 96.5645 454.567 96.5665 454.569 96.5665 cvf477.674 35.9102 mo475.764 44.3692 li477.674 35.9102 lif492.786 34.6993 mo479.188 34.6993 li478.506 34.6993 477.825 35.2442 477.674 35.9102 cv475.764 44.3692 li473.856 52.8282 li473.706 53.4942 473.465 54.586 473.324 55.254 cv471.489 63.8887 li469.655 72.5235 li469.512 73.1895 469.219 74.2657 469 74.9122 cv469 74.9122 466.46 82.4708 462.19 82.3848 cv462.008 82.3809 461.832 82.379 461.657 82.375 cv459.587 82.336 457.961 82.3067 457.961 82.3067 cv457.96 82.3067 457.96 82.3067 457.958 82.3067 cv457.278 82.2969 456.593 82.8282 456.434 83.4903 cv455.024 89.418 li453.616 95.3438 li453.458 96.0059 453.885 96.5528 454.563 96.5645 cv456.985 96.5938 462.409 96.6544 465.693 96.6544 cv476.36 96.6544 481.983 90.7442 485.588 73.7364 cv489.807 54.2168 li493.764 35.9102 li493.908 35.2442 493.467 34.6993 492.786 34.6993 cvf685.949 73.7149 mo685.267 73.7149 684.825 73.168 684.968 72.5 cv695.197 24.5879 lif700.166 72.4981 mo704.302 52.0489 li700.166 72.4981 lif685.118 73.1075 mo685.035 72.7735 685.084 71.9551 685.228 71.2872 cv690.082 48.545 li684.968 72.5 li684.825 73.168 685.267 73.7149 685.949 73.7149 cv687.191 73.7149 li686.508 73.7149 685.2 73.4415 685.118 73.1075 cvf699.354 73.4415 mo698.983 73.5918 698.12 73.7149 697.437 73.7149 cv698.679 73.7149 li699.361 73.7149 700.031 73.168 700.166 72.4981 cv700.412 71.2832 li700.276 71.9512 699.726 73.2911 699.354 73.4415 cvf702.233 62.2735 mo704.059 53.2481 li704.058 53.254 704.057 53.2618 704.056 53.2657 cv702.233 62.2735 lif742.592 27.7969 mo743.156 30.125 li743.311 30.7911 742.88 31.3321 742.2 31.334 cvf700.412 71.2832 mo702.233 62.2735 li700.412 71.2832 lif742.035 25.4122 mo742.035 25.4122 li742.592 27.7969 li742.035 25.4122 lif704.059 53.2481 mo704.195 52.5801 704.419 51.4981 704.561 50.836 cv706.511 41.6993 li704.302 52.0489 li704.059 53.2481 lif695.362 23.8028 mo695.226 24.4473 695.052 25.2618 694.937 25.8008 cv690.082 48.545 li695.197 24.5879 li695.362 23.8028 lif743.156 30.125 mo742.592 27.7969 li742.035 25.4122 li741.752 24.2051 li740.648 19.9141 737.406 17.4376 730.366 17.4376 cv719.406 17.4258 li709.312 17.4141 li708.446 17.4141 li697.955 17.4141 li697.273 17.4141 696.598 17.959 696.458 18.627 cv696.457 18.627 696.457 18.627 696.457 18.627 cv695.955 21 li695.362 23.8028 li695.197 24.5879 li690.082 48.545 li685.228 71.2872 li685.084 71.9551 685.035 72.7735 685.118 73.1075 cv685.2 73.4415 686.508 73.7149 687.191 73.7149 cv697.437 73.7149 li698.12 73.7149 698.983 73.5918 699.354 73.4415 cv699.726 73.2911 700.276 71.9512 700.412 71.2832 cv702.233 62.2735 li704.056 53.2657 li704.057 53.2618 704.058 53.254 704.059 53.2481 cv704.302 52.0489 li706.511 41.6993 li708.462 32.5586 li708.607 31.8946 709.279 31.3516 709.96 31.3497 cv742.2 31.334 li742.88 31.3321 743.311 30.7911 743.156 30.125 cvf784.655 9.07422 mo783.972 9.07911 782.856 9.08301 782.173 9.08301 cv771.854 9.08301 li771.171 9.08301 770.297 9.54395 769.913 10.1075 cv747.094 43.5372 li746.708 44.1016 746.269 44.0176 746.118 43.3536 cv744.439 35.9883 li744.288 35.3223 743.604 34.7793 742.922 34.7793 cv728.252 34.7793 li727.57 34.7793 727.166 35.3145 727.352 35.9708 cv733.925 58.9981 li734.113 59.6544 734.126 60.7325 733.958 61.3926 cv731.092 72.5372 li730.922 73.1993 731.342 73.7403 732.025 73.7403 cv746.523 73.7403 li747.205 73.7403 747.902 73.1993 748.071 72.5372 cv750.937 61.3926 li751.106 60.7325 751.581 59.7442 751.992 59.1993 cv789.037 10.0323 li789.448 9.48731 789.225 9.04395 788.544 9.04883 cv784.655 9.07422 lif668.116 37.9141 mo668.115 37.9004 li668.029 38.6407 667.346 39.1836 666.665 39.1836 cv648.066 39.1836 li647.423 39.1836 647.096 38.7461 647.191 38.2071 cv647.197 38.1915 647.199 38.1778 647.208 38.1641 cv647.208 38.1641 647.203 38.1661 647.197 38.17 cv647.201 38.1485 647.201 38.129 647.207 38.1075 cv647.207 38.1075 647.242 37.9766 647.292 37.7911 cv649.068 33.0684 652.686 29.9688 659.486 29.9688 cv667.141 29.9688 668.635 33.709 668.116 37.9141 cvcp662.66 16.4473 mo638.787 16.4473 633.13 30.9376 629.957 45.5626 cv626.783 60.4688 627.056 74.4063 651.759 74.4063 cv652.636 74.4063 li652.714 74.4044 652.794 74.4044 652.873 74.4044 cv653.101 74.4044 653.332 74.4044 653.564 74.4044 cv653.648 74.4044 653.732 74.4044 653.818 74.4044 cv654.033 74.4044 654.249 74.4044 654.466 74.4044 cv654.562 74.4024 654.658 74.4024 654.755 74.4024 cv655.002 74.4024 655.25 74.4004 655.5 74.4004 cv655.558 74.4004 655.615 74.4004 655.674 74.4004 cv656.652 74.3985 657.644 74.3946 658.638 74.3907 cv658.688 74.3907 li665.212 74.3653 671.755 74.3165 674.406 74.295 cv675.084 74.2852 675.747 73.7383 675.886 73.0762 cv676.886 68.1876 li677.081 67.2364 li678.274 61.4063 li678.411 60.7383 677.964 60.1915 677.282 60.1915 cv655.073 60.1915 li646.24 60.1915 643.617 57.8438 644.584 50.9434 cv680.085 50.9434 li680.082 50.9473 li680.091 50.9473 680.099 50.9434 680.107 50.9434 cv680.671 50.9336 681.193 50.545 681.4 50.0274 cv681.439 49.9278 681.472 49.8243 681.486 49.7168 cv681.482 49.7208 li686.753 29.8379 685.242 16.4473 662.66 16.4473 cvf549.824 37.8379 mo549.488 39.0274 li549.488 39.0313 549.487 39.0313 549.487 39.0313 cv546.806 48.5313 li544.126 58.0294 li543.941 58.6856 543.232 59.2227 542.548 59.2227 cv528.36 59.2227 li517.597 59.2227 514.977 50.8047 517.597 38.3887 cv520.217 25.6895 525.355 17.795 535.948 16.9961 cv550.423 15.9043 553.319 26.086 549.824 37.8379 cvcp559.554 58.4922 mo559.554 58.4922 566.244 42.25 567.763 32.8672 cv569.834 20.3086 563.548 2.09473 539.26 2.09473 cv515.111 2.09473 504.625 19.4844 500.623 38.3887 cv496.622 57.4297 501.864 74.129 525.876 73.9922 cv544.82 73.9219 li562.525 73.8575 li563.207 73.8516 563.904 73.3106 564.078 72.6524 cv567.162 60.8887 li567.334 60.2286 566.916 59.6856 566.235 59.6817 cv563.279 59.6641 li560.324 59.6465 li559.744 59.6426 559.412 59.2676 559.482 58.7696 cv559.495 58.6797 559.515 58.5879 559.554 58.4922 cvf679.103 47.6211 mo679.103 48.0704 678.739 48.4356 678.289 48.4356 cv677.839 48.4356 677.474 48.0704 677.474 47.6211 cv677.474 47.1719 677.839 46.8086 678.289 46.8086 cv678.739 46.8086 679.103 47.1719 679.103 47.6211 cvf375.153 26.502 mo368.485 36.086 369.315 48.5547 374.409 58.7383 cv374.53 58.9825 374.657 59.2227 374.782 59.4629 cv374.862 59.6153 374.937 59.7715 375.02 59.9219 cv375.067 60.0118 375.12 60.0997 375.168 60.1856 cv375.255 60.3477 375.344 60.502 375.434 60.6602 cv375.592 60.9395 375.754 61.2168 375.92 61.4942 cv376.012 61.6465 376.103 61.7989 376.198 61.9512 cv376.381 62.2481 376.57 62.5411 376.762 62.834 cv376.842 62.959 376.92 63.084 377.002 63.2051 cv377.268 63.6016 377.54 63.9961 377.82 64.3848 cv377.827 64.3946 377.834 64.4063 377.843 64.4161 cv377.887 64.4786 377.936 64.5391 377.981 64.6016 cv378.223 64.9356 378.473 65.2657 378.726 65.5918 cv378.819 65.711 378.913 65.8301 379.006 65.9493 cv379.232 66.2325 379.461 66.5137 379.695 66.795 cv379.782 66.9004 379.87 67.0059 379.958 67.1094 cv380.271 67.4786 380.59 67.8458 380.916 68.2051 cv380.922 68.211 380.93 68.2188 380.936 68.2247 cv380.95 68.2403 380.961 68.25 380.973 68.2657 cv381.292 68.6133 381.618 68.9532 381.948 69.293 cv382.05 69.3985 382.155 69.504 382.26 69.6075 cv382.516 69.8653 382.776 70.1192 383.039 70.3711 cv383.145 70.4727 383.25 70.5762 383.357 70.6739 cv383.708 71.004 384.062 71.3282 384.423 71.6446 cv384.429 71.6504 384.434 71.6544 384.44 71.6582 cv384.501 71.7129 384.565 71.7637 384.626 71.8165 cv384.944 72.0918 385.268 72.3653 385.594 72.6348 cv385.727 72.7422 385.862 72.8477 385.996 72.9551 cv386.262 73.168 386.532 73.379 386.803 73.586 cv386.947 73.6954 387.09 73.8047 387.235 73.9141 cv387.535 74.1348 387.836 74.3516 388.141 74.5645 cv388.252 74.6446 388.36 74.7227 388.471 74.7989 cv388.502 74.8204 388.531 74.8418 388.562 74.8633 cv388.851 75.0626 389.147 75.254 389.442 75.4454 cv389.569 75.5294 389.695 75.6172 389.823 75.6993 cv390.276 75.9864 390.736 76.2696 391.201 76.543 cv391.327 76.6153 391.455 76.6856 391.582 76.7579 cv391.923 76.9551 392.267 77.1485 392.616 77.3379 cv392.804 77.4395 392.998 77.5352 393.188 77.6329 cv393.434 77.7618 393.678 77.8926 393.928 78.0176 cv393.985 78.045 394.043 78.0723 394.099 78.0997 cv394.2 78.1485 394.301 78.1954 394.402 78.2461 cv394.79 78.4317 395.18 78.6133 395.575 78.7891 cv395.659 78.8262 395.74 78.8633 395.823 78.9004 cv396.275 79.0977 396.731 79.2872 397.191 79.4688 cv397.301 79.5137 397.413 79.5567 397.524 79.5997 cv397.95 79.7637 398.381 79.9258 398.815 80.0782 cv398.87 80.0977 398.922 80.1153 398.977 80.1348 cv399.453 80.3008 399.933 80.4551 400.416 80.6055 cv400.532 80.6387 400.648 80.6758 400.764 80.709 cv401.256 80.8575 401.743 81.0352 402.25 81.129 cv434.499 87.0098 443.866 61.75 443.866 61.75 cv435.999 72 422.034 74.7032 408.802 71.6934 cv408.301 71.5801 407.815 71.4239 407.326 71.2794 cv407.202 71.2422 407.08 71.2051 406.958 71.168 cv406.48 71.0215 406.006 70.8672 405.536 70.7051 cv405.471 70.6817 405.406 70.6582 405.34 70.6348 cv404.918 70.4864 404.501 70.3301 404.086 70.17 cv403.969 70.1231 403.852 70.0782 403.735 70.0313 cv403.28 69.8516 402.828 69.6641 402.381 69.4688 cv402.29 69.4297 402.202 69.3887 402.111 69.3497 cv401.727 69.1758 401.347 69 400.969 68.8184 cv400.86 68.7657 400.75 68.7149 400.639 68.6602 cv400.344 68.5157 400.051 68.3614 399.758 68.211 cv399.562 68.1075 399.363 68.0098 399.168 67.9024 cv398.811 67.711 398.46 67.5118 398.11 67.3086 cv397.992 67.2422 397.872 67.1778 397.752 67.1094 cv397.288 66.836 396.829 66.5528 396.375 66.2657 cv396.249 66.1856 396.126 66.0997 396.002 66.0176 cv395.672 65.8047 395.344 65.5879 395.021 65.3653 cv394.915 65.293 394.811 65.2149 394.706 65.1426 cv394.393 64.9219 394.084 64.6993 393.778 64.4727 cv393.639 64.3692 393.502 64.2657 393.367 64.1622 cv393.086 63.9473 392.807 63.7305 392.53 63.5079 cv392.405 63.4082 392.28 63.3086 392.157 63.209 cv391.805 62.92 391.458 62.629 391.115 62.3301 cv391.079 62.2989 391.04 62.2676 391 62.2344 cv390.629 61.9082 390.265 61.5743 389.905 61.2383 cv389.8 61.1387 389.699 61.0411 389.596 60.9415 cv389.33 60.6876 389.067 60.4317 388.809 60.17 cv388.706 60.0665 388.602 59.9649 388.5 59.8614 cv388.172 59.5254 387.85 59.1856 387.535 58.8399 cv387.519 58.8223 387.502 58.8067 387.487 58.7891 cv387.153 58.4239 386.827 58.0508 386.507 57.6739 cv386.42 57.5704 386.336 57.4708 386.25 57.3692 cv386.012 57.0821 385.776 56.7911 385.545 56.4981 cv385.46 56.3907 385.374 56.2832 385.288 56.1739 cv385.01 55.8145 384.739 55.4551 384.473 55.0899 cv377.127 45.0704 374.489 31.25 380.36 19.9004 cv0.427451 0.313726 0.286275 0.129412 cmykf395.852 18.4278 mo391.03 25.3672 391.292 34.6563 395.053 41.9961 cv395.684 43.2266 396.393 44.42 397.186 45.5567 cv397.909 46.5918 398.71 47.8243 399.668 48.6563 cv400.016 49.0391 400.379 49.4122 400.75 49.7793 cv400.844 49.875 400.94 49.9668 401.036 50.0606 cv401.396 50.4102 401.762 50.754 402.141 51.0879 cv402.157 51.0997 402.17 51.1153 402.186 51.127 cv402.19 51.1309 402.194 51.1329 402.197 51.1368 cv402.616 51.504 403.048 51.8575 403.488 52.2051 cv403.585 52.2793 403.682 52.3575 403.781 52.4336 cv404.221 52.7715 404.67 53.1036 405.131 53.42 cv405.145 53.4297 405.157 53.4395 405.17 53.4493 cv405.374 53.5899 405.581 53.7208 405.787 53.8555 cv405.885 53.92 405.979 53.9883 406.079 54.0489 cv406.408 54.2598 406.741 54.4649 407.08 54.6622 cv407.127 54.6915 407.174 54.7168 407.221 54.7442 cv407.513 54.9122 407.809 55.0782 408.106 55.2383 cv408.21 55.2969 408.315 55.3477 408.42 55.4024 cv408.626 55.5098 408.831 55.6192 409.04 55.7227 cv409.071 55.7383 409.103 55.752 409.133 55.7657 cv409.558 55.9747 409.987 56.1758 410.424 56.3672 cv410.518 56.4082 410.615 56.4454 410.71 56.4844 cv411.059 56.6329 411.413 56.7774 411.768 56.9141 cv411.918 56.9708 412.071 57.0254 412.221 57.0801 cv412.543 57.1993 412.867 57.3086 413.193 57.418 cv413.34 57.4649 413.485 57.5137 413.632 57.5586 cv414.096 57.7032 414.554 57.8848 415.038 57.9649 cv439.936 62.0899 445.684 42.92 445.684 42.92 cv440.502 50.3829 430.468 53.9434 419.76 51.1641 cv419.285 51.0391 418.816 50.9024 418.35 50.7559 cv418.208 50.7129 418.068 50.6661 417.926 50.6192 cv417.595 50.5118 417.266 50.3985 416.94 50.2793 cv416.791 50.2247 416.641 50.17 416.495 50.1133 cv416.137 49.9766 415.784 49.834 415.433 49.6856 cv415.337 49.6446 415.241 49.6075 415.147 49.5645 cv414.708 49.3731 414.275 49.1719 413.848 48.961 cv413.628 48.8536 413.413 48.7403 413.197 48.629 cv413.072 48.5645 412.946 48.5 412.821 48.4356 cv412.543 48.2852 412.268 48.129 411.997 47.9708 cv411.932 47.9336 411.865 47.8985 411.799 47.8594 cv411.462 47.6622 411.13 47.459 410.801 47.25 cv410.7 47.1856 410.602 47.1153 410.5 47.0489 cv410.284 46.9083 410.067 46.7657 409.854 46.6211 cv409.395 46.3047 408.949 45.9727 408.508 45.6368 cv408.407 45.5567 408.305 45.4786 408.206 45.3985 cv403.514 41.6993 399.799 36.6426 398.033 30.9083 cv396.181 24.961 396.581 18.2852 399.788 12.8672 cvf413.26 12.3946 mo410.418 16.5782 410.138 21.7735 412.111 26.3946 cv414.191 31.2989 418.454 35.1465 423.428 36.9708 cv423.633 37.0469 423.838 37.1153 424.046 37.1856 cv424.137 37.2129 424.227 37.2442 424.319 37.2715 cv424.612 37.3633 424.903 37.4708 425.206 37.5274 cv438.954 40.1836 442.682 30.4727 443.675 29.043 cv440.409 33.7461 434.919 34.875 428.184 33.2403 cv427.653 33.1114 427.068 32.92 426.555 32.7383 cv425.897 32.504 425.25 32.2364 424.62 31.9336 cv423.423 31.3594 422.284 30.6622 421.227 29.8633 cv415.2 25.2911 411.456 16.5665 415.388 9.46192 cvf568.097 93.877 mo564.134 102.903 li559.759 102.903 li560.118 94.7012 li556.897 102.903 li552.661 102.903 li552.549 93.877 li553.017 91.6485 li556.017 91.6485 li555.439 100.563 li558.769 91.6485 li562.952 91.6485 li562.649 100.674 li565.952 91.6485 li568.565 91.6485 li568.097 93.877 lif575.004 96.5469 mo575.39 94.7852 575.28 94.4551 574.372 94.4551 cv572.996 94.4551 li572.115 98.584 li570.766 102.903 li568.208 102.903 li570.298 93.1075 li570.602 91.6758 li572.941 91.6758 li573.244 92.336 li573.244 92.336 574.592 91.5391 575.912 91.5391 cv578.719 91.5391 578.5 93.6563 577.893 96.5469 cv575.004 96.5469 lif583.314 90.2442 mo582.187 90.2442 581.471 89.9141 581.746 88.5391 cv582.048 87.1622 582.929 86.8321 584.029 86.8321 cv585.131 86.8321 585.874 87.1622 585.571 88.5391 cv585.295 89.8868 584.416 90.2442 583.314 90.2442 cvcp582.104 102.903 mo579.571 102.903 li580.067 98.5 li580.948 94.4278 li579.187 94.0411 li579.682 91.6485 li584.497 91.6485 li582.104 102.903 lif593.084 94.0411 mo589.919 94.4278 li589.01 98.7208 li588.762 99.9044 588.762 100.235 589.809 100.235 cv590.386 100.235 591.927 100.235 591.927 100.235 cv591.487 102.491 li591.487 102.491 589.562 103.069 588.735 103.069 cv585.488 103.069 585.515 101.28 586.094 98.6094 cv586.975 94.4004 li585.213 94.0157 li585.736 91.6211 li587.581 91.6211 li588.626 88.7852 li591.13 88.7852 li590.524 91.6211 li593.606 91.6211 li593.084 94.0411 lif599.66 94.1797 mo598.174 94.1797 597.403 94.9512 597.101 96.3262 cv601.338 95.9688 li601.531 95.0332 601.338 94.1797 599.66 94.1797 cvcp596.689 98.3614 mo596.495 99.7383 597.018 100.206 598.779 100.206 cv603.208 100.206 li602.769 102.297 li602.769 102.297 600.1 103.04 598.119 103.04 cv593.193 103.04 593.137 100.262 593.771 97.2891 cv594.404 94.3711 595.532 91.4844 600.292 91.4844 cv604.888 91.4844 605.109 94.2618 603.98 98.3614 cv596.689 98.3614 lif614.078 102.903 mo611.547 102.903 li612.042 98.5 li613.832 90.1348 li612.069 89.7227 li612.592 87.3282 li617.409 87.3282 li614.078 102.903 lif623.215 94.1797 mo621.728 94.1797 620.958 94.9512 620.655 96.3262 cv624.893 95.9688 li625.084 95.0332 624.893 94.1797 623.215 94.1797 cvcp620.243 98.3614 mo620.05 99.7383 620.574 100.206 622.334 100.206 cv626.764 100.206 li626.324 102.297 li626.324 102.297 623.654 103.04 621.672 103.04 cv616.747 103.04 616.693 100.262 617.326 97.2891 cv617.96 94.3711 619.087 91.4844 623.847 91.4844 cv628.443 91.4844 628.663 94.2618 627.536 98.3614 cv620.243 98.3614 lif639.147 94.3184 mo639.147 94.3184 635.927 94.3458 635.047 94.3458 cv633.175 94.3458 632.983 94.9219 632.846 95.5274 cv632.735 96.0782 li638.679 96.5196 li638.679 96.5196 638.707 98.418 638.458 99.4903 cv638.101 101.28 636.257 103.094 632.928 103.094 cv631.276 103.094 628.607 102.463 628.607 102.463 cv629.075 100.29 li629.075 100.29 632.295 100.29 633.175 100.29 cv634.992 100.29 635.24 99.793 635.351 99.2989 cv635.488 98.584 li629.654 98.1426 li629.654 98.1426 629.434 96.6836 629.736 95.2266 cv630.177 93.2442 631.992 91.5391 635.322 91.5391 cv636.973 91.5391 639.642 92.1426 639.642 92.1426 cv639.147 94.3184 lif650.208 94.3184 mo650.208 94.3184 646.99 94.3458 646.109 94.3458 cv644.238 94.3458 644.045 94.9219 643.908 95.5274 cv643.796 96.0782 li649.742 96.5196 li649.742 96.5196 649.769 98.418 649.521 99.4903 cv649.164 101.28 647.32 103.094 643.99 103.094 cv642.339 103.094 639.669 102.463 639.669 102.463 cv640.137 100.29 li640.137 100.29 643.357 100.29 644.238 100.29 cv646.053 100.29 646.301 99.793 646.413 99.2989 cv646.549 98.584 li640.715 98.1426 li640.715 98.1426 640.496 96.6836 640.797 95.2266 cv641.239 93.2442 643.053 91.5391 646.384 91.5391 cv648.035 91.5391 650.704 92.1426 650.704 92.1426 cv650.208 94.3184 lif653.676 104.692 mo651.476 104.692 li651.558 103.04 li650.759 102.987 650.347 102.409 650.54 101.444 cv650.842 100.069 651.696 99.7383 652.824 99.7383 cv653.924 99.7383 654.666 100.069 654.365 101.444 cv653.676 104.692 lif668.397 94.4278 mo666.747 94.4278 666.169 95.418 665.784 97.2344 cv665.398 99.0508 665.508 100.124 667.159 100.124 cv669.443 100.124 li670.71 94.4278 li668.397 94.4278 licp672.168 101.444 mo671.864 102.903 li669.554 102.876 li669.223 102.161 li669.223 102.161 667.186 103.04 665.812 103.04 cv662.289 103.04 662.124 100.151 662.756 97.2344 cv663.389 94.2618 664.765 91.4551 668.26 91.4551 cv669.527 91.4551 671.232 92.0879 671.232 92.0879 cv672.635 87.3282 li675.168 87.3282 li672.168 101.444 lif681.276 94.3184 mo679.13 94.3184 678.441 95.5274 678.056 97.2891 cv677.699 99.0782 677.865 100.29 679.982 100.29 cv682.184 100.29 682.845 99.1055 683.229 97.2891 cv683.616 95.5821 683.504 94.3184 681.276 94.3184 cvcp679.406 103.069 mo674.865 103.069 674.506 100.235 675.112 97.2891 cv675.746 94.3458 677.341 91.5391 681.882 91.5391 cv686.394 91.5391 686.808 94.3458 686.173 97.2891 cv685.542 100.29 683.945 103.069 679.406 103.069 cvf705.161 102.903 mo705.657 98.5547 li705.904 97.3165 li706.262 95.6661 706.482 94.4551 704.748 94.4551 cv703.4 94.4551 li703.456 95.3086 703.29 96.2715 703.07 97.2891 cv701.887 102.903 li699.328 102.903 li699.823 98.5547 li700.07 97.3165 li700.428 95.6661 700.647 94.4551 698.916 94.4551 cv697.814 94.4551 li695.998 102.903 li693.052 102.903 li695.447 91.6485 li697.758 91.6485 li698.116 92.336 li698.116 92.336 699.685 91.5098 700.951 91.5098 cv701.914 91.5098 702.629 91.9512 702.877 92.5 cv703.427 92.1973 704.997 91.5098 706.126 91.5098 cv709.645 91.5098 709.537 94.3711 708.903 97.2891 cv707.72 102.903 li705.161 102.903 lif716.856 94.3184 mo714.708 94.3184 714.021 95.5274 713.636 97.2891 cv713.279 99.0782 713.445 100.29 715.562 100.29 cv717.763 100.29 718.425 99.1055 718.81 97.2891 cv719.195 95.5821 719.084 94.3184 716.856 94.3184 cvcp714.985 103.069 mo710.443 103.069 710.086 100.235 710.692 97.2891 cv711.325 94.3458 712.92 91.5391 717.461 91.5391 cv721.975 91.5391 722.387 94.3458 721.753 97.2891 cv721.122 100.29 719.525 103.069 714.985 103.069 cvf729.404 96.5469 mo729.789 94.7852 729.679 94.4551 728.772 94.4551 cv727.395 94.4551 li726.514 98.584 li725.166 102.903 li722.607 102.903 li724.698 93.1075 li725.002 91.6758 li727.34 91.6758 li727.642 92.336 li727.642 92.336 728.991 91.5391 730.313 91.5391 cv733.119 91.5391 732.898 93.6563 732.292 96.5469 cv729.404 96.5469 lif739.255 94.1797 mo737.771 94.1797 737 94.9512 736.698 96.3262 cv740.933 95.9688 li741.127 95.0332 740.933 94.1797 739.255 94.1797 cvcp736.284 98.3614 mo736.092 99.7383 736.614 100.206 738.374 100.206 cv742.805 100.206 li742.366 102.297 li742.366 102.297 739.696 103.04 737.715 103.04 cv732.79 103.04 732.735 100.262 733.366 97.2891 cv734 94.3711 735.128 91.4844 739.888 91.4844 cv744.483 91.4844 744.705 94.2618 743.576 98.3614 cv736.284 98.3614 lif746.052 103.069 mo744.896 103.069 744.182 102.739 744.485 101.391 cv744.758 100.012 745.612 99.6836 746.769 99.6836 cv747.841 99.6836 748.584 100.012 748.31 101.391 cv748.005 102.711 747.126 103.069 746.052 103.069 cvf29.9981 68.8292 mo0 68.8292 li0 38.8311 li29.9981 38.8311 li29.9981 68.8292 lif68.2217 68.8292 mo38.2232 68.8292 li38.2232 38.8311 li68.2217 38.8311 li68.2217 68.8292 li0.666667 0.525491 0.537255 0.611765 cmykf549.487 307.63 mo549.487 307.63 549.488 307.63 549.488 307.626 cv546.806 317.13 li549.487 307.63 li0.847059 0.619608 0.458824 0.568628 cmykf563.279 328.263 mo560.324 328.246 li563.279 328.263 lif562.522 342.457 mo562.522 342.457 562.524 342.457 562.525 342.457 cv544.82 342.521 li562.522 342.457 lif566.235 328.281 mo563.279 328.263 li566.235 328.281 lif564.078 341.25 mo567.162 329.488 li564.078 341.251 li564.078 341.251 564.078 341.251 564.078 341.25 cvf629.259 287.085 mo623.514 314.093 li629.259 287.085 lif614.488 287.085 mo610.126 307.261 li614.488 287.084 li614.488 287.085 lif628.277 285.871 mo615.992 285.871 li615.31 285.871 614.633 286.418 614.488 287.084 cv610.126 307.261 li605.765 327.439 li605.621 328.105 604.945 328.65 604.263 328.65 cv596.809 328.65 li595.568 328.65 li586.965 328.65 587.96 322.701 589.722 314.548 cv589.74 314.466 589.757 314.386 589.775 314.302 cv589.968 313.275 li589.98 313.208 589.994 313.142 590.004 313.082 cv590.397 310.99 li590.818 308.748 li590.946 308.072 591.14 307.084 591.267 306.462 cv593.25 296.775 li595.234 287.087 li595.371 286.419 594.923 285.871 594.242 285.871 cv581.632 285.871 li580.951 285.871 580.276 286.419 580.136 287.085 cv577.425 299.949 li574.714 312.81 li574.712 312.816 574.711 312.824 574.71 312.83 cv574.458 314.025 li571.335 328.283 572.164 341.878 589.136 342.304 cv589.414 342.312 589.628 342.314 589.628 342.314 cv616.27 342.314 li616.952 342.314 617.626 341.767 617.769 341.099 cv623.514 314.093 li629.259 287.085 li629.401 286.418 628.958 285.871 628.277 285.871 cvf677.282 328.791 mo677.964 328.791 678.411 329.337 678.274 330.005 cv677.081 335.835 lif675.888 341.669 mo677.081 335.835 li675.887 341.671 li675.887 341.669 675.888 341.669 675.888 341.669 cvf674.398 342.896 mo674.4 342.896 674.402 342.894 674.404 342.894 cv670.789 342.923 659.924 343.005 651.759 343.005 cv661.697 343.005 674.398 342.896 674.398 342.896 cvf644.425 321.281 mo644.416 320.642 645.142 319.542 645.825 319.542 cv644.291 319.517 li643.599 326.47 644.425 321.281 644.425 321.281 cvf652.873 343.003 mo652.794 343.003 652.714 343.003 652.636 343.005 cv652.714 343.003 652.794 343.003 652.873 343.003 cvf677.282 328.791 mo677.964 328.791 678.411 329.337 678.274 330.005 cv677.081 335.835 li676.886 336.787 lif658.688 342.99 mo658.671 342.99 658.655 342.99 658.638 342.99 cv658.655 342.99 658.671 342.99 658.688 342.99 cvf655.674 343 mo655.615 343 655.558 343 655.5 343 cv655.558 343 655.615 343 655.674 343 cvf654.755 343.001 mo654.658 343.001 654.562 343.001 654.466 343.003 cv654.562 343.001 654.658 343.001 654.755 343.001 cvf653.818 343.003 mo653.732 343.003 653.648 343.003 653.564 343.003 cv653.648 343.003 653.732 343.003 653.818 343.003 cvf655.5 343 mo655.25 343 655.002 343.001 654.755 343.001 cv655.002 343.001 655.25 343 655.5 343 cvf658.638 342.99 mo657.644 342.994 656.652 342.998 655.674 343 cv656.652 342.998 657.645 342.994 658.638 342.99 cvf674.404 342.894 mo674.405 342.894 li671.755 342.916 665.212 342.964 658.688 342.99 cv665.21 342.966 671.753 342.916 674.404 342.894 cvf675.887 341.671 mo676.886 336.787 li675.886 341.675 li675.886 341.673 675.887 341.673 675.887 341.671 cvf654.466 343.003 mo654.249 343.003 654.033 343.003 653.818 343.003 cv654.033 343.003 654.249 343.003 654.466 343.003 cvf652.636 343.005 mo652.341 343.005 652.048 343.005 651.759 343.005 cv652.048 343.005 652.341 343.005 652.636 343.005 cvf653.564 343.003 mo653.332 343.003 653.101 343.003 652.873 343.003 cv653.101 343.003 653.332 343.003 653.564 343.003 cvf473.856 321.427 mo475.764 312.968 li473.583 322.638 li471.489 332.488 li473.324 323.853 li473.465 323.185 473.706 322.093 473.856 321.427 cvf496.701 285.728 mo483.21 285.728 li482.527 285.728 481.846 286.273 481.694 286.937 cv480.415 292.584 li479.135 298.232 li478.985 298.896 479.419 299.441 480.102 299.441 cv493.698 299.441 li494.379 299.441 495.057 298.896 495.204 298.23 cv496.44 292.584 li497.676 286.941 li497.676 286.939 497.676 286.939 497.676 286.939 cv497.822 286.273 497.383 285.728 496.701 285.728 cvf493.764 304.511 mo493.764 304.509 493.764 304.509 493.764 304.509 cv489.807 322.816 li493.764 304.511 lif454.569 365.166 mo454.569 365.166 461.37 365.253 465.693 365.253 cv462.409 365.253 456.985 365.193 454.563 365.164 cv454.565 365.164 454.567 365.166 454.569 365.166 cvf477.674 304.509 mo475.764 312.968 li477.674 304.509 lif492.786 303.298 mo479.188 303.298 li478.506 303.298 477.825 303.843 477.674 304.509 cv475.764 312.968 li473.856 321.427 li473.706 322.093 473.465 323.185 473.324 323.853 cv471.489 332.488 li469.655 341.123 li469.512 341.789 469.219 342.865 469 343.511 cv469 343.511 466.46 351.07 462.19 350.984 cv462.008 350.98 461.832 350.978 461.657 350.974 cv459.587 350.935 457.961 350.906 457.961 350.906 cv457.96 350.906 457.96 350.906 457.958 350.906 cv457.278 350.896 456.593 351.427 456.434 352.089 cv455.024 358.017 li453.616 363.943 li453.458 364.605 453.885 365.152 454.563 365.164 cv456.985 365.193 462.409 365.253 465.693 365.253 cv476.36 365.253 481.983 359.343 485.588 342.335 cv489.807 322.816 li493.764 304.509 li493.908 303.843 493.467 303.298 492.786 303.298 cvf685.949 342.314 mo685.267 342.314 684.825 341.767 684.968 341.099 cv695.197 293.187 lif700.166 341.097 mo704.302 320.648 li700.166 341.097 lif685.118 341.707 mo685.035 341.373 685.084 340.554 685.228 339.886 cv690.082 317.144 li684.968 341.099 li684.825 341.767 685.267 342.314 685.949 342.314 cv687.191 342.314 li686.508 342.314 685.2 342.041 685.118 341.707 cvf699.354 342.041 mo698.983 342.191 698.12 342.314 697.437 342.314 cv698.679 342.314 li699.361 342.314 700.031 341.767 700.166 341.097 cv700.412 339.882 li700.276 340.55 699.726 341.89 699.354 342.041 cvf702.233 330.873 mo704.059 321.847 li704.058 321.853 704.057 321.861 704.056 321.865 cv702.233 330.873 lif742.592 296.396 mo743.156 298.724 li743.311 299.39 742.88 299.931 742.2 299.933 cvf700.412 339.882 mo702.233 330.873 li700.412 339.882 lif742.035 294.011 mo742.035 294.011 li742.592 296.396 li742.035 294.011 lif704.059 321.847 mo704.195 321.179 704.419 320.097 704.561 319.435 cv706.511 310.298 li704.302 320.648 li704.059 321.847 lif695.362 292.402 mo695.226 293.046 695.052 293.861 694.937 294.4 cv690.082 317.144 li695.197 293.187 li695.362 292.402 lif743.156 298.724 mo742.592 296.396 li742.035 294.011 li741.752 292.804 li740.648 288.513 737.406 286.037 730.366 286.037 cv719.406 286.025 li709.312 286.013 li708.446 286.013 li697.955 286.013 li697.273 286.013 696.598 286.558 696.458 287.226 cv696.457 287.226 696.457 287.226 696.457 287.226 cv695.955 289.599 li695.362 292.402 li695.197 293.187 li690.082 317.144 li685.228 339.886 li685.084 340.554 685.035 341.373 685.118 341.707 cv685.2 342.041 686.508 342.314 687.191 342.314 cv697.437 342.314 li698.12 342.314 698.983 342.191 699.354 342.041 cv699.726 341.89 700.276 340.55 700.412 339.882 cv702.233 330.873 li704.056 321.865 li704.057 321.861 704.058 321.853 704.059 321.847 cv704.302 320.648 li706.511 310.298 li708.462 301.158 li708.607 300.494 709.279 299.951 709.96 299.949 cv742.2 299.933 li742.88 299.931 743.311 299.39 743.156 298.724 cvf784.655 277.673 mo783.972 277.678 782.856 277.682 782.173 277.682 cv771.854 277.682 li771.171 277.682 770.297 278.143 769.913 278.707 cv747.094 312.136 li746.708 312.701 746.269 312.617 746.118 311.953 cv744.439 304.587 li744.288 303.921 743.604 303.378 742.922 303.378 cv728.252 303.378 li727.57 303.378 727.166 303.914 727.352 304.57 cv733.925 327.597 li734.113 328.253 734.126 329.332 733.958 329.992 cv731.092 341.136 li730.922 341.798 731.342 342.339 732.025 342.339 cv746.523 342.339 li747.205 342.339 747.902 341.798 748.071 341.136 cv750.937 329.992 li751.106 329.332 751.581 328.343 751.992 327.798 cv789.037 278.631 li789.448 278.086 789.225 277.643 788.544 277.648 cv784.655 277.673 lif668.116 306.513 mo668.115 306.5 li668.029 307.24 667.346 307.783 666.665 307.783 cv648.066 307.783 li647.423 307.783 647.096 307.345 647.191 306.806 cv647.197 306.791 647.199 306.777 647.208 306.763 cv647.208 306.763 647.203 306.765 647.197 306.769 cv647.201 306.748 647.201 306.728 647.207 306.707 cv647.207 306.707 647.242 306.576 647.292 306.39 cv649.068 301.668 652.686 298.568 659.486 298.568 cv667.141 298.568 668.635 302.308 668.116 306.513 cvcp662.66 285.046 mo638.787 285.046 633.13 299.537 629.957 314.162 cv626.783 329.068 627.056 343.005 651.759 343.005 cv652.636 343.005 li652.714 343.003 652.794 343.003 652.873 343.003 cv653.101 343.003 653.332 343.003 653.564 343.003 cv653.648 343.003 653.732 343.003 653.818 343.003 cv654.033 343.003 654.249 343.003 654.466 343.003 cv654.562 343.001 654.658 343.001 654.755 343.001 cv655.002 343.001 655.25 343 655.5 343 cv655.558 343 655.615 343 655.674 343 cv656.652 342.998 657.644 342.994 658.638 342.99 cv658.688 342.99 li665.212 342.964 671.755 342.916 674.406 342.894 cv675.084 342.884 675.747 342.337 675.886 341.675 cv676.886 336.787 li677.081 335.835 li678.274 330.005 li678.411 329.337 677.964 328.791 677.282 328.791 cv655.073 328.791 li646.24 328.791 643.617 326.443 644.584 319.542 cv680.085 319.542 li680.082 319.546 li680.091 319.546 680.099 319.542 680.107 319.542 cv680.671 319.533 681.193 319.144 681.4 318.626 cv681.439 318.527 681.472 318.423 681.486 318.316 cv681.482 318.32 li686.753 298.437 685.242 285.046 662.66 285.046 cvf549.824 306.437 mo549.488 307.626 li549.488 307.63 549.487 307.63 549.487 307.63 cv546.806 317.13 li544.126 326.628 li543.941 327.285 543.232 327.822 542.548 327.822 cv528.36 327.822 li517.597 327.822 514.977 319.404 517.597 306.988 cv520.217 294.289 525.355 286.394 535.948 285.595 cv550.423 284.503 553.319 294.685 549.824 306.437 cvcp559.554 327.091 mo559.554 327.091 566.244 310.849 567.763 301.466 cv569.834 288.908 563.548 270.694 539.26 270.694 cv515.111 270.694 504.625 288.084 500.623 306.988 cv496.622 326.029 501.864 342.728 525.876 342.591 cv544.82 342.521 li562.525 342.457 li563.207 342.451 563.904 341.91 564.078 341.251 cv567.162 329.488 li567.334 328.828 566.916 328.285 566.235 328.281 cv563.279 328.263 li560.324 328.246 li559.744 328.242 559.412 327.867 559.482 327.369 cv559.495 327.279 559.515 327.187 559.554 327.091 cvf679.103 316.22 mo679.103 316.669 678.739 317.035 678.289 317.035 cv677.839 317.035 677.474 316.669 677.474 316.22 cv677.474 315.771 677.839 315.408 678.289 315.408 cv678.739 315.408 679.103 315.771 679.103 316.22 cvf375.153 295.101 mo368.485 304.685 369.315 317.154 374.409 327.337 cv374.53 327.582 374.657 327.822 374.782 328.062 cv374.862 328.214 374.937 328.371 375.02 328.521 cv375.067 328.611 375.12 328.699 375.168 328.785 cv375.255 328.947 375.344 329.101 375.434 329.259 cv375.592 329.539 375.754 329.816 375.92 330.093 cv376.012 330.246 376.103 330.398 376.198 330.55 cv376.381 330.847 376.57 331.14 376.762 331.433 cv376.842 331.558 376.92 331.683 377.002 331.804 cv377.268 332.201 377.54 332.595 377.82 332.984 cv377.827 332.994 377.834 333.005 377.843 333.015 cv377.887 333.078 377.936 333.138 377.981 333.201 cv378.223 333.535 378.473 333.865 378.726 334.191 cv378.819 334.31 378.913 334.429 379.006 334.548 cv379.232 334.832 379.461 335.113 379.695 335.394 cv379.782 335.5 379.87 335.605 379.958 335.708 cv380.271 336.078 380.59 336.445 380.916 336.804 cv380.922 336.81 380.93 336.818 380.936 336.824 cv380.95 336.839 380.961 336.849 380.973 336.865 cv381.292 337.212 381.618 337.552 381.948 337.892 cv382.05 337.998 382.155 338.103 382.26 338.207 cv382.516 338.464 382.776 338.718 383.039 338.97 cv383.145 339.072 383.25 339.175 383.357 339.273 cv383.708 339.603 384.062 339.927 384.423 340.244 cv384.429 340.25 384.434 340.253 384.44 340.257 cv384.501 340.312 384.565 340.363 384.626 340.416 cv384.944 340.691 385.268 340.964 385.594 341.234 cv385.727 341.341 385.862 341.447 385.996 341.554 cv386.262 341.767 386.532 341.978 386.803 342.185 cv386.947 342.294 387.09 342.404 387.235 342.513 cv387.535 342.734 387.836 342.951 388.141 343.164 cv388.252 343.244 388.36 343.322 388.471 343.398 cv388.502 343.419 388.531 343.441 388.562 343.462 cv388.851 343.662 389.147 343.853 389.442 344.044 cv389.569 344.128 389.695 344.216 389.823 344.298 cv390.276 344.585 390.736 344.869 391.201 345.142 cv391.327 345.214 391.455 345.285 391.582 345.357 cv391.923 345.554 392.267 345.748 392.616 345.937 cv392.804 346.039 392.998 346.134 393.188 346.232 cv393.434 346.361 393.678 346.492 393.928 346.617 cv393.985 346.644 394.043 346.671 394.099 346.699 cv394.2 346.748 394.301 346.794 394.402 346.845 cv394.79 347.031 395.18 347.212 395.575 347.388 cv395.659 347.425 395.74 347.462 395.823 347.5 cv396.275 347.697 396.731 347.886 397.191 348.068 cv397.301 348.113 397.413 348.156 397.524 348.199 cv397.95 348.363 398.381 348.525 398.815 348.677 cv398.87 348.697 398.922 348.714 398.977 348.734 cv399.453 348.9 399.933 349.054 400.416 349.205 cv400.532 349.238 400.648 349.275 400.764 349.308 cv401.256 349.457 401.743 349.634 402.25 349.728 cv434.499 355.609 443.866 330.349 443.866 330.349 cv435.999 340.599 422.034 343.302 408.802 340.292 cv408.301 340.179 407.815 340.023 407.326 339.878 cv407.202 339.841 407.08 339.804 406.958 339.767 cv406.48 339.621 406.006 339.466 405.536 339.304 cv405.471 339.281 405.406 339.257 405.34 339.234 cv404.918 339.085 404.501 338.929 404.086 338.769 cv403.969 338.722 403.852 338.677 403.735 338.63 cv403.28 338.451 402.828 338.263 402.381 338.068 cv402.29 338.029 402.202 337.988 402.111 337.949 cv401.727 337.775 401.347 337.599 400.969 337.418 cv400.86 337.365 400.75 337.314 400.639 337.259 cv400.344 337.115 400.051 336.96 399.758 336.81 cv399.562 336.707 399.363 336.609 399.168 336.501 cv398.811 336.31 398.46 336.111 398.11 335.908 cv397.992 335.841 397.872 335.777 397.752 335.708 cv397.288 335.435 396.829 335.152 396.375 334.865 cv396.249 334.785 396.126 334.699 396.002 334.617 cv395.672 334.404 395.344 334.187 395.021 333.964 cv394.915 333.892 394.811 333.814 394.706 333.742 cv394.393 333.521 394.084 333.298 393.778 333.072 cv393.639 332.968 393.502 332.865 393.367 332.761 cv393.086 332.546 392.807 332.33 392.53 332.107 cv392.405 332.007 392.28 331.908 392.157 331.808 cv391.805 331.519 391.458 331.228 391.115 330.929 cv391.079 330.898 391.04 330.867 391 330.834 cv390.629 330.507 390.265 330.173 389.905 329.837 cv389.8 329.738 389.699 329.64 389.596 329.541 cv389.33 329.287 389.067 329.031 388.809 328.769 cv388.706 328.666 388.602 328.564 388.5 328.46 cv388.172 328.125 387.85 327.785 387.535 327.439 cv387.519 327.421 387.502 327.406 387.487 327.388 cv387.153 327.023 386.827 326.65 386.507 326.273 cv386.42 326.169 386.336 326.07 386.25 325.968 cv386.012 325.681 385.776 325.39 385.545 325.097 cv385.46 324.99 385.374 324.882 385.288 324.773 cv385.01 324.414 384.739 324.054 384.473 323.689 cv377.127 313.669 374.489 299.849 380.36 288.5 cv0.937255 0.364706 0.0509804 0.00784314 cmykf395.852 287.027 mo391.03 293.966 391.292 303.255 395.053 310.595 cv395.684 311.826 396.393 313.019 397.186 314.156 cv397.909 315.191 398.71 316.423 399.668 317.255 cv400.016 317.638 400.379 318.011 400.75 318.378 cv400.844 318.474 400.94 318.566 401.036 318.66 cv401.396 319.009 401.762 319.353 402.141 319.687 cv402.157 319.699 402.17 319.714 402.186 319.726 cv402.19 319.73 402.194 319.732 402.197 319.736 cv402.616 320.103 403.048 320.457 403.488 320.804 cv403.585 320.878 403.682 320.957 403.781 321.033 cv404.221 321.371 404.67 321.703 405.131 322.019 cv405.145 322.029 405.157 322.039 405.17 322.048 cv405.374 322.189 405.581 322.32 405.787 322.455 cv405.885 322.519 405.979 322.587 406.079 322.648 cv406.408 322.859 406.741 323.064 407.08 323.261 cv407.127 323.291 407.174 323.316 407.221 323.343 cv407.513 323.511 407.809 323.677 408.106 323.837 cv408.21 323.896 408.315 323.947 408.42 324.001 cv408.626 324.109 408.831 324.218 409.04 324.322 cv409.071 324.337 409.103 324.351 409.133 324.365 cv409.558 324.574 409.987 324.775 410.424 324.966 cv410.518 325.007 410.615 325.044 410.71 325.084 cv411.059 325.232 411.413 325.376 411.768 325.513 cv411.918 325.57 412.071 325.625 412.221 325.679 cv412.543 325.798 412.867 325.908 413.193 326.017 cv413.34 326.064 413.485 326.113 413.632 326.158 cv414.096 326.302 414.554 326.484 415.038 326.564 cv439.936 330.689 445.684 311.519 445.684 311.519 cv440.502 318.982 430.468 322.542 419.76 319.763 cv419.285 319.638 418.816 319.501 418.35 319.355 cv418.208 319.312 418.068 319.265 417.926 319.218 cv417.595 319.111 417.266 318.998 416.94 318.878 cv416.791 318.824 416.641 318.769 416.495 318.712 cv416.137 318.576 415.784 318.433 415.433 318.285 cv415.337 318.244 415.241 318.207 415.147 318.164 cv414.708 317.972 414.275 317.771 413.848 317.56 cv413.628 317.453 413.413 317.339 413.197 317.228 cv413.072 317.164 412.946 317.099 412.821 317.035 cv412.543 316.884 412.268 316.728 411.997 316.57 cv411.932 316.533 411.865 316.498 411.799 316.458 cv411.462 316.261 411.13 316.058 410.801 315.849 cv410.7 315.785 410.602 315.714 410.5 315.648 cv410.284 315.507 410.067 315.365 409.854 315.22 cv409.395 314.904 408.949 314.572 408.508 314.236 cv408.407 314.156 408.305 314.078 408.206 313.998 cv403.514 310.298 399.799 305.242 398.033 299.507 cv396.181 293.56 396.581 286.884 399.788 281.466 cvf413.26 280.994 mo410.418 285.177 410.138 290.373 412.111 294.994 cv414.191 299.898 418.454 303.746 423.428 305.57 cv423.633 305.646 423.838 305.714 424.046 305.785 cv424.137 305.812 424.227 305.843 424.319 305.871 cv424.612 305.962 424.903 306.07 425.206 306.126 cv438.954 308.783 442.682 299.072 443.675 297.642 cv440.409 302.345 434.919 303.474 428.184 301.839 cv427.653 301.71 427.068 301.519 426.555 301.337 cv425.897 301.103 425.25 300.835 424.62 300.533 cv423.423 299.958 422.284 299.261 421.227 298.462 cv415.2 293.89 411.456 285.166 415.388 278.061 cvf568.097 362.476 mo564.134 371.501 li559.759 371.501 li560.118 363.3 li556.897 371.501 li552.661 371.501 li552.549 362.476 li553.017 360.248 li556.017 360.248 li555.439 369.162 li558.769 360.248 li562.952 360.248 li562.649 369.273 li565.952 360.248 li568.565 360.248 li568.097 362.476 lif575.004 365.146 mo575.39 363.384 575.28 363.054 574.372 363.054 cv572.996 363.054 li572.115 367.183 li570.766 371.501 li568.208 371.501 li570.298 361.707 li570.602 360.275 li572.941 360.275 li573.244 360.935 li573.244 360.935 574.592 360.138 575.912 360.138 cv578.719 360.138 578.5 362.255 577.893 365.146 cv575.004 365.146 lif583.314 358.843 mo582.187 358.843 581.471 358.513 581.746 357.138 cv582.048 355.761 582.929 355.431 584.029 355.431 cv585.131 355.431 585.874 355.761 585.571 357.138 cv585.295 358.486 584.416 358.843 583.314 358.843 cvcp582.104 371.501 mo579.571 371.501 li580.067 367.099 li580.948 363.027 li579.187 362.64 li579.682 360.248 li584.497 360.248 li582.104 371.501 lif593.084 362.64 mo589.919 363.027 li589.01 367.32 li588.762 368.503 588.762 368.834 589.809 368.834 cv590.386 368.834 591.927 368.834 591.927 368.834 cv591.487 371.089 li591.487 371.089 589.562 371.668 588.735 371.668 cv585.488 371.668 585.515 369.878 586.094 367.208 cv586.975 363 li585.213 362.615 li585.736 360.22 li587.581 360.22 li588.626 357.384 li591.13 357.384 li590.524 360.22 li593.606 360.22 li593.084 362.64 lif599.66 362.779 mo598.174 362.779 597.403 363.55 597.101 364.925 cv601.338 364.568 li601.531 363.632 601.338 362.779 599.66 362.779 cvcp596.689 366.96 mo596.495 368.337 597.018 368.804 598.779 368.804 cv603.208 368.804 li602.769 370.896 li602.769 370.896 600.1 371.638 598.119 371.638 cv593.193 371.638 593.137 368.861 593.771 365.888 cv594.404 362.97 595.532 360.084 600.292 360.084 cv604.888 360.084 605.109 362.861 603.98 366.96 cv596.689 366.96 lif614.078 371.501 mo611.547 371.501 li612.042 367.099 li613.832 358.734 li612.069 358.322 li612.592 355.927 li617.409 355.927 li614.078 371.501 lif623.215 362.779 mo621.728 362.779 620.958 363.55 620.655 364.925 cv624.893 364.568 li625.084 363.632 624.893 362.779 623.215 362.779 cvcp620.243 366.96 mo620.05 368.337 620.574 368.804 622.334 368.804 cv626.764 368.804 li626.324 370.896 li626.324 370.896 623.654 371.638 621.672 371.638 cv616.747 371.638 616.693 368.861 617.326 365.888 cv617.96 362.97 619.087 360.084 623.847 360.084 cv628.443 360.084 628.663 362.861 627.536 366.96 cv620.243 366.96 lif639.147 362.918 mo639.147 362.918 635.927 362.945 635.047 362.945 cv633.175 362.945 632.983 363.521 632.846 364.126 cv632.735 364.677 li638.679 365.119 li638.679 365.119 638.707 367.017 638.458 368.089 cv638.101 369.878 636.257 371.693 632.928 371.693 cv631.276 371.693 628.607 371.062 628.607 371.062 cv629.075 368.888 li629.075 368.888 632.295 368.888 633.175 368.888 cv634.992 368.888 635.24 368.392 635.351 367.898 cv635.488 367.183 li629.654 366.742 li629.654 366.742 629.434 365.283 629.736 363.826 cv630.177 361.843 631.992 360.138 635.322 360.138 cv636.973 360.138 639.642 360.742 639.642 360.742 cv639.147 362.918 lif650.208 362.918 mo650.208 362.918 646.99 362.945 646.109 362.945 cv644.238 362.945 644.045 363.521 643.908 364.126 cv643.796 364.677 li649.742 365.119 li649.742 365.119 649.769 367.017 649.521 368.089 cv649.164 369.878 647.32 371.693 643.99 371.693 cv642.339 371.693 639.669 371.062 639.669 371.062 cv640.137 368.888 li640.137 368.888 643.357 368.888 644.238 368.888 cv646.053 368.888 646.301 368.392 646.413 367.898 cv646.549 367.183 li640.715 366.742 li640.715 366.742 640.496 365.283 640.797 363.826 cv641.239 361.843 643.053 360.138 646.384 360.138 cv648.035 360.138 650.704 360.742 650.704 360.742 cv650.208 362.918 lif653.676 373.291 mo651.476 373.291 li651.558 371.638 li650.759 371.585 650.347 371.007 650.54 370.042 cv650.842 368.668 651.696 368.337 652.824 368.337 cv653.924 368.337 654.666 368.668 654.365 370.042 cv653.676 373.291 lif668.397 363.027 mo666.747 363.027 666.169 364.017 665.784 365.834 cv665.398 367.65 665.508 368.722 667.159 368.722 cv669.443 368.722 li670.71 363.027 li668.397 363.027 licp672.168 370.042 mo671.864 371.501 li669.554 371.474 li669.223 370.759 li669.223 370.759 667.186 371.638 665.812 371.638 cv662.289 371.638 662.124 368.75 662.756 365.834 cv663.389 362.861 664.765 360.054 668.26 360.054 cv669.527 360.054 671.232 360.687 671.232 360.687 cv672.635 355.927 li675.168 355.927 li672.168 370.042 lif681.276 362.918 mo679.13 362.918 678.441 364.126 678.056 365.888 cv677.699 367.677 677.865 368.888 679.982 368.888 cv682.184 368.888 682.845 367.705 683.229 365.888 cv683.616 364.181 683.504 362.918 681.276 362.918 cvcp679.406 371.668 mo674.865 371.668 674.506 368.834 675.112 365.888 cv675.746 362.945 677.341 360.138 681.882 360.138 cv686.394 360.138 686.808 362.945 686.173 365.888 cv685.542 368.888 683.945 371.668 679.406 371.668 cvf705.161 371.501 mo705.657 367.154 li705.904 365.916 li706.262 364.265 706.482 363.054 704.748 363.054 cv703.4 363.054 li703.456 363.908 703.29 364.871 703.07 365.888 cv701.887 371.501 li699.328 371.501 li699.823 367.154 li700.07 365.916 li700.428 364.265 700.647 363.054 698.916 363.054 cv697.814 363.054 li695.998 371.501 li693.052 371.501 li695.447 360.248 li697.758 360.248 li698.116 360.935 li698.116 360.935 699.685 360.109 700.951 360.109 cv701.914 360.109 702.629 360.55 702.877 361.099 cv703.427 360.796 704.997 360.109 706.126 360.109 cv709.645 360.109 709.537 362.97 708.903 365.888 cv707.72 371.501 li705.161 371.501 lif716.856 362.918 mo714.708 362.918 714.021 364.126 713.636 365.888 cv713.279 367.677 713.445 368.888 715.562 368.888 cv717.763 368.888 718.425 367.705 718.81 365.888 cv719.195 364.181 719.084 362.918 716.856 362.918 cvcp714.985 371.668 mo710.443 371.668 710.086 368.834 710.692 365.888 cv711.325 362.945 712.92 360.138 717.461 360.138 cv721.975 360.138 722.387 362.945 721.753 365.888 cv721.122 368.888 719.525 371.668 714.985 371.668 cvf729.404 365.146 mo729.789 363.384 729.679 363.054 728.772 363.054 cv727.395 363.054 li726.514 367.183 li725.166 371.501 li722.607 371.501 li724.698 361.707 li725.002 360.275 li727.34 360.275 li727.642 360.935 li727.642 360.935 728.991 360.138 730.313 360.138 cv733.119 360.138 732.898 362.255 732.292 365.146 cv729.404 365.146 lif739.255 362.779 mo737.771 362.779 737 363.55 736.698 364.925 cv740.933 364.568 li741.127 363.632 740.933 362.779 739.255 362.779 cvcp736.284 366.96 mo736.092 368.337 736.614 368.804 738.374 368.804 cv742.805 368.804 li742.366 370.896 li742.366 370.896 739.696 371.638 737.715 371.638 cv732.79 371.638 732.735 368.861 733.366 365.888 cv734 362.97 735.128 360.084 739.888 360.084 cv744.483 360.084 744.705 362.861 743.576 366.96 cv736.284 366.96 lif746.052 371.668 mo744.896 371.668 744.182 371.337 744.485 369.99 cv744.758 368.611 745.612 368.283 746.769 368.283 cv747.841 368.283 748.584 368.611 748.31 369.99 cv748.005 371.31 747.126 371.668 746.052 371.668 cvf29.9981 326.817 mo0 326.817 li0 296.819 li29.9981 296.819 li29.9981 326.817 lif68.2217 326.817 mo38.2232 326.817 li38.2232 296.819 li68.2217 296.819 li68.2217 326.817 li0.847059 0.619608 0.458824 0.568628 cmykf2039.13 305.863 mo2039.13 305.863 2039.13 305.863 2039.13 305.859 cv2036.45 315.363 li2039.13 305.863 li0.666667 0.525491 0.537255 0.611765 cmykf2052.92 326.496 mo2049.96 326.478 li2052.92 326.496 lif2052.16 340.689 mo2052.16 340.689 li2034.46 340.753 li2052.16 340.689 lif2055.87 326.513 mo2052.92 326.496 li2055.87 326.513 lif2053.72 339.482 mo2056.8 327.72 li2053.72 339.484 li2053.72 339.482 lif2118.9 285.318 mo2113.15 312.326 li2118.9 285.318 lif2104.13 285.318 mo2099.77 305.495 li2104.13 285.316 li2104.13 285.318 lif2117.92 284.103 mo2105.63 284.103 li2104.95 284.103 2104.27 284.65 2104.13 285.316 cv2099.77 305.495 li2095.4 325.671 li2095.26 326.337 2094.58 326.882 2093.9 326.882 cv2086.45 326.882 li2085.21 326.882 li2076.6 326.882 2077.6 320.933 2079.36 312.782 cv2079.38 312.7 2079.4 312.62 2079.41 312.536 cv2079.61 311.507 li2079.62 311.441 2079.63 311.375 2079.64 311.314 cv2080.04 309.222 li2080.46 306.98 li2080.58 306.304 2080.78 305.316 2080.91 304.695 cv2082.89 295.007 li2084.87 285.32 li2085.01 284.652 2084.56 284.103 2083.88 284.103 cv2071.27 284.103 li2070.59 284.103 2069.92 284.652 2069.78 285.318 cv2067.06 298.181 li2064.35 311.042 li2064.35 311.048 2064.35 311.056 2064.35 311.062 cv2064.1 312.257 li2060.97 326.515 2061.8 340.111 2078.78 340.537 cv2079.05 340.544 2079.27 340.546 2079.27 340.546 cv2105.91 340.546 li2106.59 340.546 2107.27 340 2107.41 339.332 cv2113.15 312.327 li2118.9 285.318 li2119.04 284.65 2118.6 284.103 2117.92 284.103 cvf2166.92 327.023 mo2167.6 327.023 2168.05 327.57 2167.91 328.238 cv2166.72 334.068 lif2165.53 339.902 mo2166.72 334.068 li2165.53 339.904 li2165.53 339.902 2165.53 339.902 2165.53 339.902 cvf2164.04 341.128 mo2164.04 341.126 li2160.43 341.156 2149.56 341.238 2141.4 341.238 cv2151.34 341.238 2164.04 341.128 2164.04 341.128 cvf2134.06 319.513 mo2134.05 318.875 2134.78 317.776 2135.46 317.776 cv2133.93 317.75 li2133.24 324.703 2134.06 319.513 2134.06 319.513 cvf2142.51 341.236 mo2142.43 341.236 2142.35 341.236 2142.28 341.238 cv2142.35 341.236 2142.43 341.236 2142.51 341.236 cvf2166.92 327.023 mo2167.6 327.023 2168.05 327.57 2167.91 328.238 cv2166.72 334.068 li2166.53 335.019 lif2148.33 341.222 mo2148.28 341.222 li2148.33 341.222 lif2145.31 341.232 mo2145.14 341.232 li2145.31 341.232 lif2144.39 341.234 mo2144.3 341.234 2144.2 341.234 2144.11 341.236 cv2144.2 341.234 2144.3 341.234 2144.39 341.234 cvf2143.46 341.236 mo2143.2 341.236 li2143.46 341.236 lif2145.14 341.232 mo2144.89 341.232 2144.64 341.234 2144.39 341.234 cv2144.64 341.234 2144.89 341.232 2145.14 341.232 cvf2148.28 341.222 mo2147.28 341.226 2146.29 341.23 2145.31 341.232 cv2146.29 341.23 2147.29 341.226 2148.28 341.222 cvf2164.04 341.126 mo2164.04 341.126 li2161.39 341.148 2154.85 341.197 2148.33 341.222 cv2154.85 341.199 2161.39 341.148 2164.04 341.126 cvf2165.53 339.904 mo2166.53 335.019 li2165.53 339.908 li2165.53 339.906 2165.53 339.906 2165.53 339.904 cvf2144.11 341.236 mo2143.46 341.236 li2144.11 341.236 lif2142.28 341.238 mo2141.4 341.238 li2142.28 341.238 lif2143.2 341.236 mo2142.51 341.236 li2143.2 341.236 lif1963.49 319.66 mo1965.4 311.201 li1963.22 320.871 li1961.13 330.72 li1962.96 322.085 li1963.1 321.418 1963.34 320.326 1963.49 319.66 cvf1986.34 283.96 mo1972.85 283.96 li1972.17 283.96 1971.48 284.505 1971.33 285.169 cv1970.05 290.816 li1968.78 296.464 li1968.62 297.128 1969.06 297.673 1969.74 297.673 cv1983.34 297.673 li1984.02 297.673 1984.7 297.128 1984.84 296.462 cv1986.08 290.816 li1987.32 285.173 li1987.32 285.171 li1987.46 284.505 1987.02 283.96 1986.34 283.96 cvf1983.4 302.744 mo1983.4 302.742 li1979.45 321.049 li1983.4 302.744 lif1944.21 363.398 mo1944.21 363.398 1951.01 363.486 1955.33 363.486 cv1952.05 363.486 1946.62 363.425 1944.2 363.396 cv1944.21 363.396 1944.21 363.398 1944.21 363.398 cvf1967.31 302.742 mo1965.4 311.201 li1967.31 302.742 lif1982.42 301.531 mo1968.83 301.531 li1968.15 301.531 1967.46 302.076 1967.31 302.742 cv1965.4 311.201 li1963.49 319.66 li1963.34 320.326 1963.11 321.418 1962.96 322.085 cv1961.13 330.72 li1959.29 339.355 li1959.15 340.021 1958.86 341.097 1958.64 341.744 cv1958.64 341.744 1956.1 349.302 1951.83 349.216 cv1951.65 349.212 1951.47 349.21 1951.3 349.207 cv1949.23 349.168 1947.6 349.138 1947.6 349.138 cv1947.6 349.138 li1946.92 349.128 1946.23 349.66 1946.07 350.323 cv1944.66 356.25 li1943.26 362.175 li1943.1 362.837 1943.52 363.384 1944.2 363.396 cv1946.62 363.425 1952.05 363.486 1955.33 363.486 cv1966 363.486 1971.62 357.576 1975.23 340.568 cv1979.45 321.049 li1983.4 302.742 li1983.55 302.076 1983.11 301.531 1982.42 301.531 cvf2175.59 340.546 mo2174.91 340.546 2174.46 340 2174.61 339.332 cv2184.84 291.42 lif2189.8 339.33 mo2193.94 318.88 li2189.8 339.33 lif2174.76 339.939 mo2174.67 339.605 2174.72 338.787 2174.87 338.119 cv2179.72 315.376 li2174.61 339.332 li2174.46 340 2174.91 340.546 2175.59 340.546 cv2176.83 340.546 li2176.15 340.546 2174.84 340.273 2174.76 339.939 cvf2188.99 340.273 mo2188.62 340.423 2187.76 340.546 2187.08 340.546 cv2188.32 340.546 li2189 340.546 2189.67 340 2189.81 339.33 cv2190.05 338.115 li2189.92 338.783 2189.37 340.123 2188.99 340.273 cvf2191.87 329.105 mo2193.7 320.08 li2193.7 320.085 2193.7 320.094 2193.7 320.098 cv2191.87 329.105 lif2232.23 294.628 mo2232.8 296.957 li2232.95 297.623 2232.52 298.164 2231.84 298.166 cvf2190.05 338.115 mo2191.87 329.105 li2190.05 338.115 lif2231.67 292.244 mo2231.67 292.244 li2232.23 294.629 li2231.67 292.244 lif2193.7 320.08 mo2193.83 319.412 2194.06 318.33 2194.2 317.668 cv2196.15 308.531 li2193.94 318.88 li2193.7 320.08 lif2185 290.634 mo2184.87 291.28 2184.69 292.093 2184.58 292.632 cv2179.72 315.376 li2184.84 291.419 li2185 290.634 lif2232.8 296.957 mo2232.23 294.628 li2231.67 292.244 li2231.39 291.037 li2230.29 286.746 2227.04 284.269 2220.01 284.269 cv2209.04 284.258 li2198.95 284.246 li2198.09 284.246 li2187.59 284.246 li2186.91 284.246 2186.24 284.791 2186.1 285.458 cv2186.1 285.458 li2185.59 287.832 li2185 290.635 li2184.84 291.419 li2179.72 315.376 li2174.87 338.119 li2174.72 338.787 2174.67 339.605 2174.76 339.939 cv2174.84 340.273 2176.15 340.546 2176.83 340.546 cv2187.08 340.546 li2187.76 340.546 2188.62 340.423 2188.99 340.273 cv2189.37 340.124 2189.92 338.783 2190.05 338.115 cv2191.87 329.105 li2193.7 320.098 li2193.7 320.094 2193.7 320.085 2193.7 320.08 cv2193.94 318.881 li2196.15 308.531 li2198.1 299.391 li2198.25 298.727 2198.92 298.184 2199.6 298.182 cv2231.84 298.166 li2232.52 298.164 2232.95 297.623 2232.8 296.957 cvf2274.3 275.906 mo2273.61 275.911 2272.5 275.915 2271.81 275.915 cv2261.49 275.915 li2260.81 275.915 2259.94 276.376 2259.55 276.939 cv2236.73 310.369 li2236.35 310.933 2235.91 310.849 2235.76 310.186 cv2234.08 302.821 li2233.93 302.155 2233.24 301.612 2232.56 301.612 cv2217.89 301.612 li2217.21 301.612 2216.8 302.147 2216.99 302.802 cv2223.56 325.83 li2223.75 326.486 2223.77 327.564 2223.6 328.224 cv2220.73 339.369 li2220.56 340.031 2220.98 340.572 2221.66 340.572 cv2236.16 340.572 li2236.84 340.572 2237.54 340.031 2237.71 339.369 cv2240.58 328.224 li2240.75 327.564 2241.22 326.576 2241.63 326.031 cv2278.68 276.864 li2279.09 276.319 2278.87 275.876 2278.18 275.88 cv2274.3 275.906 lif2157.76 304.746 mo2157.75 304.732 li2157.67 305.473 2156.99 306.016 2156.3 306.016 cv2137.71 306.016 li2137.06 306.016 2136.74 305.578 2136.83 305.039 cv2136.84 305.023 2136.84 305.01 2136.85 304.996 cv2136.85 304.996 2136.84 304.998 2136.84 305.001 cv2136.84 304.98 2136.84 304.96 2136.85 304.939 cv2136.85 304.939 2136.88 304.809 2136.93 304.623 cv2138.71 299.9 2142.33 296.801 2149.13 296.801 cv2156.78 296.801 2158.28 300.541 2157.76 304.746 cv2152.3 283.279 mo2128.43 283.279 2122.77 297.769 2119.6 312.394 cv2116.42 327.3 2116.7 341.238 2141.4 341.238 cv2142.28 341.238 li2142.35 341.236 2142.43 341.236 2142.51 341.236 cv2143.2 341.236 li2143.46 341.236 li2144.11 341.236 li2144.2 341.234 2144.3 341.234 2144.39 341.234 cv2144.64 341.234 2144.89 341.232 2145.14 341.232 cv2145.31 341.232 li2146.29 341.23 2147.28 341.226 2148.28 341.222 cv2148.33 341.222 li2154.85 341.197 2161.39 341.148 2164.04 341.126 cv2164.72 341.117 2165.39 340.57 2165.53 339.908 cv2166.53 335.019 li2166.72 334.068 li2167.91 328.238 li2168.05 327.57 2167.6 327.023 2166.92 327.023 cv2144.71 327.023 li2135.88 327.023 2133.26 324.675 2134.22 317.775 cv2169.72 317.775 li2169.72 317.779 li2169.73 317.779 2169.74 317.775 2169.75 317.775 cv2170.31 317.766 2170.83 317.376 2171.04 316.859 cv2171.08 316.76 2171.11 316.656 2171.13 316.549 cv2171.12 316.553 li2176.39 296.669 2174.88 283.279 2152.3 283.279 cvf2039.46 304.669 mo2039.13 305.859 li2039.13 305.863 2039.13 305.863 2039.13 305.863 cv2036.45 315.363 li2033.77 324.861 li2033.58 325.517 2032.87 326.054 2032.19 326.054 cv2018 326.054 li2007.24 326.054 2004.62 317.636 2007.24 305.22 cv2009.86 292.522 2014.99 284.626 2025.59 283.828 cv2040.06 282.736 2042.96 292.918 2039.46 304.669 cv2049.19 325.324 mo2049.19 325.324 2055.88 309.082 2057.4 299.699 cv2059.47 287.141 2053.19 268.925 2028.9 268.925 cv2004.75 268.925 1994.26 286.316 1990.26 305.22 cv1986.26 324.261 1991.5 340.96 2015.52 340.824 cv2034.46 340.752 li2052.16 340.689 li2052.85 340.683 2053.54 340.142 2053.72 339.484 cv2056.8 327.72 li2056.97 327.06 2056.56 326.517 2055.87 326.513 cv2052.92 326.496 li2049.96 326.478 li2049.38 326.474 2049.05 326.099 2049.12 325.601 cv2049.13 325.511 2049.15 325.419 2049.19 325.324 cvf2168.74 314.453 mo2168.74 314.902 2168.38 315.267 2167.93 315.267 cv2167.48 315.267 2167.11 314.902 2167.11 314.453 cv2167.11 314.003 2167.48 313.64 2167.93 313.64 cv2168.38 313.64 2168.74 314.003 2168.74 314.453 cvf1831.32 290.345 mo1831.32 319.781 li1831.32 341.456 1849.09 359.026 1871.03 359.026 cv1880.95 359.026 li1902.88 359.026 1920.66 341.456 1920.66 319.781 cv1920.66 290.345 li1920.66 284.925 1916.22 280.533 1910.73 280.533 cv1841.24 280.533 li1835.76 280.533 1831.32 284.925 1831.32 290.345 cv0.0196079 0.345099 0.862746 0 cmykef1846.21 314.875 mo1846.21 331.13 1859.54 344.31 1875.99 344.31 cv1892.44 344.31 1905.77 331.13 1905.77 314.875 cv1890.88 314.875 li1890.88 323.001 1884.21 329.592 1875.99 329.592 cv1867.77 329.592 1861.1 323.001 1861.1 314.875 cv1861.1 300.156 li1846.21 300.156 li1846.21 314.875 li0 0 0 0 cmykef1894.6 292.062 mo1891.13 306.29 li1905.52 309.967 li1909.25 295.741 li1894.6 292.062 lief2102.32 370.606 mo2099.97 370.606 li2099.63 369.934 li2099.63 369.934 2097.73 370.746 2096.44 370.746 cv2092.83 370.746 2092.94 367.806 2093.58 364.866 cv2094.79 359.154 li2097.48 359.154 li2096.95 363.578 li2096.69 364.922 li2096.33 366.602 2096.11 367.834 2097.87 367.834 cv2099.89 367.834 li2101.76 359.154 li2104.76 359.154 li2102.32 370.606 li0.0196079 0.345099 0.862746 0 cmykf2115.54 361.87 mo2115.54 361.87 2112.26 361.898 2111.37 361.898 cv2109.46 361.898 2109.26 362.486 2109.13 363.102 cv2109.01 363.662 li2115.06 364.11 li2115.06 364.11 2115.09 366.042 2114.84 367.134 cv2114.47 368.954 2112.6 370.802 2109.21 370.802 cv2107.53 370.802 2104.81 370.158 2104.81 370.158 cv2105.29 367.946 li2105.29 367.946 2108.56 367.946 2109.46 367.946 cv2111.31 367.946 2111.56 367.442 2111.67 366.938 cv2111.81 366.21 li2105.88 365.762 li2105.88 365.762 2105.65 364.278 2105.96 362.794 cv2106.41 360.778 2108.26 359.042 2111.64 359.042 cv2113.33 359.042 2116.04 359.658 2116.04 359.658 cv2115.54 361.87 lif2122.87 361.73 mo2121.36 361.73 2120.58 362.514 2120.27 363.914 cv2124.58 363.55 li2124.78 362.598 2124.58 361.73 2122.87 361.73 cvcp2119.85 365.986 mo2119.65 367.386 2120.19 367.862 2121.98 367.862 cv2126.48 367.862 li2126.04 369.99 li2126.04 369.99 2123.32 370.746 2121.3 370.746 cv2116.29 370.746 2116.24 367.918 2116.88 364.894 cv2117.52 361.926 2118.67 358.986 2123.52 358.986 cv2128.19 358.986 2128.42 361.814 2127.27 365.986 cv2119.85 365.986 lif2135.28 364.138 mo2135.67 362.346 2135.56 362.01 2134.63 362.01 cv2133.23 362.01 li2132.34 366.21 li2130.96 370.606 li2128.36 370.606 li2130.49 360.638 li2130.8 359.182 li2133.18 359.182 li2133.48 359.854 li2133.48 359.854 2134.86 359.042 2136.2 359.042 cv2139.06 359.042 2138.83 361.198 2138.22 364.138 cv2135.28 364.138 lif2149.84 357.726 mo2148.69 357.726 2147.96 357.39 2148.24 355.99 cv2148.55 354.59 2149.45 354.254 2150.56 354.254 cv2151.69 354.254 2152.44 354.59 2152.13 355.99 cv2151.85 357.362 2150.96 357.726 2149.84 357.726 cvcp2148.61 370.606 mo2146.03 370.606 li2146.53 366.126 li2147.43 361.982 li2145.64 361.59 li2146.14 359.154 li2151.04 359.154 li2148.61 370.606 lif2160.95 370.606 mo2158.26 370.606 li2158.77 366.182 li2159.05 364.922 li2159.41 363.242 2159.61 362.01 2157.84 362.01 cv2155.83 362.01 li2153.98 370.606 li2150.98 370.606 li2153.42 359.154 li2155.77 359.154 li2156.14 359.826 li2156.14 359.826 2158.01 359.014 2159.3 359.014 cv2162.88 359.014 2162.8 361.926 2162.16 364.894 cv2160.95 370.606 lif2171.81 361.59 mo2168.59 361.982 li2167.67 366.35 li2167.42 367.554 2167.42 367.89 2168.48 367.89 cv2169.07 367.89 2170.64 367.89 2170.64 367.89 cv2170.19 370.186 li2170.19 370.186 2168.23 370.774 2167.39 370.774 cv2164.09 370.774 2164.11 368.954 2164.7 366.238 cv2165.6 361.954 li2163.8 361.562 li2164.34 359.126 li2166.21 359.126 li2167.28 356.242 li2169.83 356.242 li2169.21 359.126 li2172.35 359.126 li2171.81 361.59 lif2178.51 361.73 mo2176.99 361.73 2176.21 362.514 2175.9 363.914 cv2180.21 363.55 li2180.41 362.598 2180.21 361.73 2178.51 361.73 cvcp2175.48 365.986 mo2175.29 367.386 2175.82 367.862 2177.61 367.862 cv2182.12 367.862 li2181.67 369.99 li2181.67 369.99 2178.95 370.746 2176.94 370.746 cv2171.93 370.746 2171.87 367.918 2172.51 364.894 cv2173.16 361.926 2174.3 358.986 2179.15 358.986 cv2183.83 358.986 2184.05 361.814 2182.9 365.986 cv2175.48 365.986 lif2190.91 364.138 mo2191.3 362.346 2191.19 362.01 2190.26 362.01 cv2188.87 362.01 li2187.97 366.21 li2186.6 370.606 li2183.99 370.606 li2186.12 360.638 li2186.43 359.182 li2188.81 359.182 li2189.12 359.854 li2189.12 359.854 2190.49 359.042 2191.83 359.042 cv2194.69 359.042 2194.46 361.198 2193.85 364.138 cv2190.91 364.138 lif2204.29 357.418 mo2204.29 357.418 2202.72 357.418 2202.14 357.418 cv2200.99 357.418 2200.9 358.146 2200.68 359.182 cv2203.59 359.182 li2203.09 361.618 li2200.01 362.038 li2198.16 370.662 li2196.76 375.114 li2194.21 375.114 li2195.17 370.634 li2197.01 362.01 li2195.22 361.618 li2195.72 359.182 li2197.6 359.182 li2198.19 356.522 2199.09 354.394 2202.3 354.394 cv2203.14 354.394 2204.8 355.094 2204.8 355.094 cv2204.29 357.418 lif2209.36 361.954 mo2207.68 361.954 2207.09 363.046 2206.7 364.894 cv2206.31 366.77 2206.45 367.778 2208.13 367.778 cv2210.48 367.778 li2211.69 361.954 li2209.36 361.954 licp2214.4 363.578 mo2212.92 370.606 li2210.59 370.606 li2210.23 369.822 li2210.23 369.822 2208.21 370.746 2206.73 370.746 cv2203.17 370.746 2202.98 367.918 2203.62 364.894 cv2204.24 361.926 2205.66 358.986 2209.25 358.986 cv2211.57 358.986 2215.24 359.63 2215.24 359.63 cv2214.4 363.578 lif2225.85 361.926 mo2222.41 361.926 li2220.67 361.926 2219.64 363.158 2219.24 364.922 cv2218.88 366.658 2219.44 367.862 2221.23 367.862 cv2224.82 367.862 li2224.34 370.102 li2224.34 370.102 2221.82 370.774 2219.89 370.774 cv2216.33 370.774 2215.52 367.918 2216.16 364.922 cv2216.81 361.898 2218.82 358.986 2222.3 358.986 cv2224 358.986 2226.38 359.602 2226.38 359.602 cv2225.85 361.926 lif2232.7 361.73 mo2231.19 361.73 2230.41 362.514 2230.1 363.914 cv2234.41 363.55 li2234.61 362.598 2234.41 361.73 2232.7 361.73 cvcp2229.68 365.986 mo2229.48 367.386 2230.02 367.862 2231.81 367.862 cv2236.32 367.862 li2235.87 369.99 li2235.87 369.99 2233.15 370.746 2231.13 370.746 cv2226.12 370.746 2226.07 367.918 2226.71 364.894 cv2227.36 361.926 2228.5 358.986 2233.35 358.986 cv2238.02 358.986 2238.25 361.814 2237.1 365.986 cv2229.68 365.986 lif1494.15 332.621 mo1464.15 332.621 li1464.15 302.623 li1494.15 302.623 li1494.15 332.621 lif1532.37 332.621 mo1502.38 332.621 li1502.38 302.623 li1532.37 302.623 li1532.37 332.621 li0.666667 0.525491 0.537255 0.611765 cmykf2039.13 36.9376 mo2039.13 36.9376 2039.13 36.9376 2039.13 36.9336 cv2036.45 46.4376 li2039.13 36.9376 lif2052.92 57.5704 mo2049.96 57.5528 li2052.92 57.5704 lif2052.16 71.7637 mo2052.16 71.7637 li2034.46 71.8282 li2052.16 71.7637 lif2055.87 57.5879 mo2052.92 57.5704 li2055.87 57.5879 lif2053.72 70.5567 mo2056.8 58.795 li2053.72 70.5586 li2053.72 70.5567 lif2118.9 16.3926 mo2113.15 43.4004 li2118.9 16.3926 lif2104.13 16.3926 mo2099.77 36.5694 li2104.13 16.3907 li2104.13 16.3926 lif2117.92 15.1778 mo2105.63 15.1778 li2104.95 15.1778 2104.27 15.7247 2104.13 16.3907 cv2099.77 36.5694 li2095.4 56.7461 li2095.26 57.4122 2094.58 57.9571 2093.9 57.9571 cv2086.45 57.9571 li2085.21 57.9571 li2076.6 57.9571 2077.6 52.0079 2079.36 43.8565 cv2079.38 43.7745 2079.4 43.6944 2079.41 43.6104 cv2079.61 42.5821 li2079.62 42.5157 2079.63 42.4493 2079.64 42.3887 cv2080.04 40.2969 li2080.46 38.0547 li2080.58 37.379 2080.78 36.3907 2080.91 35.7696 cv2082.89 26.0821 li2084.87 16.3946 li2085.01 15.7266 2084.56 15.1778 2083.88 15.1778 cv2071.27 15.1778 li2070.59 15.1778 2069.92 15.7266 2069.78 16.3926 cv2067.06 29.2559 li2064.35 42.1172 li2064.35 42.1231 2064.35 42.1309 2064.35 42.1368 cv2064.1 43.3321 li2060.97 57.5899 2061.8 71.1856 2078.78 71.6114 cv2079.05 71.6192 2079.27 71.6211 2079.27 71.6211 cv2105.91 71.6211 li2106.59 71.6211 2107.27 71.0743 2107.41 70.4063 cv2113.15 43.4014 li2118.9 16.3926 li2119.04 15.7247 2118.6 15.1778 2117.92 15.1778 cvf2166.92 58.0977 mo2167.6 58.0977 2168.05 58.6446 2167.91 59.3126 cv2166.72 65.1426 lif2165.53 70.9766 mo2166.72 65.1426 li2165.53 70.9786 li2165.53 70.9766 2165.53 70.9766 2165.53 70.9766 cvf2164.04 72.2032 mo2164.04 72.2012 li2160.43 72.2305 2149.56 72.3126 2141.4 72.3126 cv2151.34 72.3126 2164.04 72.2032 2164.04 72.2032 cvf2134.06 50.5879 mo2134.05 49.9493 2134.78 48.8506 2135.46 48.8506 cv2133.93 48.8243 li2133.24 55.7774 2134.06 50.5879 2134.06 50.5879 cvf2142.51 72.3106 mo2142.43 72.3106 2142.35 72.3106 2142.28 72.3126 cv2142.35 72.3106 2142.43 72.3106 2142.51 72.3106 cvf2166.92 58.0977 mo2167.6 58.0977 2168.05 58.6446 2167.91 59.3126 cv2166.72 65.1426 li2166.53 66.0938 lif2148.33 72.2969 mo2148.28 72.2969 li2148.33 72.2969 lif2145.31 72.3067 mo2145.14 72.3067 li2145.31 72.3067 lif2144.39 72.3086 mo2144.3 72.3086 2144.2 72.3086 2144.11 72.3106 cv2144.2 72.3086 2144.3 72.3086 2144.39 72.3086 cvf2143.46 72.3106 mo2143.2 72.3106 li2143.46 72.3106 lif2145.14 72.3067 mo2144.89 72.3067 2144.64 72.3086 2144.39 72.3086 cv2144.64 72.3086 2144.89 72.3067 2145.14 72.3067 cvf2148.28 72.2969 mo2147.28 72.3008 2146.29 72.3047 2145.31 72.3067 cv2146.29 72.3047 2147.29 72.3008 2148.28 72.2969 cvf2164.04 72.2012 mo2164.04 72.2012 li2161.39 72.2227 2154.85 72.2715 2148.33 72.2969 cv2154.85 72.2735 2161.39 72.2227 2164.04 72.2012 cvf2165.53 70.9786 mo2166.53 66.0938 li2165.53 70.9825 li2165.53 70.9805 2165.53 70.9805 2165.53 70.9786 cvf2144.11 72.3106 mo2143.46 72.3106 li2144.11 72.3106 lif2142.28 72.3126 mo2141.4 72.3126 li2142.28 72.3126 lif2143.2 72.3106 mo2142.51 72.3106 li2143.2 72.3106 lif1963.49 50.7344 mo1965.4 42.2754 li1963.22 51.9454 li1961.13 61.795 li1962.96 53.1602 li1963.1 52.4922 1963.34 51.4004 1963.49 50.7344 cvf1986.34 15.0352 mo1972.85 15.0352 li1972.17 15.0352 1971.48 15.5801 1971.33 16.2442 cv1970.05 21.8907 li1968.78 27.5391 li1968.62 28.2032 1969.06 28.7481 1969.74 28.7481 cv1983.34 28.7481 li1984.02 28.7481 1984.7 28.2032 1984.84 27.5372 cv1986.08 21.8907 li1987.32 16.2481 li1987.32 16.2461 li1987.46 15.5801 1987.02 15.0352 1986.34 15.0352 cvf1983.4 33.8184 mo1983.4 33.8165 li1979.45 52.1241 li1983.4 33.8184 lif1944.21 94.4727 mo1944.21 94.4727 1951.01 94.5606 1955.33 94.5606 cv1952.05 94.5606 1946.62 94.5 1944.2 94.4708 cv1944.21 94.4708 1944.21 94.4727 1944.21 94.4727 cvf1967.31 33.8165 mo1965.4 42.2754 li1967.31 33.8165 lif1982.42 32.6055 mo1968.83 32.6055 li1968.15 32.6055 1967.46 33.1504 1967.31 33.8165 cv1965.4 42.2754 li1963.49 50.7344 li1963.34 51.4004 1963.11 52.4932 1962.96 53.1602 cv1961.13 61.795 li1959.29 70.4297 li1959.15 71.0958 1958.86 72.1719 1958.64 72.8184 cv1958.64 72.8184 1956.1 80.377 1951.83 80.2911 cv1951.65 80.2872 1951.47 80.2852 1951.3 80.2813 cv1949.23 80.2422 1947.6 80.2129 1947.6 80.2129 cv1947.6 80.2129 li1946.92 80.2032 1946.23 80.7344 1946.07 81.3975 cv1944.66 87.3243 li1943.26 93.25 li1943.1 93.9122 1943.52 94.459 1944.2 94.4708 cv1946.62 94.5 1952.05 94.5606 1955.33 94.5606 cv1966 94.5606 1971.62 88.6504 1975.23 71.6426 cv1979.45 52.1241 li1983.4 33.8165 li1983.55 33.1504 1983.11 32.6055 1982.42 32.6055 cvf2175.59 71.6211 mo2174.91 71.6211 2174.46 71.0743 2174.61 70.4063 cv2184.84 22.4952 lif2189.8 70.4044 mo2193.94 49.9551 li2189.8 70.4044 lif2174.76 71.0137 mo2174.67 70.6797 2174.72 69.8614 2174.87 69.1934 cv2179.72 46.4512 li2174.61 70.4063 li2174.46 71.0743 2174.91 71.6211 2175.59 71.6211 cv2176.83 71.6211 li2176.15 71.6211 2174.84 71.3477 2174.76 71.0137 cvf2188.99 71.3477 mo2188.62 71.4981 2187.76 71.6211 2187.08 71.6211 cv2188.32 71.6211 li2189 71.6211 2189.67 71.0743 2189.81 70.4044 cv2190.05 69.1895 li2189.92 69.8575 2189.37 71.1973 2188.99 71.3477 cvf2191.87 60.1797 mo2193.7 51.1543 li2193.7 51.1602 2193.7 51.169 2193.7 51.1729 cv2191.87 60.1797 lif2232.23 25.7032 mo2232.8 28.0313 li2232.95 28.6973 2232.52 29.2383 2231.84 29.2403 cvf2190.05 69.1895 mo2191.87 60.1797 li2190.05 69.1895 lif2231.67 23.3184 mo2231.67 23.3184 li2232.23 25.7042 li2231.67 23.3184 lif2193.7 51.1543 mo2193.83 50.4864 2194.06 49.4043 2194.2 48.7422 cv2196.15 39.6055 li2193.94 49.9551 li2193.7 51.1543 lif2185 21.709 mo2184.87 22.3545 2184.69 23.168 2184.58 23.7071 cv2179.72 46.4512 li2184.84 22.4942 li2185 21.709 lif2232.8 28.0313 mo2232.23 25.7032 li2231.67 23.3184 li2231.39 22.1114 li2230.29 17.8204 2227.04 15.3438 2220.01 15.3438 cv2209.04 15.3331 li2198.95 15.3204 li2198.09 15.3204 li2187.59 15.3204 li2186.91 15.3204 2186.24 15.8653 2186.1 16.5333 cv2186.1 16.5333 li2185.59 18.9063 li2185 21.71 li2184.84 22.4942 li2179.72 46.4512 li2174.87 69.1934 li2174.72 69.8614 2174.67 70.6797 2174.76 71.0137 cv2174.84 71.3477 2176.15 71.6211 2176.83 71.6211 cv2187.08 71.6211 li2187.76 71.6211 2188.62 71.4981 2188.99 71.3477 cv2189.37 71.1983 2189.92 69.8575 2190.05 69.1895 cv2191.87 60.1797 li2193.7 51.1729 li2193.7 51.169 2193.7 51.1602 2193.7 51.1543 cv2193.94 49.9561 li2196.15 39.6055 li2198.1 30.4659 li2198.25 29.8018 2198.92 29.2588 2199.6 29.2569 cv2231.84 29.2403 li2232.52 29.2383 2232.95 28.6973 2232.8 28.0313 cvf2274.3 6.98047 mo2273.61 6.98536 2272.5 6.98926 2271.81 6.98926 cv2261.49 6.98926 li2260.81 6.98926 2259.94 7.45118 2259.55 8.01368 cv2236.73 41.4434 li2236.35 42.0079 2235.91 41.9239 2235.76 41.2608 cv2234.08 33.8956 li2233.93 33.2295 2233.24 32.6866 2232.56 32.6866 cv2217.89 32.6866 li2217.21 32.6866 2216.8 33.2217 2216.99 33.877 cv2223.56 56.9044 li2223.75 57.5606 2223.77 58.6387 2223.6 59.2989 cv2220.73 70.4434 li2220.56 71.1055 2220.98 71.6465 2221.66 71.6465 cv2236.16 71.6465 li2236.84 71.6465 2237.54 71.1055 2237.71 70.4434 cv2240.58 59.2989 li2240.75 58.6387 2241.22 57.6504 2241.63 57.1055 cv2278.68 7.93848 li2279.09 7.39356 2278.87 6.95118 2278.18 6.95508 cv2274.3 6.98047 lif2157.76 35.8204 mo2157.75 35.8067 li2157.67 36.5479 2156.99 37.0909 2156.3 37.0909 cv2137.71 37.0909 li2137.06 37.0909 2136.74 36.6524 2136.83 36.1133 cv2136.84 36.0977 2136.84 36.085 2136.85 36.0704 cv2136.85 36.0704 2136.84 36.0723 2136.84 36.0762 cv2136.84 36.0547 2136.84 36.0352 2136.85 36.0137 cv2136.85 36.0137 2136.88 35.8838 2136.93 35.6973 cv2138.71 30.9747 2142.33 27.876 2149.13 27.876 cv2156.78 27.876 2158.28 31.6153 2157.76 35.8204 cv2152.3 14.3536 mo2128.43 14.3536 2122.77 28.8438 2119.6 43.4688 cv2116.42 58.375 2116.7 72.3126 2141.4 72.3126 cv2142.28 72.3126 li2142.35 72.3106 2142.43 72.3106 2142.51 72.3106 cv2143.2 72.3106 li2143.46 72.3106 li2144.11 72.3106 li2144.2 72.3086 2144.3 72.3086 2144.39 72.3086 cv2144.64 72.3086 2144.89 72.3067 2145.14 72.3067 cv2145.31 72.3067 li2146.29 72.3047 2147.28 72.3008 2148.28 72.2969 cv2148.33 72.2969 li2154.85 72.2715 2161.39 72.2227 2164.04 72.2012 cv2164.72 72.1915 2165.39 71.6446 2165.53 70.9825 cv2166.53 66.0938 li2166.72 65.1426 li2167.91 59.3126 li2168.05 58.6446 2167.6 58.0977 2166.92 58.0977 cv2144.71 58.0977 li2135.88 58.0977 2133.26 55.75 2134.22 48.8497 cv2169.72 48.8497 li2169.72 48.8536 li2169.73 48.8536 2169.74 48.8497 2169.75 48.8497 cv2170.31 48.8409 2170.83 48.4512 2171.04 47.9336 cv2171.08 47.835 2171.11 47.7305 2171.13 47.6241 cv2171.12 47.628 li2176.39 27.7442 2174.88 14.3536 2152.3 14.3536 cvf2039.46 35.7442 mo2039.13 36.9336 li2039.13 36.9376 2039.13 36.9376 2039.13 36.9376 cv2036.45 46.4376 li2033.77 55.9356 li2033.58 56.5918 2032.87 57.129 2032.19 57.129 cv2018 57.129 li2007.24 57.129 2004.62 48.711 2007.24 36.295 cv2009.86 23.5967 2014.99 15.7012 2025.59 14.9024 cv2040.06 13.8106 2042.96 23.9922 2039.46 35.7442 cv2049.19 56.3985 mo2049.19 56.3985 2055.88 40.1563 2057.4 30.7735 cv2059.47 18.2159 2053.19 0 2028.9 0 cv2004.75 0 1994.26 17.3907 1990.26 36.295 cv1986.26 55.336 1991.5 72.0352 2015.52 71.8985 cv2034.46 71.8272 li2052.16 71.7637 li2052.85 71.7579 2053.54 71.2168 2053.72 70.5586 cv2056.8 58.795 li2056.97 58.1348 2056.56 57.5918 2055.87 57.5879 cv2052.92 57.5704 li2049.96 57.5528 li2049.38 57.5489 2049.05 57.1739 2049.12 56.6758 cv2049.13 56.586 2049.15 56.4942 2049.19 56.3985 cvf2168.74 45.5274 mo2168.74 45.9766 2168.38 46.3418 2167.93 46.3418 cv2167.48 46.3418 2167.11 45.9766 2167.11 45.5274 cv2167.11 45.0782 2167.48 44.7149 2167.93 44.7149 cv2168.38 44.7149 2168.74 45.0782 2168.74 45.5274 cvf1831.32 21.42 mo1831.32 50.8555 li1831.32 72.5303 1849.09 90.1006 1871.03 90.1006 cv1880.95 90.1006 li1902.88 90.1006 1920.66 72.5303 1920.66 50.8555 cv1920.66 21.42 li1920.66 16 1916.22 11.6075 1910.73 11.6075 cv1841.24 11.6075 li1835.76 11.6075 1831.32 16 1831.32 21.42 cv0.427451 0.313726 0.286275 0.129412 cmykef1846.21 45.9493 mo1846.21 62.2051 1859.54 75.3848 1875.99 75.3848 cv1892.44 75.3848 1905.77 62.2051 1905.77 45.9493 cv1890.88 45.9493 li1890.88 54.0762 1884.21 60.667 1875.99 60.667 cv1867.77 60.667 1861.1 54.0762 1861.1 45.9493 cv1861.1 31.2305 li1846.21 31.2305 li1846.21 45.9493 li0 0 0 0 cmykef1894.6 23.1368 mo1891.13 37.3643 li1905.52 41.042 li1909.25 26.8155 li1894.6 23.1368 lief2102.32 101.681 mo2099.97 101.681 li2099.63 101.009 li2099.63 101.009 2097.73 101.821 2096.44 101.821 cv2092.83 101.821 2092.94 98.8809 2093.58 95.9405 cv2094.79 90.2286 li2097.48 90.2286 li2096.95 94.6524 li2096.69 95.9971 li2096.33 97.6768 2096.11 98.9082 2097.87 98.9082 cv2099.89 98.9082 li2101.76 90.2286 li2104.76 90.2286 li2102.32 101.681 li0.427451 0.313726 0.286275 0.129412 cmykf2115.54 92.9444 mo2115.54 92.9444 2112.26 92.9727 2111.37 92.9727 cv2109.46 92.9727 2109.26 93.5606 2109.13 94.1768 cv2109.01 94.7364 li2115.06 95.1846 li2115.06 95.1846 2115.09 97.1163 2114.84 98.209 cv2114.47 100.029 2112.6 101.877 2109.21 101.877 cv2107.53 101.877 2104.81 101.233 2104.81 101.233 cv2105.29 99.0206 li2105.29 99.0206 2108.56 99.0206 2109.46 99.0206 cv2111.31 99.0206 2111.56 98.5166 2111.67 98.0127 cv2111.81 97.2852 li2105.88 96.837 li2105.88 96.837 2105.65 95.3526 2105.96 93.8692 cv2106.41 91.8526 2108.26 90.1172 2111.64 90.1172 cv2113.33 90.1172 2116.04 90.7325 2116.04 90.7325 cv2115.54 92.9444 lif2122.87 92.8047 mo2121.36 92.8047 2120.58 93.5889 2120.27 94.9883 cv2124.58 94.625 li2124.78 93.6729 2124.58 92.8047 2122.87 92.8047 cvcp2119.85 97.0606 mo2119.65 98.461 2120.19 98.9366 2121.98 98.9366 cv2126.48 98.9366 li2126.04 101.065 li2126.04 101.065 2123.32 101.821 2121.3 101.821 cv2116.29 101.821 2116.24 98.9932 2116.88 95.9688 cv2117.52 93.001 2118.67 90.0606 2123.52 90.0606 cv2128.19 90.0606 2128.42 92.8887 2127.27 97.0606 cv2119.85 97.0606 lif2135.28 95.2129 mo2135.67 93.421 2135.56 93.085 2134.63 93.085 cv2133.23 93.085 li2132.34 97.2852 li2130.96 101.681 li2128.36 101.681 li2130.49 91.7129 li2130.8 90.2569 li2133.18 90.2569 li2133.48 90.9288 li2133.48 90.9288 2134.86 90.1172 2136.2 90.1172 cv2139.06 90.1172 2138.83 92.2725 2138.22 95.2129 cv2135.28 95.2129 lif2149.84 88.8008 mo2148.69 88.8008 2147.96 88.4649 2148.24 87.0645 cv2148.55 85.6651 2149.45 85.3292 2150.56 85.3292 cv2151.69 85.3292 2152.44 85.6651 2152.13 87.0645 cv2151.85 88.4366 2150.96 88.8008 2149.84 88.8008 cvcp2148.61 101.681 mo2146.03 101.681 li2146.53 97.2002 li2147.43 93.0567 li2145.64 92.6651 li2146.14 90.2286 li2151.04 90.2286 li2148.61 101.681 lif2160.95 101.681 mo2158.26 101.681 li2158.77 97.2569 li2159.05 95.9971 li2159.41 94.3165 2159.61 93.085 2157.84 93.085 cv2155.83 93.085 li2153.98 101.681 li2150.98 101.681 li2153.42 90.2286 li2155.77 90.2286 li2156.14 90.9004 li2156.14 90.9004 2158.01 90.0889 2159.3 90.0889 cv2162.88 90.0889 2162.8 93.001 2162.16 95.9688 cv2160.95 101.681 lif2171.81 92.6651 mo2168.59 93.0567 li2167.67 97.4249 li2167.42 98.629 2167.42 98.9649 2168.48 98.9649 cv2169.07 98.9649 2170.64 98.9649 2170.64 98.9649 cv2170.19 101.261 li2170.19 101.261 2168.23 101.849 2167.39 101.849 cv2164.09 101.849 2164.11 100.029 2164.7 97.3126 cv2165.6 93.0284 li2163.8 92.6368 li2164.34 90.2012 li2166.21 90.2012 li2167.28 87.3165 li2169.83 87.3165 li2169.21 90.2012 li2172.35 90.2012 li2171.81 92.6651 lif2178.51 92.8047 mo2176.99 92.8047 2176.21 93.5889 2175.9 94.9883 cv2180.21 94.625 li2180.41 93.6729 2180.21 92.8047 2178.51 92.8047 cvcp2175.48 97.0606 mo2175.29 98.461 2175.82 98.9366 2177.61 98.9366 cv2182.12 98.9366 li2181.67 101.065 li2181.67 101.065 2178.95 101.821 2176.94 101.821 cv2171.93 101.821 2171.87 98.9932 2172.51 95.9688 cv2173.16 93.001 2174.3 90.0606 2179.15 90.0606 cv2183.83 90.0606 2184.05 92.8887 2182.9 97.0606 cv2175.48 97.0606 lif2190.91 95.2129 mo2191.3 93.421 2191.19 93.085 2190.26 93.085 cv2188.87 93.085 li2187.97 97.2852 li2186.6 101.681 li2183.99 101.681 li2186.12 91.7129 li2186.43 90.2569 li2188.81 90.2569 li2189.12 90.9288 li2189.12 90.9288 2190.49 90.1172 2191.83 90.1172 cv2194.69 90.1172 2194.46 92.2725 2193.85 95.2129 cv2190.91 95.2129 lif2204.29 88.4932 mo2204.29 88.4932 2202.72 88.4932 2202.14 88.4932 cv2200.99 88.4932 2200.9 89.2208 2200.68 90.2569 cv2203.59 90.2569 li2203.09 92.6924 li2200.01 93.1124 li2198.16 101.737 li2196.76 106.189 li2194.21 106.189 li2195.17 101.709 li2197.01 93.085 li2195.22 92.6924 li2195.72 90.2569 li2197.6 90.2569 li2198.19 87.5967 2199.09 85.4688 2202.3 85.4688 cv2203.14 85.4688 2204.8 86.169 2204.8 86.169 cv2204.29 88.4932 lif2209.36 93.0284 mo2207.68 93.0284 2207.09 94.1211 2206.7 95.9688 cv2206.31 97.8448 2206.45 98.8526 2208.13 98.8526 cv2210.48 98.8526 li2211.69 93.0284 li2209.36 93.0284 licp2214.4 94.6524 mo2212.92 101.681 li2210.59 101.681 li2210.23 100.897 li2210.23 100.897 2208.21 101.821 2206.73 101.821 cv2203.17 101.821 2202.98 98.9932 2203.62 95.9688 cv2204.24 93.001 2205.66 90.0606 2209.25 90.0606 cv2211.57 90.0606 2215.24 90.7051 2215.24 90.7051 cv2214.4 94.6524 lif2225.85 93.001 mo2222.41 93.001 li2220.67 93.001 2219.64 94.2325 2219.24 95.9971 cv2218.88 97.7325 2219.44 98.9366 2221.23 98.9366 cv2224.82 98.9366 li2224.34 101.177 li2224.34 101.177 2221.82 101.849 2219.89 101.849 cv2216.33 101.849 2215.52 98.9932 2216.16 95.9971 cv2216.81 92.9727 2218.82 90.0606 2222.3 90.0606 cv2224 90.0606 2226.38 90.6768 2226.38 90.6768 cv2225.85 93.001 lif2232.7 92.8047 mo2231.19 92.8047 2230.41 93.5889 2230.1 94.9883 cv2234.41 94.625 li2234.61 93.6729 2234.41 92.8047 2232.7 92.8047 cvcp2229.68 97.0606 mo2229.48 98.461 2230.02 98.9366 2231.81 98.9366 cv2236.32 98.9366 li2235.87 101.065 li2235.87 101.065 2233.15 101.821 2231.13 101.821 cv2226.12 101.821 2226.07 98.9932 2226.71 95.9688 cv2227.36 93.001 2228.5 90.0606 2233.35 90.0606 cv2238.02 90.0606 2238.25 92.8887 2237.1 97.0606 cv2229.68 97.0606 lif1494.15 63.6954 mo1464.15 63.6954 li1464.15 33.6973 li1494.15 33.6973 li1494.15 63.6954 lif1532.37 63.6954 mo1502.38 63.6954 li1502.38 33.6973 li1532.37 33.6973 li1532.37 63.6954 li0.666667 0.525491 0.537255 0.611765 cmykf846.626 686.08 mo324.75 686.08 li324.75 495.101 li846.626 495.101 li846.626 686.08 li0.847059 0.619608 0.458824 0.568628 cmykf548.845 570.834 mo548.845 570.834 548.846 570.834 548.846 570.83 cv546.165 580.334 li548.845 570.834 li0 0 0 0 cmykf562.637 591.466 mo559.682 591.449 li562.637 591.466 lif561.88 605.66 mo561.88 605.66 561.882 605.66 561.883 605.66 cv544.178 605.724 li561.88 605.66 lif565.593 591.484 mo562.637 591.466 li565.593 591.484 lif563.436 604.453 mo566.52 592.691 li563.436 604.455 li563.436 604.455 563.436 604.455 563.436 604.453 cvf628.618 550.289 mo622.873 577.296 li628.618 550.289 lif613.846 550.289 mo609.485 570.464 li613.846 550.287 li613.846 550.289 lif627.635 549.074 mo615.35 549.074 li614.668 549.074 613.992 549.621 613.846 550.287 cv609.485 570.464 li605.124 590.642 li604.979 591.308 604.303 591.853 603.622 591.853 cv596.168 591.853 li594.926 591.853 li586.324 591.853 587.319 585.904 589.081 577.752 cv589.098 577.669 589.116 577.589 589.133 577.505 cv589.327 576.478 li589.338 576.412 589.352 576.345 589.363 576.285 cv589.755 574.193 li590.176 571.951 li590.304 571.275 590.499 570.287 590.626 569.666 cv592.608 559.978 li594.592 550.291 li594.729 549.623 594.282 549.074 593.6 549.074 cv580.991 549.074 li580.309 549.074 579.634 549.623 579.495 550.289 cv576.784 563.152 li574.073 576.013 li574.071 576.019 574.07 576.027 574.069 576.033 cv573.817 577.228 li570.694 591.486 571.522 605.082 588.495 605.507 cv588.772 605.515 588.987 605.517 588.987 605.517 cv615.628 605.517 li616.31 605.517 616.985 604.97 617.127 604.302 cv622.873 577.296 li628.618 550.289 li628.759 549.621 628.317 549.074 627.635 549.074 cvf676.64 591.994 mo677.323 591.994 677.769 592.541 677.632 593.208 cv676.439 599.039 lif675.247 604.873 mo676.439 599.039 li675.246 604.874 li675.246 604.873 675.247 604.873 675.247 604.873 cvf673.756 606.099 mo673.758 606.099 673.76 606.097 673.762 606.097 cv670.147 606.126 659.283 606.208 651.118 606.208 cv661.055 606.208 673.756 606.099 673.756 606.099 cvf643.784 584.484 mo643.774 583.845 644.5 582.746 645.183 582.746 cv643.649 582.72 li642.958 589.673 643.784 584.484 643.784 584.484 cvf652.231 606.207 mo652.153 606.207 652.073 606.207 651.995 606.208 cv652.073 606.207 652.153 606.207 652.231 606.207 cvf676.64 591.994 mo677.323 591.994 677.769 592.541 677.632 593.208 cv676.439 599.039 li676.245 599.99 lif658.046 606.193 mo658.03 606.193 658.013 606.193 657.997 606.193 cv658.013 606.193 658.03 606.193 658.046 606.193 cvf655.033 606.203 mo654.973 606.203 654.916 606.203 654.858 606.203 cv654.916 606.203 654.973 606.203 655.033 606.203 cvf654.114 606.205 mo654.016 606.205 653.92 606.205 653.825 606.207 cv653.92 606.205 654.016 606.205 654.114 606.205 cvf653.176 606.207 mo653.09 606.207 653.006 606.207 652.922 606.207 cv653.006 606.207 653.09 606.207 653.176 606.207 cvf654.858 606.203 mo654.609 606.203 654.36 606.205 654.114 606.205 cv654.36 606.205 654.609 606.203 654.858 606.203 cvf657.997 606.193 mo657.002 606.197 656.01 606.201 655.033 606.203 cv656.01 606.201 657.003 606.197 657.997 606.193 cvf673.762 606.097 mo673.763 606.097 li671.114 606.119 664.571 606.168 658.046 606.193 cv664.568 606.169 671.112 606.119 673.762 606.097 cvf675.246 604.874 mo676.245 599.99 li675.245 604.878 li675.245 604.876 675.246 604.876 675.246 604.874 cvf653.825 606.207 mo653.607 606.207 653.391 606.207 653.176 606.207 cv653.391 606.207 653.607 606.207 653.825 606.207 cvf651.995 606.208 mo651.7 606.208 651.407 606.208 651.118 606.208 cv651.407 606.208 651.7 606.208 651.995 606.208 cvf652.922 606.207 mo652.69 606.207 652.46 606.207 652.231 606.207 cv652.46 606.207 652.69 606.207 652.922 606.207 cvf473.213 584.63 mo475.124 576.171 li472.94 585.841 li470.847 595.691 li472.682 587.056 li472.825 586.388 473.063 585.296 473.213 584.63 cvf496.059 548.931 mo482.567 548.931 li481.885 548.931 481.204 549.476 481.052 550.14 cv479.773 555.787 li478.495 561.435 li478.343 562.099 478.778 562.644 479.46 562.644 cv493.055 562.644 li493.739 562.644 494.416 562.099 494.562 561.433 cv495.798 555.787 li497.034 550.144 li497.034 550.142 497.034 550.142 497.034 550.142 cv497.18 549.476 496.741 548.931 496.059 548.931 cvf493.122 567.714 mo493.122 567.712 493.122 567.712 493.122 567.712 cv489.166 586.019 li493.122 567.714 lif453.928 628.369 mo453.928 628.369 460.727 628.457 465.051 628.457 cv461.767 628.457 456.342 628.396 453.922 628.367 cv453.924 628.367 453.925 628.369 453.928 628.369 cvf477.033 567.712 mo475.124 576.171 li477.033 567.712 lif492.143 566.502 mo478.546 566.502 li477.864 566.502 477.183 567.046 477.033 567.712 cv475.124 576.171 li473.213 584.63 li473.063 585.296 472.825 586.388 472.682 587.056 cv470.847 595.691 li469.012 604.326 li468.871 604.992 468.577 606.068 468.36 606.714 cv468.36 606.714 465.819 614.273 461.547 614.187 cv461.368 614.183 461.19 614.181 461.014 614.177 cv458.946 614.138 457.321 614.109 457.321 614.109 cv457.319 614.109 457.318 614.109 457.317 614.109 cv456.636 614.099 455.952 614.63 455.793 615.292 cv455.792 615.292 li454.383 621.22 li452.974 627.146 li452.817 627.808 453.243 628.355 453.922 628.367 cv456.342 628.396 461.767 628.457 465.051 628.457 cv475.718 628.457 481.341 622.546 484.948 605.539 cv489.166 586.019 li493.122 567.712 li493.266 567.046 492.826 566.502 492.143 566.502 cvf685.307 605.517 mo684.626 605.517 684.183 604.97 684.327 604.302 cv694.555 556.39 lif699.524 604.3 mo703.661 583.851 li699.524 604.3 lif684.476 604.91 mo684.393 604.576 684.442 603.757 684.586 603.089 cv689.441 580.347 li684.327 604.302 li684.183 604.97 684.626 605.517 685.307 605.517 cv686.549 605.517 li685.867 605.517 684.558 605.244 684.476 604.91 cvf698.712 605.244 mo698.341 605.394 697.478 605.517 696.795 605.517 cv698.038 605.517 li698.719 605.517 699.389 604.97 699.524 604.3 cv699.77 603.085 li699.634 603.753 699.084 605.093 698.712 605.244 cvf701.591 594.076 mo703.418 585.05 li703.416 585.056 703.416 585.064 703.415 585.068 cv701.591 594.076 lif741.951 559.599 mo742.514 561.927 li742.669 562.593 742.239 563.134 741.558 563.136 cvf699.77 603.085 mo701.591 594.076 li699.77 603.085 lif741.393 557.214 mo741.393 557.214 li741.951 559.599 li741.393 557.214 lif703.418 585.05 mo703.553 584.382 703.778 583.3 703.919 582.638 cv705.87 573.502 li703.661 583.851 li703.418 585.05 lif694.72 555.605 mo694.584 556.25 694.411 557.064 694.295 557.603 cv689.441 580.347 li694.555 556.39 li694.72 555.605 lif742.514 561.927 mo741.951 559.599 li741.393 557.214 li741.111 556.007 li740.006 551.716 736.764 549.24 729.724 549.24 cv718.764 549.228 li708.67 549.216 li707.804 549.216 li697.313 549.216 li696.631 549.216 695.957 549.761 695.816 550.429 cv695.815 550.429 695.815 550.429 695.815 550.429 cv695.313 552.802 li694.72 555.605 li694.555 556.39 li689.441 580.347 li684.586 603.089 li684.442 603.757 684.393 604.576 684.476 604.91 cv684.558 605.244 685.867 605.517 686.549 605.517 cv696.795 605.517 li697.478 605.517 698.341 605.394 698.712 605.244 cv699.084 605.093 699.634 603.753 699.77 603.085 cv701.591 594.076 li703.415 585.068 li703.416 585.064 703.416 585.056 703.418 585.05 cv703.661 583.851 li705.87 573.502 li707.821 564.361 li707.965 563.697 708.637 563.154 709.318 563.152 cv741.558 563.136 li742.239 563.134 742.669 562.593 742.514 561.927 cvf784.013 540.876 mo783.331 540.881 782.214 540.885 781.532 540.885 cv771.212 540.885 li770.53 540.885 769.656 541.346 769.271 541.909 cv746.453 575.339 li746.067 575.904 745.627 575.82 745.476 575.156 cv743.797 567.791 li743.646 567.124 742.962 566.582 742.281 566.582 cv727.611 566.582 li726.928 566.582 726.524 567.117 726.71 567.773 cv733.284 590.8 li733.471 591.457 733.485 592.535 733.316 593.195 cv730.451 604.339 li730.281 605.002 730.701 605.542 731.383 605.542 cv745.881 605.542 li746.563 605.542 747.26 605.002 747.429 604.339 cv750.295 593.195 li750.464 592.535 750.939 591.546 751.35 591.002 cv788.395 541.834 li788.806 541.29 788.584 540.846 787.902 540.85 cv784.013 540.876 lif667.474 569.716 mo667.473 569.703 li667.387 570.443 666.705 570.986 666.023 570.986 cv647.424 570.986 li646.782 570.986 646.455 570.548 646.549 570.009 cv646.555 569.994 646.557 569.98 646.567 569.966 cv646.567 569.966 646.561 569.968 646.555 569.972 cv646.559 569.951 646.559 569.931 646.565 569.91 cv646.565 569.91 646.6 569.779 646.65 569.593 cv648.426 564.871 652.044 561.771 658.844 561.771 cv666.5 561.771 667.994 565.511 667.474 569.716 cvcp662.018 548.25 mo638.145 548.25 632.489 562.74 629.315 577.365 cv626.141 592.271 626.415 606.208 651.118 606.208 cv651.995 606.208 li652.073 606.207 652.153 606.207 652.231 606.207 cv652.46 606.207 652.69 606.207 652.922 606.207 cv653.006 606.207 653.09 606.207 653.176 606.207 cv653.391 606.207 653.607 606.207 653.825 606.207 cv653.92 606.205 654.016 606.205 654.114 606.205 cv654.36 606.205 654.609 606.203 654.858 606.203 cv654.916 606.203 654.973 606.203 655.033 606.203 cv656.01 606.201 657.002 606.197 657.997 606.193 cv658.046 606.193 li664.571 606.168 671.114 606.119 673.764 606.097 cv674.442 606.087 675.105 605.541 675.245 604.878 cv676.245 599.99 li676.439 599.039 li677.632 593.208 li677.769 592.541 677.323 591.994 676.64 591.994 cv654.431 591.994 li645.598 591.994 642.975 589.646 643.942 582.746 cv679.444 582.746 li679.441 582.75 li679.45 582.75 679.458 582.746 679.465 582.746 cv680.03 582.736 680.551 582.347 680.758 581.83 cv680.797 581.73 680.831 581.626 680.844 581.519 cv680.84 581.523 li686.112 561.64 684.6 548.25 662.018 548.25 cvf549.182 569.64 mo548.846 570.83 li548.846 570.834 548.845 570.834 548.845 570.834 cv546.165 580.334 li543.485 589.832 li543.299 590.488 542.59 591.025 541.907 591.025 cv527.718 591.025 li516.956 591.025 514.335 582.607 516.956 570.191 cv519.576 557.492 524.713 549.597 535.306 548.798 cv549.782 547.707 552.677 557.888 549.182 569.64 cvcp558.913 590.294 mo558.913 590.294 565.602 574.052 567.122 564.669 cv569.192 552.111 562.907 533.897 538.619 533.897 cv514.469 533.897 503.983 551.287 499.981 570.191 cv495.98 589.232 501.222 605.931 525.235 605.794 cv544.178 605.724 li561.883 605.66 li562.565 605.654 563.262 605.113 563.436 604.455 cv566.52 592.691 li566.692 592.031 566.275 591.488 565.593 591.484 cv562.637 591.466 li559.682 591.449 li559.102 591.445 558.77 591.07 558.84 590.572 cv558.853 590.482 558.874 590.39 558.913 590.294 cvf678.461 579.423 mo678.461 579.873 678.097 580.238 677.647 580.238 cv677.198 580.238 676.832 579.873 676.832 579.423 cv676.832 578.974 677.198 578.611 677.647 578.611 cv678.097 578.611 678.461 578.974 678.461 579.423 cvf374.51 558.304 mo367.842 567.888 368.674 580.357 373.768 590.541 cv373.889 590.785 374.014 591.025 374.14 591.265 cv374.22 591.418 374.295 591.574 374.377 591.724 cv374.425 591.814 374.477 591.902 374.526 591.988 cv374.614 592.15 374.703 592.304 374.792 592.462 cv374.952 592.742 375.113 593.019 375.279 593.296 cv375.37 593.449 375.461 593.601 375.555 593.753 cv375.74 594.05 375.928 594.343 376.12 594.636 cv376.201 594.761 376.279 594.886 376.36 595.007 cv376.626 595.404 376.899 595.798 377.178 596.187 cv377.186 596.197 377.194 596.208 377.202 596.218 cv377.247 596.281 377.293 596.341 377.34 596.404 cv377.583 596.738 377.831 597.068 378.084 597.394 cv378.176 597.513 378.271 597.632 378.364 597.752 cv378.59 598.035 378.82 598.316 379.053 598.597 cv379.14 598.703 379.227 598.808 379.315 598.912 cv379.629 599.281 379.949 599.648 380.276 600.007 cv380.282 600.013 380.289 600.021 380.295 600.027 cv380.307 600.042 380.321 600.052 380.332 600.068 cv380.65 600.416 380.975 600.755 381.306 601.095 cv381.409 601.201 381.514 601.306 381.618 601.41 cv381.875 601.668 382.134 601.921 382.397 602.173 cv382.503 602.275 382.608 602.378 382.715 602.476 cv383.066 602.806 383.42 603.13 383.782 603.447 cv383.788 603.453 383.793 603.457 383.798 603.46 cv383.86 603.515 383.922 603.566 383.983 603.619 cv384.302 603.894 384.626 604.168 384.954 604.437 cv385.085 604.544 385.221 604.65 385.354 604.757 cv385.62 604.97 385.889 605.181 386.162 605.388 cv386.305 605.498 386.448 605.607 386.594 605.716 cv386.893 605.937 387.196 606.154 387.5 606.367 cv387.611 606.447 387.719 606.525 387.831 606.601 cv387.861 606.623 387.889 606.644 387.92 606.666 cv388.21 606.865 388.504 607.056 388.799 607.248 cv388.928 607.332 389.053 607.419 389.181 607.502 cv389.635 607.789 390.094 608.072 390.559 608.345 cv390.684 608.418 390.813 608.488 390.94 608.56 cv391.282 608.757 391.626 608.951 391.974 609.14 cv392.163 609.242 392.356 609.337 392.546 609.435 cv392.792 609.564 393.038 609.695 393.288 609.82 cv393.344 609.847 393.403 609.874 393.458 609.902 cv393.558 609.951 393.659 609.998 393.76 610.048 cv394.148 610.234 394.539 610.416 394.934 610.591 cv395.017 610.628 395.098 610.666 395.182 610.703 cv395.633 610.9 396.088 611.089 396.549 611.271 cv396.66 611.316 396.772 611.359 396.881 611.402 cv397.309 611.566 397.741 611.728 398.174 611.88 cv398.228 611.9 398.282 611.918 398.335 611.937 cv398.811 612.103 399.292 612.257 399.775 612.408 cv399.89 612.441 400.006 612.478 400.122 612.511 cv400.614 612.66 401.102 612.837 401.609 612.931 cv433.858 618.812 443.223 593.552 443.223 593.552 cv435.357 603.802 421.393 606.505 408.161 603.496 cv407.66 603.382 407.172 603.226 406.684 603.082 cv406.561 603.044 406.438 603.007 406.315 602.97 cv405.838 602.824 405.365 602.669 404.895 602.507 cv404.83 602.484 404.764 602.46 404.698 602.437 cv404.278 602.289 403.86 602.132 403.446 601.972 cv403.327 601.925 403.21 601.88 403.093 601.834 cv402.638 601.654 402.186 601.466 401.739 601.271 cv401.649 601.232 401.559 601.191 401.469 601.152 cv401.085 600.978 400.706 600.802 400.327 600.621 cv400.217 600.568 400.108 600.517 399.999 600.462 cv399.702 600.318 399.41 600.164 399.118 600.013 cv398.92 599.91 398.721 599.812 398.526 599.705 cv398.169 599.513 397.819 599.314 397.468 599.111 cv397.35 599.044 397.229 598.98 397.112 598.912 cv396.645 598.638 396.187 598.355 395.733 598.068 cv395.607 597.988 395.485 597.902 395.361 597.82 cv395.031 597.607 394.703 597.39 394.379 597.168 cv394.273 597.095 394.169 597.017 394.065 596.945 cv393.75 596.724 393.442 596.502 393.136 596.275 cv392.999 596.171 392.862 596.068 392.725 595.964 cv392.444 595.75 392.165 595.533 391.888 595.31 cv391.764 595.21 391.637 595.111 391.515 595.011 cv391.163 594.722 390.816 594.431 390.473 594.132 cv390.436 594.101 390.397 594.07 390.36 594.037 cv389.988 593.71 389.624 593.376 389.263 593.041 cv389.159 592.941 389.057 592.843 388.954 592.744 cv388.688 592.49 388.426 592.234 388.168 591.972 cv388.063 591.869 387.96 591.767 387.859 591.664 cv387.532 591.328 387.208 590.988 386.893 590.642 cv386.877 590.624 386.862 590.609 386.844 590.591 cv386.511 590.226 386.186 589.853 385.866 589.476 cv385.779 589.373 385.696 589.273 385.61 589.171 cv385.371 588.884 385.135 588.593 384.903 588.3 cv384.817 588.193 384.731 588.085 384.646 587.976 cv384.368 587.617 384.096 587.257 383.833 586.892 cv376.487 576.873 373.846 563.052 379.719 551.703 cv0.878432 0.0705883 0.0431373 0.00392157 cmykf395.21 550.23 mo390.387 557.169 390.651 566.458 394.411 573.798 cv395.042 575.029 395.752 576.222 396.543 577.359 cv397.266 578.394 398.069 579.626 399.026 580.458 cv399.375 580.841 399.739 581.214 400.108 581.582 cv400.204 581.677 400.297 581.769 400.395 581.863 cv400.754 582.212 401.121 582.556 401.5 582.89 cv401.514 582.902 401.53 582.918 401.544 582.929 cv401.548 582.933 401.551 582.935 401.555 582.939 cv401.973 583.306 402.407 583.66 402.846 584.007 cv402.944 584.082 403.041 584.16 403.139 584.236 cv403.581 584.574 404.03 584.906 404.49 585.222 cv404.503 585.232 404.516 585.242 404.529 585.252 cv404.732 585.392 404.939 585.523 405.145 585.658 cv405.243 585.722 405.338 585.791 405.437 585.851 cv405.766 586.062 406.1 586.267 406.438 586.464 cv406.485 586.494 406.534 586.519 406.58 586.546 cv406.872 586.714 407.166 586.88 407.464 587.041 cv407.567 587.099 407.674 587.15 407.778 587.205 cv407.984 587.312 408.188 587.421 408.397 587.525 cv408.429 587.541 408.461 587.554 408.492 587.568 cv408.916 587.777 409.346 587.978 409.782 588.169 cv409.876 588.21 409.973 588.248 410.067 588.287 cv410.418 588.435 410.77 588.58 411.126 588.716 cv411.277 588.773 411.428 588.828 411.58 588.882 cv411.901 589.002 412.225 589.111 412.551 589.22 cv412.698 589.267 412.844 589.316 412.991 589.361 cv413.454 589.505 413.913 589.687 414.396 589.767 cv439.294 593.892 445.043 574.722 445.043 574.722 cv439.861 582.185 429.827 585.746 419.12 582.966 cv418.643 582.841 418.174 582.705 417.708 582.558 cv417.567 582.515 417.426 582.468 417.285 582.421 cv416.954 582.314 416.626 582.201 416.299 582.082 cv416.149 582.027 416 581.972 415.852 581.916 cv415.495 581.779 415.141 581.636 414.792 581.488 cv414.696 581.447 414.598 581.41 414.504 581.367 cv414.067 581.175 413.633 580.974 413.206 580.763 cv412.987 580.656 412.77 580.542 412.555 580.431 cv412.43 580.367 412.303 580.302 412.18 580.238 cv411.901 580.087 411.627 579.931 411.354 579.773 cv411.29 579.736 411.223 579.701 411.159 579.662 cv410.821 579.464 410.489 579.261 410.161 579.052 cv410.059 578.988 409.96 578.918 409.858 578.851 cv409.641 578.71 409.425 578.568 409.213 578.423 cv408.753 578.107 408.307 577.775 407.868 577.439 cv407.765 577.359 407.664 577.281 407.563 577.201 cv402.874 573.502 399.159 568.445 397.391 562.71 cv395.54 556.763 395.94 550.087 399.147 544.669 cvf412.619 544.197 mo409.776 548.38 409.497 553.576 411.469 558.197 cv413.549 563.101 417.812 566.949 422.787 568.773 cv422.991 568.849 423.198 568.918 423.405 568.988 cv423.496 569.015 423.584 569.046 423.677 569.074 cv423.971 569.166 424.262 569.273 424.565 569.33 cv438.312 571.986 442.042 562.275 443.034 560.845 cv439.767 565.548 434.278 566.677 427.542 565.042 cv427.012 564.914 426.426 564.722 425.915 564.541 cv425.255 564.306 424.608 564.039 423.978 563.736 cv422.782 563.162 421.642 562.464 420.585 561.666 cv414.558 557.093 410.815 548.369 414.747 541.264 cvf567.456 625.679 mo563.493 634.705 li559.118 634.705 li559.476 626.503 li556.255 634.705 li552.019 634.705 li551.908 625.679 li552.376 623.451 li555.376 623.451 li554.797 632.365 li558.127 623.451 li562.31 623.451 li562.007 632.475 li565.31 623.451 li567.923 623.451 li567.456 625.679 lif574.363 628.349 mo574.749 626.587 574.638 626.257 573.73 626.257 cv572.354 626.257 li571.473 630.385 li570.124 634.705 li567.566 634.705 li569.657 624.909 li569.96 623.478 li572.299 623.478 li572.602 624.138 li572.602 624.138 573.951 623.34 575.27 623.34 cv578.078 623.34 577.858 625.458 577.252 628.349 cv574.363 628.349 lif582.672 622.046 mo581.545 622.046 580.83 621.716 581.104 620.341 cv581.407 618.964 582.288 618.634 583.387 618.634 cv584.49 618.634 585.232 618.964 584.929 620.341 cv584.654 621.689 583.774 622.046 582.672 622.046 cvcp581.462 634.705 mo578.929 634.705 li579.425 630.302 li580.306 626.23 li578.545 625.843 li579.041 623.451 li583.855 623.451 li581.462 634.705 lif592.442 625.843 mo589.278 626.23 li588.369 630.523 li588.121 631.706 588.121 632.036 589.168 632.036 cv589.745 632.036 591.286 632.036 591.286 632.036 cv590.845 634.292 li590.845 634.292 588.92 634.87 588.093 634.87 cv584.846 634.87 584.874 633.082 585.453 630.412 cv586.334 626.202 li584.572 625.818 li585.094 623.423 li586.939 623.423 li587.985 620.587 li590.489 620.587 li589.882 623.423 li592.964 623.423 li592.442 625.843 lif599.018 625.982 mo597.533 625.982 596.761 626.752 596.46 628.127 cv600.697 627.771 li600.889 626.835 600.697 625.982 599.018 625.982 cvcp596.047 630.164 mo595.853 631.541 596.376 632.007 598.137 632.007 cv602.567 632.007 li602.127 634.099 li602.127 634.099 599.458 634.841 597.477 634.841 cv592.551 634.841 592.496 632.064 593.129 629.091 cv593.762 626.173 594.89 623.287 599.65 623.287 cv604.247 623.287 604.467 626.064 603.338 630.164 cv596.047 630.164 lif613.436 634.705 mo610.906 634.705 li611.401 630.302 li613.19 621.937 li611.427 621.525 li611.951 619.129 li616.767 619.129 li613.436 634.705 lif622.574 625.982 mo621.086 625.982 620.317 626.752 620.013 628.127 cv624.252 627.771 li624.443 626.835 624.252 625.982 622.574 625.982 cvcp619.601 630.164 mo619.409 631.541 619.932 632.007 621.692 632.007 cv626.123 632.007 li625.682 634.099 li625.682 634.099 623.012 634.841 621.031 634.841 cv616.105 634.841 616.051 632.064 616.684 629.091 cv617.318 626.173 618.446 623.287 623.206 623.287 cv627.801 623.287 628.021 626.064 626.894 630.164 cv619.601 630.164 lif638.505 626.12 mo638.505 626.12 635.286 626.147 634.406 626.147 cv632.534 626.147 632.341 626.724 632.205 627.33 cv632.093 627.88 li638.038 628.321 li638.038 628.321 638.065 630.22 637.817 631.292 cv637.46 633.082 635.616 634.896 632.287 634.896 cv630.634 634.896 627.965 634.265 627.965 634.265 cv628.433 632.09 li628.433 632.09 631.654 632.09 632.534 632.09 cv634.35 632.09 634.598 631.595 634.71 631.101 cv634.846 630.385 li629.012 629.945 li629.012 629.945 628.792 628.486 629.094 627.028 cv629.536 625.046 631.35 623.34 634.68 623.34 cv636.332 623.34 639 623.945 639 623.945 cv638.505 626.12 lif649.567 626.12 mo649.567 626.12 646.348 626.147 645.467 626.147 cv643.596 626.147 643.404 626.724 643.266 627.33 cv643.155 627.88 li649.1 628.321 li649.1 628.321 649.127 630.22 648.879 631.292 cv648.522 633.082 646.678 634.896 643.348 634.896 cv641.698 634.896 639.028 634.265 639.028 634.265 cv639.496 632.09 li639.496 632.09 642.715 632.09 643.596 632.09 cv645.412 632.09 645.66 631.595 645.771 631.101 cv645.908 630.385 li640.074 629.945 li640.074 629.945 639.854 628.486 640.156 627.028 cv640.597 625.046 642.412 623.34 645.743 623.34 cv647.393 623.34 650.062 623.945 650.062 623.945 cv649.567 626.12 lif653.035 636.494 mo650.834 636.494 li650.916 634.841 li650.118 634.788 649.706 634.21 649.898 633.246 cv650.201 631.871 651.054 631.541 652.182 631.541 cv653.283 631.541 654.024 631.871 653.723 633.246 cv653.035 636.494 lif667.755 626.23 mo666.105 626.23 665.528 627.22 665.142 629.037 cv664.756 630.853 664.867 631.925 666.517 631.925 cv668.801 631.925 li670.068 626.23 li667.755 626.23 licp671.526 633.246 mo671.222 634.705 li668.913 634.677 li668.582 633.961 li668.582 633.961 666.544 634.841 665.17 634.841 cv661.647 634.841 661.482 631.953 662.115 629.037 cv662.748 626.064 664.124 623.257 667.619 623.257 cv668.885 623.257 670.59 623.89 670.59 623.89 cv671.994 619.129 li674.526 619.129 li671.526 633.246 lif680.634 626.12 mo678.489 626.12 677.799 627.33 677.415 629.091 cv677.057 630.879 677.223 632.09 679.34 632.09 cv681.542 632.09 682.204 630.908 682.587 629.091 cv682.974 627.384 682.863 626.12 680.634 626.12 cvcp678.764 634.87 mo674.223 634.87 673.865 632.036 674.47 629.091 cv675.104 626.147 676.7 623.34 681.241 623.34 cv685.752 623.34 686.166 626.147 685.532 629.091 cv684.9 632.09 683.303 634.87 678.764 634.87 cvf704.519 634.705 mo705.015 630.357 li705.262 629.119 li705.621 627.468 705.84 626.257 704.106 626.257 cv702.758 626.257 li702.814 627.11 702.648 628.073 702.428 629.091 cv701.246 634.705 li698.686 634.705 li699.181 630.357 li699.428 629.119 li699.787 627.468 700.005 626.257 698.274 626.257 cv697.172 626.257 li695.356 634.705 li692.411 634.705 li694.805 623.451 li697.117 623.451 li697.474 624.138 li697.474 624.138 699.044 623.312 700.309 623.312 cv701.272 623.312 701.988 623.753 702.236 624.302 cv702.786 624 704.355 623.312 705.484 623.312 cv709.003 623.312 708.895 626.173 708.261 629.091 cv707.079 634.705 li704.519 634.705 lif716.214 626.12 mo714.067 626.12 713.379 627.33 712.995 629.091 cv712.637 630.879 712.803 632.09 714.92 632.09 cv717.122 632.09 717.784 630.908 718.168 629.091 cv718.553 627.384 718.443 626.12 716.214 626.12 cvcp714.343 634.87 mo709.801 634.87 709.445 632.036 710.05 629.091 cv710.683 626.147 712.279 623.34 716.82 623.34 cv721.334 623.34 721.746 626.147 721.112 629.091 cv720.48 632.09 718.883 634.87 714.343 634.87 cvf728.762 628.349 mo729.147 626.587 729.038 626.257 728.13 626.257 cv726.753 626.257 li725.873 630.385 li724.524 634.705 li721.965 634.705 li724.056 624.909 li724.36 623.478 li726.699 623.478 li727 624.138 li727 624.138 728.349 623.34 729.671 623.34 cv732.477 623.34 732.256 625.458 731.651 628.349 cv728.762 628.349 lif738.614 625.982 mo737.129 625.982 736.358 626.752 736.056 628.127 cv740.292 627.771 li740.486 626.835 740.292 625.982 738.614 625.982 cvcp735.642 630.164 mo735.451 631.541 735.972 632.007 737.733 632.007 cv742.164 632.007 li741.724 634.099 li741.724 634.099 739.054 634.841 737.074 634.841 cv732.148 634.841 732.093 632.064 732.724 629.091 cv733.358 626.173 734.487 623.287 739.247 623.287 cv743.841 623.287 744.063 626.064 742.934 630.164 cv735.642 630.164 lif745.411 634.87 mo744.254 634.87 743.541 634.541 743.843 633.192 cv744.117 631.814 744.97 631.485 746.127 631.485 cv747.2 631.485 747.942 631.814 747.668 633.192 cv747.364 634.512 746.485 634.87 745.411 634.87 cvf29.9981 596.803 mo0 596.803 li0 566.805 li29.9981 566.805 li29.9981 596.803 lif68.2217 596.803 mo38.2232 596.803 li38.2232 566.805 li68.2217 566.805 li68.2217 596.803 li0.847059 0.619608 0.458824 0.568628 cmykf108.716 596.803 mo78.7173 596.803 li78.7173 566.805 li108.716 566.805 li108.716 596.803 li0 0 0 0 cmykf1 lw0 lc0 lj4 ml[] 0 dshtrue sadj108.716 596.803 mo78.7173 596.803 li78.7173 566.805 li108.716 566.805 li108.716 596.803 licp0 0 0 1 cmyk@2310.78 686.433 mo1788.9 686.433 li1788.9 495.455 li2310.78 495.455 li2310.78 686.433 li0.666667 0.525491 0.537255 0.611765 cmykf2039.13 570.832 mo2039.13 570.832 2039.13 570.832 2039.13 570.829 cv2036.45 580.332 li2039.13 570.832 li0 0 0 0 cmykf2052.92 591.465 mo2049.96 591.448 li2052.92 591.465 li0.666667 0.525491 0.537255 0.611765 cmykf2052.16 605.659 mo2052.16 605.659 li2034.46 605.723 li2052.16 605.659 lif2055.87 591.483 mo2052.92 591.465 li2055.87 591.483 lif2053.72 604.452 mo2056.8 592.69 li2053.72 604.454 li2053.72 604.452 lif2118.9 550.288 mo2113.15 577.295 li2118.9 550.288 li0 0 0 0 cmykf2104.13 550.288 mo2099.77 570.464 li2104.13 550.286 li2104.13 550.288 lif2117.92 549.073 mo2105.63 549.073 li2104.95 549.073 2104.27 549.62 2104.13 550.286 cv2099.77 570.464 li2095.4 590.641 li2095.26 591.307 2094.58 591.852 2093.9 591.852 cv2086.45 591.852 li2085.21 591.852 li2076.6 591.852 2077.6 585.903 2079.36 577.752 cv2079.38 577.669 2079.4 577.589 2079.41 577.505 cv2079.61 576.477 li2079.62 576.411 2079.63 576.344 2079.64 576.284 cv2080.04 574.192 li2080.46 571.95 li2080.58 571.274 2080.78 570.286 2080.91 569.665 cv2082.89 559.977 li2084.87 550.29 li2085.01 549.622 2084.56 549.073 2083.88 549.073 cv2071.27 549.073 li2070.59 549.073 2069.92 549.622 2069.78 550.288 cv2067.06 563.151 li2064.35 576.012 li2064.35 576.018 2064.35 576.026 2064.35 576.032 cv2064.1 577.227 li2060.97 591.485 2061.8 605.081 2078.78 605.506 cv2079.05 605.514 2079.27 605.516 2079.27 605.516 cv2105.91 605.516 li2106.59 605.516 2107.27 604.969 2107.41 604.301 cv2113.15 577.296 li2118.9 550.288 li2119.04 549.62 2118.6 549.073 2117.92 549.073 cvf2166.92 591.993 mo2167.6 591.993 2168.05 592.54 2167.91 593.208 cv2166.72 599.038 li0.666667 0.525491 0.537255 0.611765 cmykf2165.53 604.872 mo2166.72 599.038 li2165.53 604.874 li2165.53 604.872 2165.53 604.872 2165.53 604.872 cvf2164.04 606.098 mo2164.04 606.096 li2160.43 606.126 2149.56 606.208 2141.4 606.208 cv2151.34 606.208 2164.04 606.098 2164.04 606.098 cvf2134.06 584.483 mo2134.05 583.844 2134.78 582.746 2135.46 582.746 cv2133.93 582.719 li2133.24 589.672 2134.06 584.483 2134.06 584.483 cv0 0 0 0 cmykf2142.51 606.206 mo2142.43 606.206 2142.35 606.206 2142.28 606.208 cv2142.35 606.206 2142.43 606.206 2142.51 606.206 cv0.666667 0.525491 0.537255 0.611765 cmykf2166.92 591.993 mo2167.6 591.993 2168.05 592.54 2167.91 593.208 cv2166.72 599.038 li2166.53 599.989 lif2148.33 606.192 mo2148.28 606.192 li2148.33 606.192 lif2145.31 606.202 mo2145.14 606.202 li2145.31 606.202 lif2144.39 606.204 mo2144.3 606.204 2144.2 606.204 2144.11 606.206 cv2144.2 606.204 2144.3 606.204 2144.39 606.204 cvf2143.46 606.206 mo2143.2 606.206 li2143.46 606.206 lif2145.14 606.202 mo2144.89 606.202 2144.64 606.204 2144.39 606.204 cv2144.64 606.204 2144.89 606.202 2145.14 606.202 cvf2148.28 606.192 mo2147.28 606.196 2146.29 606.2 2145.31 606.202 cv2146.29 606.2 2147.29 606.196 2148.28 606.192 cvf2164.04 606.096 mo2164.04 606.096 li2161.39 606.118 2154.85 606.166 2148.33 606.192 cv2154.85 606.168 2161.39 606.118 2164.04 606.096 cvf2165.53 604.874 mo2166.53 599.989 li2165.53 604.877 li2165.53 604.876 2165.53 604.876 2165.53 604.874 cvf2144.11 606.206 mo2143.46 606.206 li2144.11 606.206 lif2142.28 606.208 mo2141.4 606.208 li2142.28 606.208 lif2143.2 606.206 mo2142.51 606.206 li2143.2 606.206 lif1963.49 584.629 mo1965.4 576.17 li1963.22 585.84 li1961.13 595.69 li1962.96 587.055 li1963.1 586.387 1963.34 585.295 1963.49 584.629 cv0 0 0 0 cmykf1986.34 548.93 mo1972.85 548.93 li1972.17 548.93 1971.48 549.475 1971.33 550.139 cv1970.05 555.786 li1968.78 561.434 li1968.62 562.098 1969.06 562.643 1969.74 562.643 cv1983.34 562.643 li1984.02 562.643 1984.7 562.098 1984.84 561.432 cv1986.08 555.786 li1987.32 550.143 li1987.32 550.141 li1987.46 549.475 1987.02 548.93 1986.34 548.93 cvf1983.4 567.713 mo1983.4 567.711 li1979.45 586.019 li1983.4 567.713 lif1944.21 628.368 mo1944.21 628.368 1951.01 628.456 1955.33 628.456 cv1952.05 628.456 1946.62 628.395 1944.2 628.366 cv1944.21 628.366 1944.21 628.368 1944.21 628.368 cv0.666667 0.525491 0.537255 0.611765 cmykf1967.31 567.711 mo1965.4 576.17 li1967.31 567.711 li0 0 0 0 cmykf1982.42 566.5 mo1968.83 566.5 li1968.15 566.5 1967.46 567.045 1967.31 567.711 cv1965.4 576.17 li1963.49 584.629 li1963.34 585.295 1963.11 586.388 1962.96 587.055 cv1961.13 595.69 li1959.29 604.325 li1959.15 604.991 1958.86 606.067 1958.64 606.713 cv1958.64 606.713 1956.1 614.272 1951.83 614.186 cv1951.65 614.182 1951.47 614.18 1951.3 614.176 cv1949.23 614.137 1947.6 614.108 1947.6 614.108 cv1947.6 614.108 li1946.92 614.098 1946.23 614.629 1946.07 615.292 cv1944.66 621.219 li1943.26 627.145 li1943.1 627.807 1943.52 628.354 1944.2 628.366 cv1946.62 628.395 1952.05 628.456 1955.33 628.456 cv1966 628.456 1971.62 622.545 1975.23 605.538 cv1979.45 586.019 li1983.4 567.711 li1983.55 567.045 1983.11 566.5 1982.42 566.5 cvf2175.59 605.516 mo2174.91 605.516 2174.46 604.969 2174.61 604.301 cv2184.84 556.39 lif2189.8 604.299 mo2193.94 583.85 li2189.8 604.299 lif2174.76 604.909 mo2174.67 604.575 2174.72 603.756 2174.87 603.088 cv2179.72 580.346 li2174.61 604.301 li2174.46 604.969 2174.91 605.516 2175.59 605.516 cv2176.83 605.516 li2176.15 605.516 2174.84 605.243 2174.76 604.909 cvf2188.99 605.243 mo2188.62 605.393 2187.76 605.516 2187.08 605.516 cv2188.32 605.516 li2189 605.516 2189.67 604.969 2189.81 604.299 cv2190.05 603.084 li2189.92 603.752 2189.37 605.092 2188.99 605.243 cv0.666667 0.525491 0.537255 0.611765 cmykf2191.87 594.075 mo2193.7 585.049 li2193.7 585.055 2193.7 585.064 2193.7 585.068 cv2191.87 594.075 li0 0 0 0 cmykf2232.23 559.598 mo2232.8 561.926 li2232.95 562.592 2232.52 563.133 2231.84 563.135 cvf2190.05 603.084 mo2191.87 594.075 li2190.05 603.084 li0.666667 0.525491 0.537255 0.611765 cmykf2231.67 557.213 mo2231.67 557.213 li2232.23 559.599 li2231.67 557.213 li0 0 0 0 cmykf2193.7 585.049 mo2193.83 584.381 2194.06 583.299 2194.2 582.637 cv2196.15 573.5 li2193.94 583.85 li2193.7 585.049 lif2185 555.604 mo2184.87 556.25 2184.69 557.063 2184.58 557.602 cv2179.72 580.346 li2184.84 556.389 li2185 555.604 lif2232.8 561.926 mo2232.23 559.598 li2231.67 557.213 li2231.39 556.006 li2230.29 551.715 2227.04 549.239 2220.01 549.239 cv2209.04 549.228 li2198.95 549.215 li2198.09 549.215 li2187.59 549.215 li2186.91 549.215 2186.24 549.76 2186.1 550.428 cv2186.1 550.428 li2185.59 552.801 li2185 555.605 li2184.84 556.389 li2179.72 580.346 li2174.87 603.088 li2174.72 603.756 2174.67 604.575 2174.76 604.909 cv2174.84 605.243 2176.15 605.516 2176.83 605.516 cv2187.08 605.516 li2187.76 605.516 2188.62 605.393 2188.99 605.243 cv2189.37 605.093 2189.92 603.752 2190.05 603.084 cv2191.87 594.075 li2193.7 585.068 li2193.7 585.064 2193.7 585.055 2193.7 585.049 cv2193.94 583.851 li2196.15 573.5 li2198.1 564.361 li2198.25 563.697 2198.92 563.154 2199.6 563.152 cv2231.84 563.135 li2232.52 563.133 2232.95 562.592 2232.8 561.926 cvf2274.3 540.876 mo2273.61 540.88 2272.5 540.884 2271.81 540.884 cv2261.49 540.884 li2260.81 540.884 2259.94 541.346 2259.55 541.909 cv2236.73 575.338 li2236.35 575.903 2235.91 575.819 2235.76 575.156 cv2234.08 567.791 li2233.93 567.124 2233.24 566.582 2232.56 566.582 cv2217.89 566.582 li2217.21 566.582 2216.8 567.117 2216.99 567.772 cv2223.56 590.799 li2223.75 591.456 2223.77 592.534 2223.6 593.194 cv2220.73 604.338 li2220.56 605 2220.98 605.542 2221.66 605.542 cv2236.16 605.542 li2236.84 605.542 2237.54 605 2237.71 604.338 cv2240.58 593.194 li2240.75 592.534 2241.22 591.545 2241.63 591 cv2278.68 541.834 li2279.09 541.289 2278.87 540.846 2278.18 540.85 cv2274.3 540.876 lif2157.76 569.715 mo2157.75 569.702 li2157.67 570.443 2156.99 570.986 2156.3 570.986 cv2137.71 570.986 li2137.06 570.986 2136.74 570.547 2136.83 570.008 cv2136.84 569.993 2136.84 569.98 2136.85 569.965 cv2136.85 569.965 2136.84 569.967 2136.84 569.971 cv2136.84 569.95 2136.84 569.93 2136.85 569.909 cv2136.85 569.909 2136.88 569.779 2136.93 569.592 cv2138.71 564.87 2142.33 561.771 2149.13 561.771 cv2156.78 561.771 2158.28 565.51 2157.76 569.715 cv2152.3 548.249 mo2128.43 548.249 2122.77 562.739 2119.6 577.364 cv2116.42 592.27 2116.7 606.208 2141.4 606.208 cv2142.28 606.208 li2142.35 606.206 2142.43 606.206 2142.51 606.206 cv2143.2 606.206 li2143.46 606.206 li2144.11 606.206 li2144.2 606.204 2144.3 606.204 2144.39 606.204 cv2144.64 606.204 2144.89 606.202 2145.14 606.202 cv2145.31 606.202 li2146.29 606.2 2147.28 606.196 2148.28 606.192 cv2148.33 606.192 li2154.85 606.166 2161.39 606.118 2164.04 606.096 cv2164.72 606.086 2165.39 605.54 2165.53 604.877 cv2166.53 599.989 li2166.72 599.038 li2167.91 593.208 li2168.05 592.54 2167.6 591.993 2166.92 591.993 cv2144.71 591.993 li2135.88 591.993 2133.26 589.645 2134.22 582.745 cv2169.72 582.745 li2169.72 582.749 li2169.73 582.749 2169.74 582.745 2169.75 582.745 cv2170.31 582.736 2170.83 582.346 2171.04 581.829 cv2171.08 581.73 2171.11 581.626 2171.13 581.519 cv2171.12 581.523 li2176.39 561.639 2174.88 548.249 2152.3 548.249 cvf2039.46 569.639 mo2039.13 570.829 li2039.13 570.832 2039.13 570.832 2039.13 570.832 cv2036.45 580.332 li2033.77 589.831 li2033.58 590.487 2032.87 591.024 2032.19 591.024 cv2018 591.024 li2007.24 591.024 2004.62 582.606 2007.24 570.19 cv2009.86 557.492 2014.99 549.596 2025.59 548.797 cv2040.06 547.706 2042.96 557.887 2039.46 569.639 cv2049.19 590.294 mo2049.19 590.294 2055.88 574.051 2057.4 564.668 cv2059.47 552.111 2053.19 533.895 2028.9 533.895 cv2004.75 533.895 1994.26 551.286 1990.26 570.19 cv1986.26 589.231 1991.5 605.93 2015.52 605.794 cv2034.46 605.722 li2052.16 605.659 li2052.85 605.653 2053.54 605.112 2053.72 604.454 cv2056.8 592.69 li2056.97 592.03 2056.56 591.487 2055.87 591.483 cv2052.92 591.465 li2049.96 591.448 li2049.38 591.444 2049.05 591.069 2049.12 590.571 cv2049.13 590.481 2049.15 590.389 2049.19 590.294 cvf2168.74 579.422 mo2168.74 579.872 2168.38 580.237 2167.93 580.237 cv2167.48 580.237 2167.11 579.872 2167.11 579.422 cv2167.11 578.973 2167.48 578.61 2167.93 578.61 cv2168.38 578.61 2168.74 578.973 2168.74 579.422 cvf1831.32 555.315 mo1831.32 584.75 li1831.32 606.425 1849.09 623.996 1871.03 623.996 cv1880.95 623.996 li1902.88 623.996 1920.66 606.425 1920.66 584.75 cv1920.66 555.315 li1920.66 549.895 1916.22 545.502 1910.73 545.502 cv1841.24 545.502 li1835.76 545.502 1831.32 549.895 1831.32 555.315 cv0.0196079 0.345099 0.862746 0 cmykef1846.21 579.844 mo1846.21 596.1 1859.54 609.28 1875.99 609.28 cv1892.44 609.28 1905.77 596.1 1905.77 579.844 cv1890.88 579.844 li1890.88 587.971 1884.21 594.562 1875.99 594.562 cv1867.77 594.562 1861.1 587.971 1861.1 579.844 cv1861.1 565.126 li1846.21 565.126 li1846.21 579.844 li0 0 0 0 cmykef1894.6 557.032 mo1891.13 571.259 li1905.52 574.937 li1909.25 560.71 li1894.6 557.032 lief2102.32 635.576 mo2099.97 635.576 li2099.63 634.904 li2099.63 634.904 2097.73 635.715 2096.44 635.715 cv2092.83 635.715 2092.94 632.776 2093.58 629.835 cv2094.79 624.124 li2097.48 624.124 li2096.95 628.547 li2096.69 629.892 li2096.33 631.572 2096.11 632.803 2097.87 632.803 cv2099.89 632.803 li2101.76 624.124 li2104.76 624.124 li2102.32 635.576 li0.0196079 0.345099 0.862746 0 cmykf2115.54 626.839 mo2115.54 626.839 2112.26 626.868 2111.37 626.868 cv2109.46 626.868 2109.26 627.456 2109.13 628.072 cv2109.01 628.631 li2115.06 629.08 li2115.06 629.08 2115.09 631.011 2114.84 632.104 cv2114.47 633.923 2112.6 635.772 2109.21 635.772 cv2107.53 635.772 2104.81 635.127 2104.81 635.127 cv2105.29 632.916 li2105.29 632.916 2108.56 632.916 2109.46 632.916 cv2111.31 632.916 2111.56 632.412 2111.67 631.908 cv2111.81 631.18 li2105.88 630.732 li2105.88 630.732 2105.65 629.248 2105.96 627.764 cv2106.41 625.748 2108.26 624.012 2111.64 624.012 cv2113.33 624.012 2116.04 624.627 2116.04 624.627 cv2115.54 626.839 lif2122.87 626.7 mo2121.36 626.7 2120.58 627.484 2120.27 628.883 cv2124.58 628.52 li2124.78 627.568 2124.58 626.7 2122.87 626.7 cvcp2119.85 630.956 mo2119.65 632.356 2120.19 632.832 2121.98 632.832 cv2126.48 632.832 li2126.04 634.96 li2126.04 634.96 2123.32 635.715 2121.3 635.715 cv2116.29 635.715 2116.24 632.888 2116.88 629.864 cv2117.52 626.896 2118.67 623.956 2123.52 623.956 cv2128.19 623.956 2128.42 626.784 2127.27 630.956 cv2119.85 630.956 lif2135.28 629.108 mo2135.67 627.316 2135.56 626.98 2134.63 626.98 cv2133.23 626.98 li2132.34 631.18 li2130.96 635.576 li2128.36 635.576 li2130.49 625.608 li2130.8 624.152 li2133.18 624.152 li2133.48 624.824 li2133.48 624.824 2134.86 624.012 2136.2 624.012 cv2139.06 624.012 2138.83 626.168 2138.22 629.108 cv2135.28 629.108 lif2149.84 622.696 mo2148.69 622.696 2147.96 622.36 2148.24 620.96 cv2148.55 619.56 2149.45 619.224 2150.56 619.224 cv2151.69 619.224 2152.44 619.56 2152.13 620.96 cv2151.85 622.332 2150.96 622.696 2149.84 622.696 cvcp2148.61 635.576 mo2146.03 635.576 li2146.53 631.095 li2147.43 626.952 li2145.64 626.56 li2146.14 624.124 li2151.04 624.124 li2148.61 635.576 lif2160.95 635.576 mo2158.26 635.576 li2158.77 631.152 li2159.05 629.892 li2159.41 628.211 2159.61 626.98 2157.84 626.98 cv2155.83 626.98 li2153.98 635.576 li2150.98 635.576 li2153.42 624.124 li2155.77 624.124 li2156.14 624.795 li2156.14 624.795 2158.01 623.984 2159.3 623.984 cv2162.88 623.984 2162.8 626.896 2162.16 629.864 cv2160.95 635.576 lif2171.81 626.56 mo2168.59 626.952 li2167.67 631.32 li2167.42 632.524 2167.42 632.86 2168.48 632.86 cv2169.07 632.86 2170.64 632.86 2170.64 632.86 cv2170.19 635.156 li2170.19 635.156 2168.23 635.744 2167.39 635.744 cv2164.09 635.744 2164.11 633.923 2164.7 631.208 cv2165.6 626.923 li2163.8 626.532 li2164.34 624.096 li2166.21 624.096 li2167.28 621.211 li2169.83 621.211 li2169.21 624.096 li2172.35 624.096 li2171.81 626.56 lif2178.51 626.7 mo2176.99 626.7 2176.21 627.484 2175.9 628.883 cv2180.21 628.52 li2180.41 627.568 2180.21 626.7 2178.51 626.7 cvcp2175.48 630.956 mo2175.29 632.356 2175.82 632.832 2177.61 632.832 cv2182.12 632.832 li2181.67 634.96 li2181.67 634.96 2178.95 635.715 2176.94 635.715 cv2171.93 635.715 2171.87 632.888 2172.51 629.864 cv2173.16 626.896 2174.3 623.956 2179.15 623.956 cv2183.83 623.956 2184.05 626.784 2182.9 630.956 cv2175.48 630.956 lif2190.91 629.108 mo2191.3 627.316 2191.19 626.98 2190.26 626.98 cv2188.87 626.98 li2187.97 631.18 li2186.6 635.576 li2183.99 635.576 li2186.12 625.608 li2186.43 624.152 li2188.81 624.152 li2189.12 624.824 li2189.12 624.824 2190.49 624.012 2191.83 624.012 cv2194.69 624.012 2194.46 626.168 2193.85 629.108 cv2190.91 629.108 lif2204.29 622.388 mo2204.29 622.388 2202.72 622.388 2202.14 622.388 cv2200.99 622.388 2200.9 623.116 2200.68 624.152 cv2203.59 624.152 li2203.09 626.587 li2200.01 627.007 li2198.16 635.631 li2196.76 640.084 li2194.21 640.084 li2195.17 635.604 li2197.01 626.98 li2195.22 626.587 li2195.72 624.152 li2197.6 624.152 li2198.19 621.492 2199.09 619.364 2202.3 619.364 cv2203.14 619.364 2204.8 620.064 2204.8 620.064 cv2204.29 622.388 lif2209.36 626.923 mo2207.68 626.923 2207.09 628.016 2206.7 629.864 cv2206.31 631.74 2206.45 632.748 2208.13 632.748 cv2210.48 632.748 li2211.69 626.923 li2209.36 626.923 licp2214.4 628.547 mo2212.92 635.576 li2210.59 635.576 li2210.23 634.792 li2210.23 634.792 2208.21 635.715 2206.73 635.715 cv2203.17 635.715 2202.98 632.888 2203.62 629.864 cv2204.24 626.896 2205.66 623.956 2209.25 623.956 cv2211.57 623.956 2215.24 624.6 2215.24 624.6 cv2214.4 628.547 lif2225.85 626.896 mo2222.41 626.896 li2220.67 626.896 2219.64 628.127 2219.24 629.892 cv2218.88 631.627 2219.44 632.832 2221.23 632.832 cv2224.82 632.832 li2224.34 635.072 li2224.34 635.072 2221.82 635.744 2219.89 635.744 cv2216.33 635.744 2215.52 632.888 2216.16 629.892 cv2216.81 626.868 2218.82 623.956 2222.3 623.956 cv2224 623.956 2226.38 624.572 2226.38 624.572 cv2225.85 626.896 lif2232.7 626.7 mo2231.19 626.7 2230.41 627.484 2230.1 628.883 cv2234.41 628.52 li2234.61 627.568 2234.41 626.7 2232.7 626.7 cvcp2229.68 630.956 mo2229.48 632.356 2230.02 632.832 2231.81 632.832 cv2236.32 632.832 li2235.87 634.96 li2235.87 634.96 2233.15 635.715 2231.13 635.715 cv2226.12 635.715 2226.07 632.888 2226.71 629.864 cv2227.36 626.896 2228.5 623.956 2233.35 623.956 cv2238.02 623.956 2238.25 626.784 2237.1 630.956 cv2229.68 630.956 lif1494.15 595.161 mo1464.15 595.161 li1464.15 565.163 li1494.15 565.163 li1494.15 595.161 lif1532.37 595.161 mo1502.38 595.161 li1502.38 565.163 li1532.37 565.163 li1532.37 595.161 li0.666667 0.525491 0.537255 0.611765 cmykf1572.87 595.161 mo1542.87 595.161 li1542.87 565.163 li1572.87 565.163 li1572.87 595.161 li0 0 0 0 cmykf1572.87 595.161 mo1542.87 595.161 li1542.87 565.163 li1572.87 565.163 li1572.87 595.161 licp0 0 0 1 cmyk@%ADOBeginClientInjection: EndPageContent "AI11EPS"userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse%ADOEndClientInjection: EndPageContent "AI11EPS"% page clipgrestoregrestore % PSGStateAdobe_AGM_Core/AGMCORE_save get restore%%PageTrailer[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5Adobe_AGM_Image/page_trailer get execAdobe_CoolType_Core/page_trailer get execAdobe_AGM_Core/page_trailer get execcurrentdict Adobe_AGM_Utils eq {end} if%%TrailerAdobe_AGM_Image/doc_trailer get execAdobe_CoolType_Core/doc_trailer get execAdobe_AGM_Core/doc_trailer get exec%%EOF%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 11.0%%AI8_CreatorVersion: 11.0.0%%For: (Scott Jehl) (ScottJehl.com)%%Title: (jquery_logos.eps)%%CreationDate: 9/1/08 12:36 PM%AI9_DataStream%Gb!R&LI*c0[K(V\J9Se\M@**3=K-J_h@!%H&Wj<mrm0'N[8LT@QsjS<ce8'hruXi[PH:jeSua1QbI%,jC;'G7C&KCo'qu#Zd%caT%MGYN0Ms]'@CYdAV>#LJ/%BBe,?'eMg2qP)%^MD)#Z.#`&]%q2'dHYgPdHj)oB(WV*%So^E]3:uWqKFdF-rmu*Z1Pd,;Q)NhKi[BK%e;NT`!R'O?o'03khLX;KDd'g2X>Ke(=qP)D<VO8eE>K_\0BDS[>-A/r6B<;jP<HWAF92Mo-V[a1iKpVp3rBUi&O-HTLb9Fk-^U_Y%q.T1?.S4)9N*aJsN>39]r[11%*mSQiokps3lIB+`V`9CnZM**lP^53=(Ko+JC/d)kr3ZK92.;TB<l,QFn@pSHpl@VGnQ,Ng^%Un/%+KJCYp0-8_MMP`T6;a$9oIfG/"$"[rGhnTtl$:$@lWc=54W$1.1?iSpX_Ot(OMTd*1eNQE4skj\7k7i13q'Htb]^&7a$HSsL;4k$%oY6GZs3s)8escDTg9*:d>Ls#3KW5,h9u*VS^kg*>J7SG3MNXi*9hCD'#3esF.[&=H(,4[N3GaZKU''tE0Vt\<qKooD@PI(#]:F8u%Sn;8c)YAXj->>I=RJ\.\(P^f4eX?nqrT3UFs'9N.lA-P(Laka@J1`W3a3@kg=%Ymr?'D"0[JrWNs7DDq"Se*jr7!S$1emnlApGg8%(I.Gh/E9Z3VG@R'I%.jHBin$Wn=-:`/PX,dRT:j+2GFkNQmUB=i<S6u9rqop=:>/G:TTi+@]aG^hoo^&8N)KL$3bf\-tjO5>q"Y&%6@lj<+f=a,G\E01.DEorbAnk_T3)KAKV)?Sa2CJ?TAbUq'C4S4n.Wje0gX^91#XL/_\(iT[RBXR>K.96-]T-q@k!EEqkVl?rF7E!%(Ofha635:)r#k&7`tXFG9DD*9Ua)ea;qNO8[!.1ncOm?HJ$9]K%mR<F3eMP(oGO2Sr/J+'I!gYt<p7.T55`?;3'',#pdlXL')][O%3'R89ZUh'Kig'4u4`VH+a>s4g3MZ(@XCEi>2i\\8EXFrr:>qrGd[']Vd2MofleptdA`DqCD)uG.'ZZ!$=GtTdNfW1Q^5JUc#=fSe%EQ[FV6SV)XT[_5#R*uD?2M@Su$DdpO(OSt,hC3O\la1#V2h[^I#Tk">*Gb3%C$YD>qOIO]a=1b"C8Q&IEC3qYO<7*02Rh.Z+u.BF%2J7"lfsFPSS(#&FJ,$HH6_)Wm=lrhpk5cacR)HINCiEK:]Y%V*/q$Y4"nI;\WDjSbO!N+#p2Bf&..k.MS,PfbW_,qNht0Fjl$*"`%r@n`Wh(X*2#5^uiknEqQrQ/U6GPa>tM8XEp>%7N/5P[G?DZ?RuK(VLm3R/XodWq\Hq)A-h`[<3<74mRg^h;A_FB(pPKq+gr2lr-"%oNWOeVsuDkTr%Bc,UVdN"td7_d5k*q'/dB1J*T*pP4Z,T8udPmdiJnX47*uZ(35RM]os*5r#9FMP+JGNiS0NUhs`46(#R'HnMgE,%0^(Oj2e`H8V,5gKD[JN'Xlnp&pdmqK7ZC76B=%gjKn#be%?:noL(+B+#MZ,J'GoCKD$B/Aq`sAM%>:'X!?bA+h\7hr60G#Iho>,4%FBFTa:saG;fHP/K9?@V'6kOoIaRMtrG=$lRq):3a3B:T9dH;5,p2!W3,&Gj)S=&I#ABaZn-Y2^`B[cK0SOZ:f"B$!3+gWg`l&8Oj%5#DXh:N?W'!\U+N@+1/dd'lRg3<gdihFnT.OZ)mF.c\/R>aQ3Ipdo^]bW"J]PWe94!WSSWYJ=e$;B:H5kF:H5nW,OQUp[R?E#LPI%m*?er#e_EVi(W=14Jem+_'mAiQjV2!;IR"q2<bCN%Hq*A$LeR6TigA4880/M.1hA)3p6,8>b@>i2D#jT^nCfT"jR;42f]hP"d2WT%>XJ7;F!^HOTX5gBa9Xt'c4(a@]PiZL_?gG0#E)ak<QZ5QNaN!0Li8sQj?-"BUO7So`4l9kU`TepR2$$g#S^7H%),FZOpoJdUh9`0%Nh=$o6^9P9Xc^Bf.8WE`;D,>[F.>&SdRh1Z!RM&MNADmo.Db8u:c(KWLi&AAL8(P:Mg84XP-Lf7i"CXf4MtpjNOgQgE1V.MVR"2.%M9QR:qMVg'Z\B0K$Bb@C[um,1Ee^1prC0MGP@]Wj!rL$q%e5UrJ_s9ZJMu-IScfcSl+hKJ"Ek`iK$o3j*do*t+.7&%%lSHnpW%D$%p.6PlP`[?7A$c`.M@Nl>BiW*$P/(W0PKsI5mek>o**]=^,@mma%+#9*ph(;>>V1Jb0tCQ<o/LWf&\/r.(sGPaV+]5T8hf=?'kgH0%g=HXkYW_?BNfWI:>PHTb#_NDi:WL9)6g[-T&[5%B\h*bXWI1FDG>J[p[YZSE:j`:k,-b_f^l'E1_<IDq9mS[Z+8)_"/a*P,3E/Ig%I>2i=7o%5U7cg_?7N!q4a1RLt$37&&@+o#<ej1.hdXr>"]MmN.Qirh1nqCQR`goDc$EC7*ma%>X;i7n):+K.g:`Vj4KPD6W]uA"9%W#%/qO:5;^>lKj'1JtTuS/@c##J!^R!;97c&.7L,&='65;TY,GZW,+EW!9f[k!T,363_@,4DGRsD"\6q.i@Xs2cBITMRij0C"+Wn%*6Mr%doGH@<R=aIV53AQ2ACcV#B4S&+NAs\*<pt>b9hg^&,qnP-0+n^M@D&ep^!Gj$ASFr-T3r\](*N5Haje^GF)"3KF@>iZ0!C4%KDfk#/J=!'RoPDMdD)uhD[[q8Gr2SSBf0)_oU5A2H#cdJp"M>$7_ZX-[%MTUM8?U@$$g!m'H;IF[+f<fg\]7)<b*XbD3\na,"C$B%c-n$;nIa#fqV@4rAZO@;7gCQK8$j"Yf]bD3O6m&7HFIfO1f<#\;PR*=n!)NJonluF0$gYK]\X[`@A-Q`eEf*7=6oV52_QW`Q#9D.%5-c)NH"244s*U/;NI(?RDV.fqs6W;g0N!g5ZeDgUTjMZPNp?Z(L#X,qe_XK#Do^@jdX:Xn[774a5bh=WC0%)gV,#dG=bQ4FhQ-cZ%0)G6Ic(=.MG8h>WU)+oJ2AVA'U`9Hkj5c7h_N/]X'/BZK'd?:Pc"?4P<fMuG4<d2BnF-).OZr\U#NKb&JM.8ta!VT"4/t]0UCU-e%[#0"P,7-dM`M@19;H2%4.;>5_oK/4t9h@mUVBFWi7t[W>]HnI/(-A#T.(7iC1?_IXK1cEX-.9Gg'GO]jG1<<?$S$eJ8BQf6Z!pQd%U9m`qFB5>K2mgq29\+`+LfuXY)UM2a@h#@]Y8aL=YX6<n9J"\VJu"dblOm;'ZriPmRFN$HdA.3O@a(e:!4%_GdY+%<%1[q9$QR?%%dSM3W'n\LaAVI!=1.c(hVIEY=!Zr6nRt)#Q%)*)"Pm%C(R]];r&=aXCR@r=')qOnf.e[do.P"Ie1[7"$2DSFR`@j+PW57U)MXCD9%G7K9L)QZ";UWNpD:#lc))FHP"lNXPnCPim=Xb+1.$RI7e$3:B+8;`#EVGe04Kn1Qr-1L4;BUWfm.)9Lo=<jQ"8Wur2/k.?'?7>;0%3q!3`L,)pjJoU-IO\AN-'(8=K%:7RANU_7U9i9t2PV`l`b`N&\nHO`&mu%uJ<"rLe.0c[R9iYnqXP3k-.QT.\@#,OmbK/bOW[rsr%DG<K1D2OM@#8l*:KZHj^9<nTI1cf&W;A2`a1LM%d$HU@jTrCkc1]VLJ?oSgN\1))<0X+5Q8sYXG8F[(YBaQ.U3@P5u%'WQ,=9C>.%eQ;pb_<=Vu1rp(,/s^#o.9^+Fa,ElhfDtoF%7l)LPI_Z/J4=(N!.ot@+sY:D:mNt.FY]%.Q)-1dVT;57kbM'('4au&gn<+6K*bBi%eKPr0jZ$3rK?I*?&1(L.L]S;K3_1lc,?C!r-7\Y`Cf%]q@StTW>sY;4",/'8JhS`IAMjK&dqXD#!-JGlEHP)+MFn6keInU2`6)V0%/8QJI22cnhUG)8c).!bTO1LJdQbnOt;.Ck$!f;B4@W3hc7aIep'ncje=^aW==8&A4Uooq]!T/jb'["1R%"521+I,S,W">@o3QQ)%%%%'R_@iV<oU;e**"J%hd#aE&r:bsuK4/O@Y%=n2rg,0%.jq'6-+LHmRJ0=?$8Hp"-;GpR!6AmOG+sf;f/mqeUKn(&#'aggQZC6Bh%B+jjJ_YI87A;ShOAY%dQ;&Bd4&C+ni\CV>o-41]0Fm-EX)DOPU7;8HP8s^;3<m)PWEJ^f%/:iKZ,r28t6f`q^("lDsE:JgVM2Ki6%aW]#2J^'V)(tE%&6(t"l<WafR%#SWFN:Pq"+to`YHP?]i$nA2CR!]'eR2HC<jrb9W:dSh9\AAeW4r682<tQD]BI_@]!=aoP+gDLd%75.hLTIinJW_PfX?nt$po!,1,!RVOJd$\dmXKJ;>SFgna4\uEqMc7/o^MfKe-<3F2<McLiF,!M63b;-dW19V^A9QZ,E$*R/=BCVe%>tsG%`>*PsW&&k)TqX6C#'<l-R$">u+GF&l&_i$TC4+;a=YcoqL11fB"N*/E"U,&a-Zd0Z/I32c1/d0EE+K64L@)9dBaU=4M-1"<%"5RK=.I2_&5l`^`l^A$u(Dnod`'I<NiunE-TlU6DdNQ\t,hGkpWN8nt=i1Qnj:00QcaX*%"s#;&&T4PK!L/-^a-Oh93S'HTRqi59%mBBT+arQ0W&-s2`5]fTUZX=,p5"(4`F<Ke;kY.O+!;]G.TgVW9(6GPP(''Ld1)sBNC.G%TZ8deMPr5]H"E'8c0auDXQt[]l$-T?C%(,HYV%,n=_&tq.T6>Mb#7O9fb#(+]d$A\ma#Sr`K3>jNmB)oYZHjV/oeQ?*[kFG0oe](Dk`g(*Mb.?,RU3!IbmBT'4b8goU'jes<%$aU6.#'add^kMj1PU$`iAu`L?j`4.[/K,c&RF)E;R1tKc:KU4j<2gp<$oDj$DJuP&#[gq?#e-HqA!.K;Bo3[pemL@pHXDYE\UZ@:%L!^:\+f<@06UVa_RakDK:@a8f.]fd"nfaq92453O$+X@[kY,RaMQ%Ou.'pK-$^d-2@#6oX&;k$X.-Lel9LOCZ<nPK(_kJgLGTaR#%KkX"i?"PqV?IblHO8_:MFWH_d##rEi=bBlu:hH*#ZRQ_OXUYp`HN$*1b<-,>:fW@3Z9kLj1Fhsc!nZ[WS_,)0(dfu%`,uk66\qlj%lTsB8LTn@A/FejBo`aJ.'/B]Ih#0'KY:c5^'rFQaRAh^9eA'BrnqnEDZDNdc24-fZ%2C^lR&@%/e<2)rRS6uk?*fK2"`79qA%H@l%gL.@^2*i-7YV$XqBQd;oR.."K%4i($bg/+s\-2(QJ2nh;A-`MZ^S$Ud2('N&:_sI94(p1$-&AW6VFFLTOf^/@@6nP5HX4QT#a@;C%<'l;7%*4qXQl>Y.TM:&SFf59ol`>;/UXhBJ0Sj%5#jkQMMG8Y]`#?EnO29UH("&%q=G-KJ?tU.SRQC2LT`IM]R@Z+K)\n4Y-7Vth%)$glfVBU7JbRZO@4sh7&\eGkWLhV^b!4f4ALt(X]F`g:V3.Gb?&rf6j'%A5m_*Tkk7fn4<!]:XT!340Kou2L3J71n?^;TCA'n'MU%ou2>S'q,3o5t@S@N/].O1I@e;,ET27PDrW$p*+H,NMRd*'U9%mKl#M?KebTq5a*+DabjZ,-\:gtlCtTj-SolZ+pnX1E.7rSW`HCH%blY7#FU!DM!>*9*(9B8n*#5V8,_bof+DW\`7nl6^<0Xo\eQItHrI0#[bF4`(W2S4*U7_jp9u+060gHI@[nRT9kA^aGT\_"0b1$I1%^k8Y-$W7Y;[tugP7COip;eD.&<MqPU-j31nOfQX[1aj&\@X_`ee/tChQtQN?9g-l2Jt_g9/[%Z!=?oB.)7$mr8`LrqfjMWV^lcQd%"aZD9+`Gn!&](54W6\-Q:=(;Nqd"qkN>BtXBVDHJ%,5/'nW4c+:6bjW!HGBUOs!kOTqj-4.+_S%MTLi0-l+Z]Q/\YN2B_R8#l!Jc%OP+a\c9-I2Oq&n'Gb@UJi%b\HkR%]gJ>^4g6r`Ol@frpG0!2\ehuTnEW*D%W*+SQTSeY"$T`J@1ZJZqJ1.>V/6*/71"HU1a3`<`0%lS?/M>KhqX)Y][oabh5kN^so[ng]8W&Z?i`F]$Xc==$[OKg5c'"K5M$MN3g)h>k%RFeD8DRXbTe5[-bWAQUqM-F]#/0]&5?Jn;M6%`C'sR1q<e1K`QA:b]DTDa+-KJ[.G5j9\EfBN\0$MCZ.N8M**.1'6mf6q)Db9a=n"R%,lrV!TSod,@h,qV<R%0/R'A3h$S3hTd'(V%Q%:PB/X.eF(Z^To2o+&]h.LIMN.tC$BZpY!Per&iJ7TLB7[YN+p*Fo<E&EQc7,W7[-j9=H]F^L$Ma+'hLo2S??eLYHmV"@%$pmt!%lnr8AE<.WU$4eq\bUo(,*jI%di2mIuT`S`9MO;efGkC\6rZW43WcMS[IT7V]<Pbh1<ZL_UlG._@mkU[qZj[gi+d1P_?n.PbpB:Mb%9YGneph6m6&F$L=OjdKT.C3B"dcEu\EtW*V84WmQ$cO&51F,RHYcN>a0M.3]R5t!s7PnY/NnA!;&%I%f;e$A5@"km8=9f$dn:4)P%as7BTDP-HlJOgRuW7>\K!])o<PmUaOTF6q$mM9?N2R*F>qo1bTWI\KWnc02]%QI:>d7,`%^`4#Ul&*HE^bq?5)NR[-<3U*u?%o"1%Fj%iBXO*4a(D/35US5>ud3p#:lqF8[EK,mj%[qs+CUB-J.Xoaae-oq!dT&U9&Z@CiOiT/45`@a&"'=CgDl1B]7\XQRM-bh91.)NX%J\Ebc5S5SZr[YXb:gF/k_efL>/A$cL8tldY3'>l&@%4Z(9B)qF9_Aqh6VNIY]aCbmlCLN`lsk2tNEAIiL`B9$K*Paa@YK]4WSA2S%\UT6qDDJ7mB(T_<Zt`KcM6+X2!gSHD?/<`1"aX<.R9EWk;.aqS=^[,I/8P1$l=qN(QQ%uhC5Q7cKCp((n=WN:MtVenF-V$6A4;u<%ahpGqDkom)4rY8G^QhX\0-q==fjM67COZBq?D3S#MN7t!@HN,c_;%0lBZ-[ud0T0+=RJ\tB[1\B"BnA$d7"-[i@IMfdA#eM(rTGd%6.Kb@1j'R>'7jqAM#e,\bL]%A:/sJ)M(O!\J5G<E)NHC8f3E%f+$%eR01;on)iP.67HKGsZ9f`:kdr9cI7Mk6oDiULC&eqt&LW3;%MT2!^*(um'aRq8'U7FlH5@f$lE"%Af4"@1-[c;tA%8rN*1b7n7:cSY.R$u711G,(nPHF$LY+D(eipn4RM;`m6J1aq\%M4/`-?9Z'%Cm4CU`Ze/=8.WPp#-u07of<q9Wm4i[M8d+9i^e*:a.UgiOH3p,JVmmZ@Y8,ik>nXZd\r^F\_oFM:#UeRq&U[*fs7l>iA$N8Xb+Cn%X=WTe/A]HD2#&g;\o\diTHOa!"i4J5]&/'p6ai\D\E.B<&Rf@?#4q.P$8lZc7M3\>K1>.*3+OcW$F)38,jPr)\4"HGJgc5PZHdP;%8Lh8Mdq$hR:q)Vl$!.`'j,ds4U]=klN0eX%L"i9UAKj9WcUUC*9/4M"SltHLaFp06aGbpGKT[)`5+tn'En:P0^gMb\gCluGBa.k.%OD06-@Si:H^@=].9FHKAaENS>5E2*a!af'gU7VRi//qXL;(+7Uq9"GJ$d&Q-!.P#DlO3bK6_r(*Go-cW_k=T-bd#$h"bK":AUH?W%"JR<dXAD;(RO`ZC`=ZO50]AT80jCj`0%4JB`NWG,E>'$&Aqh$)6Slo]7_#-rIL"TjPRC1$>$(j=.Qm80SI&>IPIP_A<LN6<!c(]^%,Sg\"2/:)<ef55WLTgJ<YsRL#:aeqf5mo\o_/t=TQWU9i-R0Y`NN!!g_e#,@'QWA'@.ktQZS],3.StGh%:EF?@`='q,luY?i:/7p%MbM<ddU[-."NQZ;)N[W,!+=%!<7&Q\l2)Cj.%u_T,@R:Gn0j*I7#gYN5S#V],TUBs14*B+MsVVoM+f+)MP9TC+qcHL(QH@Z'cp'"%RB7[cKcV'f.IkhqQ#:.g"=B'6!)1KOW)!uVUaq/B;J8>2bmn7a.RUV$CdLa9gcIsd4,G`?C5QG%pa6H7Uf^K.a9k^'O;'Gu*S9gm%<iBD"O;'1=Bj(r_%'@*0K4&B9.RbHoMU_S0$rVO!Km`k.e;Y)fT9Gq!lhE4_=10p-jSNR$<5T&NQi`8`dUJDXOb5t3C2?qM[7Ud?%TE,WQW*GLR.+`aV>b>K!+n5bI](lQTHHfir2FTp;)DFk,@)ZrCM2;W5$n+_u@+>prUSu2g=T!$dSj*oL7r4<=C,=,aBPiVX+AmkE%15Q^K)@:n$:#/t[eM/I<-O(N_re?Ff>[8Fd5[XsD==DSaU!2=*%+YD%-nLUMI)A8pJ#Pk'<<T!3c!$'+.7I+^Am=4>mMV^C';u]r%RWNh,g?1L-Ne%Y<CYWU$i`.h:-?U5'VhIMgZU,/:Ljjs$l3aD)2'?)7QfqVYBX!=:@1/<ef)$Ah81@*ZdD`J9k:!E*1IW)WO[L7^%'fERZM+4mH8eb[?b*pC]E,8#K\kWksh*a]li1gA%R,TGf*Z!`n/V/2OU2IB=8.+5VVi-Kid;VQqU?6tqD.RC2Cd=lkPfgFqM.DqU%ZNqG\U4k3kbetWurL-^ic=,;%bY<>L9?lN@C<bZG:i<NH?&fahjR!k![jT7o,DBtK0lce8h&rP%+I0?,p68Gs!(3_J+A[(dFUUO;%YsO_pr[!D*T3)bD>.tf1q1g.+.12h9b!fD\;k8Vq@0iqYdIhSa5h?4Lb8#`BpLpDf+uAg!(=+AjZ,ft'Lsns7_"j'#ju07Q>q[K;%C9kf.VK<e1*4k#WUJ)<b+T%pR2V<a1FKfo@l19rs@CVLo!4OOG(9o,s]od0s`'72JWM7@pAW`qT1+B;$6Qd#[MrD:5A_^J3Qc@CO%U?!V)<Zr/,Cd4iAGOVW,[2P*q=S^C8ML0(I<gC8RUenG"9!\#[TW?pM+^+[%gFmXaD+"o`hL`W<aXWTJKKE\r)AH+D>\NZ=ZF)0V%@$!sB3!s1+(13i'S9n@KAgia#RD&U8bsE/3q/dqkF_3b068WtD=g.sE\o[U/a+7"[cR.l<=&!3LP&(,ooF7OM/Obk_s!hM*_[;XD%JGB+;^1`LGIYgSUJS^`B!n"mM!c=kaZ)CYG)r)i<R@6N&JpWlRMMm'Ae[,sq?Sljd<Fuu.h*3N&aS$OP+>Y=/LG7-5VY"S+Oa\us%=FaNf\P&!;!aVnSE$l?l**M7ZHd/bt*>#`tCg4m4I4%qgT-.1=/5W6s73sLeWc>TdfObN`ZPAaJ`g3=2!>([-ODq+qa@oOHBcQ$.%kY_k%Q4Oath"OilmS75r8/kBFIh<F<=K(c,+WM\HQ`h6_&EY)k/6_r^7&&,f#*>ftMcRsjaZ);3\0PKcWX1PsI1!HZRQMK=1@Du<%bSj8Oi79%==JiB(^a1OLbt9ISL(%bEA6Wm_^G6`Lfs%'@43D,l@$,bX'h5fgCRL1%i\S)17H:hWU@Qi_]#7!1)5(gS_/tG?0rN[$%8(Fi&9T<q=T[ZNm"bR7LB-QqR$qhII1s+[)Nm+TSd90l<YG:<TjsphZI5>Mg6sE3e/24[UG=rjUOK?2qlD7o"/0t,X\^N10JkR='%Bb$3L]j!#iBk&n#Sh,b_6<Q3_A"WU`Uom$CKPRG"3Rk#+Oru@spI^MY\E\4d<NY*NN`K/[nQf#-7DfD^\S0?P8a*OdD,ct>6j"lK%\Ib4F$oTl-k]%0Nd3Rk!PHhAe9H('e#gD)cp6O=_5`Cdf/CY/BaH:/cM,></V$&?'Oe^%[^&qK.H_RO^\/icf156b(\ZDb.C-c^b%6pR3&GZt*J<I-dLOeub4Q^XcF=snXMWRa-#n^!rdM6UiVPgt8XinBd"nRs,P1g"*'=+;fjlhhFPDgk!YnS$@fc+o^DN#Pj.,>/,K%K^WAl/S\ouY!r/9(jB>FOs:0"3s\%\ptrn3%DsAM@0$Q3kKm=01^o6;)m"^a;Nj;\F"2P:1htjfg0q>\mj@iC9gt?hEj`AS^X7Cc%8(UK9_!#NDm@sU9DU`nGHg*q+OPZ:ri-]c4,oq4ZLpU$=X;+A.C32TO>lu5-2ZX`7B*7H]iaSla"'Ils.@)QIL(=MXOLgR:dUFLX%jp4kj6D>U-cu0i*"Lt!q9"M\6MRYj&5)L4n+<95lF*7[/4""bG:SbiQ`$#K[&^;`EB)WlQ$k3X\H8NoTjTh[2@h2nspiiAQr)U!D%`_4)[jSS?7d7LBB,@?c!WiRgLi'e.pIuc5\kI],p$46Vq[YY)h`a7Gms/XZ5ZO1;dD'/ToGhi1oc(;)74.VNR"Q-UnW="1U*WU18%!<-!`e4\m-SsS41DZJes*/=Jf/?ITK.Ne=Q[8UkH3^[HDW!N)eVdAfc&C=GJBQ\DJWGW%(.'geko#(_RdNHL'N^&n($dJ*4V;L[J%^=PLt4(+BRGGg"Q@<=QOK@IYf%1h[,qqjFo*5cM&Eh&3u@-g.]-NkTA\16+P.HKK<+0(j+(aXo+X7B8kqN%i5C3j=Is);coqS/hX%&@16/R99S8BlNFp[t"FMBu"V]?MXVTqBH*QB_=HP)S)s-^N*##+TLI0U4(A)g3KgMpogCaIp=k&mr3s[Z=3[OD&E;U=*l%'6a?*n%q!T+6K77oE+1:tBLVK\a?V58WqU';J><T2!O(rSrH<#Xe#_B$4Xk&!Jcpe90?_V1!/cC0(bt_'d9F5r6m"*8GK"LZh-q:<M#!%u(%H;nXnpIjt_BX-+U[tdM@]MRtE]!]huC=15YIsTLi[GEF!l]$4O$"luO!'0M`N0ZN<Ei[]h7Or^@9N6so\4u-jo=\)_j7TNY[O=M.%'ZojI.bOgseoUoM>IQ_h^IP=6OtJreF\9nr]*._/q$4L3=/4UJs4D(EUYUm;9C5mf*e*i&,cjM:aF^8CYgR7#fC&C-kG<("euAZ[%W>N#rem[L9"7I5]\fX+S#Qs\EBdm5@>,>O77U@>-dFcTK9sEba!8KXWNl]lOiODpjpV.^h4ukU[NBGm:3e.Q(L:sP'obh3FKqTA<%cOd:$bZEQlj:J\p7_Ll_oNga20f3*\WElOX*_CZBRdToR(A9ijE<r>9O&D%/);4s:<EoK`9(m4*s8"GMHr4\GQ$Ru/UK45@5h'o_%Ca291+c6iFrMO*(.>miVcA&$of%JA0Rrpp/`2FKHLQS=h&4JqXc'mDt_._h8[7UssX'BD(R[$aQ(jH3tX&3fdU-4T1_.n.?S^nUD%P+kJ.8u(5Ik/@VXImA%e_n>iYdH:#)orhPsND\c>A$hJZ^=)nt;?u\%U[2=Zb<X1'(0!Cd#!B!c1FT.+C?N@T2*=_0Xkp"9YBf_:%YC$c1[%JJ=>0I`N5Z6h%.E^K4@RV,Cf+JV[33#TO;ls%iks)b&dcuO3D"I[qXi]-TeP8%pUN+1Xe4?uFZe=VH,G5;aWPmu#gE"5j%BZ5G,i_p"3(a/-Z+JIqFq*49-J<Mb:3`Ke#X*pTI?,%.)X[0o_;uoR<I"bT78@_7dASb_TVTj`]fsoQ8eN0X>AAP$QB=OhA\lTj_%'<X.KVXm!#etE_\j'Y$*SfOs@ZF8>`NGl!D<X<o/XTZ0"OZ;.K3^^RC;6O,L#@@C2c$NWf;RqfM3,"Ka"((k+Xl8*b>I0[_K(Ks;%0W\/hZo`1X>7Ps[qZcq_fmBmcIfKC>I[<*&h:C=bOub:JX*8AU/jSf1Wu\]f"+7&@5f6-(O:Sba0[p-'4.m'[gO_IOh#XHEk8rq%%S$cMdN$E5Af5W?#qc%EbCJf#a[JY@=3(Dn6Ka`Xb8_W]rOa>R3)es^iJAPS/PKKN"Ej+>8N'ur#!@4ZN26.7T?!Or6WAC23ghKhM%eRT1)1UjXF3!ehl/!]6VAu'S'N=&bVmUD/V.lD(`Ig)qJ0o#&!<ibi;gDX:O[GrUlYtDXYXcFhbX9J4Orb-HRLIjD[X'Vi*a.$Lc%)JjMYQ6B>Lb@ATEjgqbRlA]3kXD&&(G<,h0oJ$l\7_.CQ0"$I7UfVCgMGfeT'VK2V4G@#4at30JY%"fiXhQgnd+rS`P/Jdj7kIj-%",'dc2GQ/nCB"cEbo,^ae!M^TQEDj77l>>C_;it_7h&_N!XL(HRYYS&RdDps:Hui^9L!@<Sm:(FmO#]A;B7D-*n5>,:M!n(@Fb"t%(KN\'=,_^[M8Cu$3cO:4&>;^]D?1Y_akn!"p):#5]3Y(FS61dDB[u]l&?6l52Vcl)7d;15e2d[di3D+eqV7-NCftiF!OQpC7Q`+]%#-r-ck]"^JRTGO'0"6o9ji+mb=fLR/$9DQHG.KOtrS@XrRbb/n)h_qsb>/,4]`?L=h0")MXYSb=i>A++H@nici^NK]a9NdmR'A\B%(_"2Q>VL=fJsp1:B'cYU:8s-IK=jX*BO6.FoaVEFX^0D[7`Hs[_*DXAMG)]lnuQok(!<3"Z5CO$Z67/t1PcVg"G\RfM7\Vi0P.S%%LHVC)-Ae7cdWQ"X"nhi[c*'UGQ\8^d'(r9lOY<tdf'0=)*dlsph.9=-X(nW]""gX.W\'"+/VU2VHLm`7EkP]QreIbDibB2=1u3QB%qH`]Hj/l8Wl!pBTc$N@_H_Xb[G-,G@+69*fg\(u7&tl[#d)^[dXbQei?j9l?b(S'\aY:?4j@-\)[76qaDdVLhJeP=%MKkso`%-Nc%?7?<Q8th&B$:DJS0_#KAdFGRI^(Q$DV'5+E:QEjWot!S!#-%p(?7?<U8n"Z"oV12P:sdI<4iL_:"=@J1'`!W[aB&d=^1%rM'gn+e%(l!FW;=`7caB&d;^>]_"Ni,BeR!d_k]Rf>Ka]Am<^1%rM'thUHqbO3U9=mN0g(cs%Xq6J6Ki#-,KV;Zp'^Z69BNH%I?-P5dmsHDa%m0Z4f4.[:C@G:Bk4<X"u@;&_]dd@rFVpal%>28_c>UrKK$1?4n4mY*GI1i.UVdfe+dS1W&/B(lQ`I6:`ZT?u*id_:nO8p-N;O_PK%WRo-@'C^0gd1l\3o^\dW?#GtnNA7[crm#Z"p2B_3(`Ul^PmcNLh:0UBN^#@'N0EF.s)-7YLr4P&LDsK"^H>gAFs$7YO2*F;A"4lO%DXf"pc0nZQ.]s6LpmE1Nl`=I!k8]O#p3H<Dn:"g5OVg0jS^Ka]YrVS[3+NN5)[;Z(AnY-R]bCO3ph"J5*k.T?b"&B&?#rB2qh".D%GDD<\N1CMr_&K@k;K&p\=4E7C7J]>sS06sZ00Ajq@pI"EYBjN%%p5#,HY2W=R3`:C-2V0g_eckT,(g0<V6,hAQG&$.G>n*9qW'<"%P#-E)&.e"%GH:=XAAru7]pJ7nRe;("Hr<coa+gnqCDgA64;tt@4&G\,-^Hqm3<Tac%#q#p$?3[=B%;`>,o_L1ZWX`sa1:HUo,W2D%&_VHj&!%H$%A6%%aRIW___G!3ED0U+S;&,&j2>G?L=_@(V>lJ\mKRF"hXh6K#'lgFIksH=<<BpqTj/ATV1IFk9sC;\L!Oo`T@Y`e%qs8\>^3$4#.[PHOV135#HXAPX@&($O:B#(JN4&9>#EuBs-^pQb&FjBF!eIZ\:#kk7G(8CGF3ne>NrY!<Ch\b%SSn@K2KsCBGq6hZ%V"Dr.k'9PO5(288De,QQ?;&8+jQlYk\+NdH4mF[9Al]t+TsBsNlggJe20s$6r3C:PPA3=Mg:d3.+,Oh[?4/@5)"b;o9jdOrQI=%K%H^DFPp%+_<]ZJKB3a8HCDWCT"S9[7]9;bj\im[b4G\uO(Wr7;t]D)(gRTeCuCr_dC4FafFrR$f8+H]b+:dP/f=\c0/:C_OXc0gn&%[rIT_[-j4F81`YD]GGV_KtGOFApUfC#1$=3^<qZFp(CMBIe,F`m-e2UouEC\mB/#V$O^UV%G"l4]o[SVa2R]46*G3n7:NXrn2B-U%Fq4AZjQX]SVk`><Ju$Z"GHM`8k%Ss8.$b51hEi[+qK0$/d8m)Hf$8&HVpef;?37d?qgt419\IKjc^\W`O]^3`oWG%Rf%5Ls<a/m-%B<q&+A`G=a\[$L`I<;'6mRC)<18U8<h3eGC.s6mRRVO.YehqUcj(J<(^;f2"Fl=r3f]co/l1je-F:'i_fIab:5HCd^kG2mkcgrMS%St0Wh_qg\aVib)ZZSAf9l&)a+gK;'W;1)>TV:;eTVqo>Bj+Kq#lGle:nLdTuNPn<+Wl,u\2Pg('f1ordccY$C]5co_WDLYUm^RBX%M*\W)gjHFAhfMAmEq_+!hG,]Y45HI\=:c!L/mUQph30H_Vo\b1#aXnf/mh2Jic;W#+.UlNc=;@i#Wl<6S^XDsq4StOU!pr[h'qt_%8a/deYd"r[(Pb%OeaJj5=/R^BViTu:8#JEp9eX_KOk<L>N0LbXcb2BqS!TJm+5K$7R!IuBIFQPt3X#gW]04?W[smJSO5)d%=`:+E%4??J,QFH=,:>J!3md>a[.@^Bt\W(a?n?1*0InQ\WSI1(KVh.F:g0F!FH(5o?'RJ`oQA")Ef5(+UGD5ZuD+VK`7;m*^FdmN"QWP.m%n+MUDq&#g<.cqhf$3OeOh[kh?KSZ1:N-)X4CMDt.KERhQM;aR<4kuBY3[MJDZ0G]H_R!=A3T55Ya`Quns!P5Gff;':mIXk9;$O1F%+0.;D=M'XuO%pc0_So/qf"KPM^"UTGI=00)1_OkOHbJ'Zp[%P3j6X2?e`j5UIG!Cqn+9/27:K>PSW-@qZ!OmMAj&5hIbC:ZH$+E_%gh\(plqUt?Nc'oenh8=%:J\-a5+R/iHZo72VcF0HSN_Y4'V;mqK_nkI524tmVBNQpqQc`,H?S#!?*)9&SY?m@o'2L%YC@Y(G&!Nm%AnQ:Y&p`\?:(B'Ss$_EGSX/C4&CX$Vnb]*01?hhCgfiDN*:&aV\suB&VcuNZ6F3:K>j,s=_jtsT$_+6HhY%<#bMZK8*_R#`g1f\E%g`I5aX.A\/edQ`51FeU^'7?Spi_ZP'Z1Ye5NHVoc*[ZV0iG)RWTpeHB:Lt%A4.Yh^9'%CCRMd/\-XCM-lHK<g%BFOB1W;2qG3UV=%K](NamIcY-e6;**)['mDC>l^gEdLD8ZFY7(-@T<K^&9,@]uKo?:I4X8(-J2*$nSJj@n^&5[Ek:*oNX2j(CkZ`b8>]^r0Y1jI&\"W%;igY$OkD[hjmuR"[uHHso:kEs['XdZEI5iER%or/[cI8X;>Kj$h=KmqCo+f-n^Q2qf\<q$Ef@[`rg6&k?`hhgH28l5VM:_/%ka<B%:Tngi?QK%.#f^akjg>uP[r3=/WD1^:YH__ghX)c0fOqD?hXc-llWVH$Gs;3+.Vq7p4U"fUXfE5W7\:bnb1<]Xdn6roETHe7@:isJ%ES2:@$i0F7\`W_]J[@QjH9G!K8FuA9-cXY!+htS38"Ege+6)OMbHpUpH^[ZH$pD:Oh-Ec;T.6o)-rA3f1RCfeB>M%C[@a(smiRl5%N(S#+R="Nr=Z9!t>McNY4P[[=mEYCZeOB?*13Q#Q<;Q0qWoQgDLY,4reNL1\^oo;3mMC_M98U[4#n^c*bD5ECb\HSDAnL`4q-mt/%V0Y/.oFUKO?UZ*RYO"sBn3n@?$Lcj#BC^`W:hNkF4)KC[o=FaPT(oTJ_u7_*U[Z]Y/FBOJ`S'%_b+-V0[d]i*jdq#skKI(CEO30?%X"ELEK^[9YH/MeHY8<lidG$Fsf-L$t;V?gehg448Q06K.m!=e]B?fPj`_=Rb7;X[@=MPa%cf7e%>+BNRlRr;(`D5a>V#Y#Qk"r$Y%!joJI?V\?,H?7ttm+[)rG'm-8iTp&>>/,!se45OOEdZW7F<Yh'7f"mr/-lK\Z:r@E_]RegX-0T0[FmY'3.G<2H!@=fQK-]4G-o<f%App@_.H#$RolCj<#r=UgnYPW.`d%""Q[T8Cgh`[KF@I!-_%R02)oWui>\?Daah>7d8#2sjhVCgIn94!&+MdB9c.tHtIP:2L]`DU4%`808FGi4+lkgZ1D?3^KaT>)jX\BC^%<kmdjJ[;trqHRcXTS&Mh@2_d!5S4g_kM4g':.C<[*86-1;K;A%9\>nZqJoUBcmdWFKA@1+%Gf!3W;QX7H4)GY<#Z?08,Q"1IY^$7JF/tkT=,N=_%kGBgo9HrA/M6"'r%PTeh#pBMcu8.6B;\1W/P=UCF8QE9n1Si)TO.RHA@GJR%AD/&q7<`<Y/&)A:?7[=[8M]S5p/8<A68aAr7QSul=<i5O[u".:0Uodib]F2;j*ZhDH;aQAfd\V]TGLR>>&R!fAM;>1F4>"1a>.NQ%[9SZ>!$0i[@muB&>L9!"-"IiQ$o/M$LQQXG(!&(<NXtJ:p%hT\3E5;EGX%mP,@!5E]X#35#+c3AbFZN.=;Z;=+Q*h=,uhui4>=F&%gUGqtZgTn^pc,1hV6Lu+iIZ,n1k)rs0XJ#D4!CRWR635D]>\\6iceq/3@]0Y"(K8V)dDIm<=q?kKc'WI(:T!G"D$D)lASBMU'?l)%E\K0)+C,5BhZ1UH&skDH"[OuqcQ.;o*\FmU,qF.Y.9'_V@kmtV/2N#++bP=\Lt$4<>D?iq:BX*o,T+#X55tHaJ[RG]:l';crN@*W%7\H!V2\.T[3IntC#]u2BkACpWil\m`p+Vedp2bC4M3^YFG&<0lNU2[hh89E_q:p,do8ff_Tt+(UCM%R"Y)%=``&n5$5`=5M!Es"U%V:ut6B[:bnTC_XOqVfi;>g4k3c;h!6>[[0_K!F^mg$s/<Q<OYTP7%sL&)Cg7EukDe2adF!4@kSO!gO0$PRg=CZei6DjJ"1'n0Id[%e6:P49aDpM.)-a\!ABpi(lPX&gD"XJ0*ts*0I&:grk0.YOd)[SQ1*&4A6rO:\):k#\P0YQ><S&`ftuH.H]].^EI0-a(l4Cr9'4cJ%Q]Wt,.[Vfj,<!aWh^o`6VV_BR*>DA>4dO)t&c$!g-L@GDgV$m.k\[qKj)SSuGk^e!ZRUd!a7ij0r+abgmO(.b;cauD-8AfjVN]#h%YlcT7G/rpY88NefrU$[>UDMd)Mo<WDfUn0MBPF_)F!a_AS)n4N&)=*!/+6qhs'SqU%r(_[m_uuSI*><3?Hi4Zc\i[^]*U8H7Yg8,%5Ec;B:kDYYG3sTHg?PhX[74V8c)r0UMG<j5Fj"iH5UK:DL=[YBAh5DV0n2+JLo'pd^#,K'aG'_+#.%^TTX*?A/`ph[LN^nFL=DmX%mh>'[[K8IU_9COpgPkg!1#''Z2)_8SmDlHYl%Y.Q_s)-4rSD]?DfRCE%Uj08OSB+D4R^tKo5?@,2nLaaN,<]iM&sj0)R[qk%0P[q%HdN8`3I68kg.-=1)\AgWFsrI9$ElNfJ`KE'OBsu!G^n)Xp+iZ*pKW[B1%@!A_nK4p>^AHoc#,)/p#ha=o[GI*Z6/pL4*PrEPMqEW%UsmY<Tt4@K'4aL?_4>PN>KDMgT=R`=!>(*ui+1.9-_L8ZkDB?X);aMt_<^oa-)'s;,UP\I@Y%+dc-7:Jm\l<i,c9W_)nhNUTYO!J%bQdK$\-a/UEdBYH13n3qf5hT:P7ui/A?EP"d>K&DIXc_Nc"SU1-0Ob@1h+:I3/EAU&k)U+!f;H6ilTF@\FFaZ\&Et3G:$]'br*pr%0GHpE0`!!>Vj?Je>_*md&#'6cDJ1abXIJVN7V:PE]>"lnLX8.;2AeiO(h;]h0Zl&4`2gT_!eeoE6%P2K'1-304;93I+BiG@WC%eZ%((3D!"0n!iM?gU65]AV:c?*Gu:/2gfLten<cYF-_&Eu;!0V[bQ^BY+9$T1Wg8fje!p>Ji,bC_AJ\]f^WTuEpYjtI(9iQ$2F,&^hb%QA4N/CeOM!H@197!ABDNVhHiA4Zj$ZDdUKEd1tM0"9<uE[eOq0$.?U]U+]?\g_LU"+b(Sb)H!u8d9(U>H=6_agfCL=.Eam:mGdCU%q95rO=m3:6]=m]Eh+8C=G)P6eri*LkAFiU$R$.]`Q!sR2?&f*=\Ob@gJZXhr5M]=@,)i!WQI^Gn(XXRJ?XFiZRsdN.`L$KIn3Qi0%d)JU50Bi08,:"t[nOspeKlIac[c@'s)N0Y-N4VnS,cLD_/I#LW)fEtf@kMO=cTbpjY')Ie5o!ZN(-pF/lsKa(\]OE)#@Irb11NKl%'AEV<nQd[;CXFH,JbE^2[WNe!6#.hU&g8!O/HT`1\\01^$B`HFjc/\pO+=Pb3U"Tk#_;CK&!"WHj?XW2<X8e"V^phpC%s.`d`Q6N%P78-\lp?LBghX57IXG0aEJQ;<,Eif*Qg5E,=/JAq/#0Di)&FDW+U8gDIH;fMc$,Fc@+dLPgiYn6H7g24>4S7=b57l54L4Ha^CtA5%]].$5pU'mcgZtj,+ohn(!Y91\#_I%krpatfJEi!"88K9V_fS\nM*_(Ae1hk3S8`lD)gHUVAI-t5m1qjTR)UK,HfqPt8Hq,^kcrk2%S$`G7@4O_t7q-?tR6e>&"iNtD[7p;d:*Y(@E/VOX9Q7E;p_-7O7slKm#c$s+[7hmjc'6^5J<Y"Ob8tF7j-d)-HQ6qtS7dKX`]#KW%r:kmWAf>YWJh0^*CtgXPe[!qY/haVk)O^'a$`94s3b-Z[C+6["%&0$g\-G62^"0f!F7k^/(05?l?$>q&h5tA^p;OV@9Rc5"?16ZG%=7<nG6Kij$Gh(_oCK'oEESjS(hqlbP=0)o[ffp$Wd8#dR+'mdukPZMb?/;6(;Wd[*9qm*!f]^KUmG2lZI^i1qNr+)5Cri`SBL3,c%*g`.S5[-gNA<FG$RN4VVCh4l2=:kNB)H:m5'`hec9>_$FDg:6uhiMgm;3^hDJnsEiUg*6sRFbqmg5k!_KXb7X26RnZ=HQp>hTsuk%p]_U*2l76>%dJJ>[VVEWPH$jNhPMr,Dd2JtB)+-E0NtA!Gd>WA)Eo`GlFtRiRV+:9(hQS,B+eqSGp[N=k#p^9JU'2\qXJif+%\"6%@&e@8jBLXN&f^(nYOArJj^u,VA'&4Mk$>-3Z#s$%GP3`'3kne<I3iJ[McsPT&l#S_mTgV".p[G:f!O/nB6c^K:@*odgR`5RgN,6L%??&[VaF!T_H'ToaW7U:K-51:i,-fOa.5=B>Z\<&D(.[[jf7Jun[dY0=kI)@D/9jFG)Q:X2K^#GuPptJPVH19gF%EqWH'R-F,O9^Y%Y=.6,fd4s4?<jgU9So,F!8bl<qY.NRE8'+&O4Jff=5LX^N$!Z5BRfn)OL(.eKL5"q1&uP,8%"DXIhHj?#WV<[?1ZfHc>EaB:<9%i%lirj088KF=h]'57M%cYN2qK$+(-!BTZa&+LFW-)s`fK9l:"$!R0@ETuB]8/u-WPtf(^tL<8SbafFuJX!>AX0d^Tq*=VGG1u)^t$u%%[gF/Q=C:#Nj$39]*$n*]URAL>kn$HL68gE3hMt\b5p'?8+IN&I6YbEU3"0#4)8p`S.Yra0/'<70S3m96krMU:r8/:D#IrJJ'Q$l%api"7LN'e]Mh1J?K&uK^g4\EUAT3@4\BkSk7i[1gYa"77&Gn&3&7<f.PX0rK46tX46/)WqAA@69XRACnP5PrJ]eC.\X9SZU6&%:`%NQJCDK0VAPG.62tP%],e,%psP24-eD>BL\)i?Rj<q="D'R`X[!h@;,4ARcUMrVY]HO.R@>7X:>>h24,t`knq$\F6fFKp86m*T'P(%@,WQ9MBYRl=5JQ0jgRn"4"B<N1%,j5nc#a3pX7aXr*,Ij?Mn%&%JRI#+Xp'8[YG)o7OcNeJbLPs8DPbW\=OYkZ1D@/,)-"Nk#*@9%7XW-cke7os?uPLYAFNQBm0oTV3?u@]:48<]=As#n+]+nD+LBMHDKFXc[i=hDT"q=qJSiRr54HiLG"l?aONBfDMh--keNUa>(]QjQ%_Tke.P;Uk&"?Qo<9XaN]Z5#i"IWII^Ah3ak1.B'b@6ijq(mWZdo5758lqF&PW+7dp,1Cc/0e=gAS>Pg:M4ks]hU[aW)RT*BLDAe/%Nd5PY=:KT(Qt>!`e%tof.$qh4;e9M5pAt]3<GGgP9$a]4XN<3Zi]^0)4SQ:>ebm?&,<N<2K!A^Xa0s%$LnT`33NB!tG`LW'L%^Wl%JJqf*$j;_<U1aQB8?N'qanFE-oDYD<mBJp5MbG@"B&)EV6QW\n0fSJYmpg7,]'mP+(a:\a-[\T#FMMUJ"AG$X)>6*Y!B7CVrjb7B%X(b]-'A>f0-g8*[Ied3r;fBeTKE^h3d[2$A0Z(eIY;IXY:D*\KnSY:!hB+Bn_@Lk3$?83La@.bB8QcOrcQ],84pHR%/FJ?[<ss3/%/NYa6!XEP&8;q+mM?dE?-iDoS+gf)0HLYsmrKo.>2o,6!Tsu%FoFIWaJnJ`AVo7O=%OT>I!fZrNA-L;4%_hDK0C:`<(<6+_%P\WC%)Mqa^(]sC-4fAc7Nt>KNdnZG)GL.Ep$=V.b2f#n)h`e/HmmTW<#n<9F'.A<Z38nI]kDfh>6n8JpSJ:iIK^C:<ETF3j;!3ZFA`e:[%Kb,l'kA\:db\e8Uq1`5YAjT]l+ZNMI-VVhr_J>9Al.Ni,_T_q+"=hJ>d"#=c&)C<g6LLXjh7-_fp9`3:/EkMTTPXO6N/K]ma^Lr[%U/M+)mSM)-NZ9Rq1sq4gmjfI$'V<H]^kfFiIaHdB6X.pFX%8oUjko26;/;[I)[AR)fJh9+`6"U<`^65T&FiQg`>4*(q7:<^g<40(%mq6LZo4A-!]!*%tO3^jKQJV?uJ`*lsHXO/JEYGkW//Y5Aq;ujYT)%^!hHJiYHTYMSb?s_JffI^KVO4)='#Sa"Ma6#e:ea!:Lq/2,%/C-<>6-b$_7PNTiW'?ulj,kcQ]%/WFEj%Tr;k$>Knjn/WIA_LToO\%ITKL98,eonam$k!d37BrL4W<oo3$)6]G-(90n'f=YDneD.%f<#1S`I(TX^g>^JnlRju$*&G/LId49O57GAKX3QV:X4^+%j=dKa5W.:c!:HTcb2CB]*JIXc<YcRU,^Q2E7n'S,5<K<?akW5I"(+F%f%EkVdsE?d3&-Eghi&-%P9K=M'A]#9X-S)_j3E5\X)OMB)'$WRf#;k`\d>$qXXqbJC:Q1u&oc0e;_='R'V:=g#.1AY3D5>W098uR%6RP\+V(YWCQ:E,E,^jr1C:Q0J4Je5h$*sKY1A^n,1-YeVU"+2ALgkAZIP-f)3^t\kS6f/;[J\GZTD.S6QGHhaE4Zk@nifQS1=Ri[%\[<iqhG5^P;q:aFiR`HR]cZ1^Dp8"eOnTa/'7]6Lho+iCpW6lm,elQWk%EVbcc+.Ed@^/#luX8(qN\Z[;83.X!`N7")"j(J\(/4]%RDU2WP%*F[a)M9CPnEHe$TuM)g^P0&%".p,h6]tM.sD)N'n[K-OA5!`GX#<QEp3*I]I,`+E<QAf+/o4K`t^;A:Xta_)n*+03ITc<%.:jFoiV1?LOF).Z$gXPPd4;2_cKB>oR(g@pl(^dc-=J0+>VE*`^.`;U?;s(09m%`T-Pobn>uOHCs7@tE*i^$5rQ.LY6e>:u+3VS=%<I9a;WY\YG>uQ_1;>e7!eS[<o:]I0S+lFQL5Im_=Aal.'(s?8k<':@(M8;seU?\FfWd4$ePV9$X\u$BiWVsY%eO,nemFZo-;)Q5K%\>Iu;.STT2l9XgtN5/6\U?\sELOIT!4YEaX=\3^;2SZo'g'bE!0.H*ReNjki]>8N4-bH='W4gTb3dk;:+;\%5b2EeQ;7/Wfd'3_f%W&en?o&)CUhYSmW&teJYec,FtIsY&#$N`J0q@:&]HoqK#bcX3dAHl_-QJ3EADAdVK&NCCanN/&4a6an6Siu18*fos[!-,W5)l9HW%I\*+#*V=LZ^R_4]PI&0F?p2rE-c+GWNm&M9cMl(g-qhmX_QK@.l.H)&,4kB;o]uS"fj5Mb0PKR1SBYu:T'"u=UWM112]7<@cORTX%nQ4u.!?u9MX$"5IZNDIcgKZaYH?K9;k;ejdl.LW+/cSgs[`]p+-YIe\0HjWlc!>G?@Nj4,*E;?iS3:IjJu319R$V0UB=hVmE33Ou%oAXQaL-2Nc/Ns"*2m<NYcOO?!fXEV1S=U`D3SV*5nCpW\n)WiW:,O+acOPItYPlQdd^'$$B89e.*DOiiOD=-jY:jF4G(AXiT6&tC%Uh9p'c5tb`1JrJl`#&lM60Xl/mDgj\dZ+ECkt"(46=sR7JRn/VSNK&^'I9#nj1e@8%[^E!bOfWNjD=!cCE.,,GiN2iOh.*rA)3^C%G"/t4p?^_JlJq<X%Wn=fi3[JW_).Bd'bn<BGA$g?[%GY"fsX@n^HHr'fbh4\47Ggf^UcM]c%6t&7if[H)&]U?h<5rs%W_)66ml-e%`8@10Xr$NoCtH!S"!]Le+VXcYKo_A?\A6.OJ2u\Ho,ms;`jj&\X]*L^%hOGa6H8e6Y395'N-f&NRMk-a38lPV`d#iD%Y'g"mbDmV%G8]F,DD_-:`d#F7_pNQ]`^b4arC+`9Q!rjECcnhYEB@*$&'/FJA;j<1LL%EKnaRHc<lR,e:S'[m.VQisnCm3cA;n-4ek\G=4SW%^%^W@<7bY%c5N:Cn78#M\.*pW+.M)3.7Dp+Sa`qXZHP5I)T6f]Ql,%H"2&,`&1N),#E!b@6[Jns7NA;h&GfUl`6LUja?nr.RL46rf7%0htIHQ%H0A:7<mYM2gA;55gH1.HO\-A;iSu3I#:Bk_sL"lgllWVNil2XUBDXB_+bh$_R/S8]J8elseZdj3sd.dC&>gZNijpVM352%O+_OZ-I!AL5-sQn1<."'C7StV\<[$")#4$:#r9MMF4O(TN:BGh$a5%uD"(ZP"/N=%,%KEo?CpCnN/smAd>[V"q:u.N"1_b70YNEb%]S"sU^[uV(`p"MC^YcX\5%AtB_Yd-JGf2fZ0nkR+9>ZLk6#S'?+Cff9Z_9]tN/rgW9JL#sXDob'r(f)fM-BVe!G%W:j7Wp)+mo[I%SM;0nARl,cj"=Zd+(U=og%S/fSlWk@,O7@'^j:Tkn]=Nc%%AsmaqLC,A)-1)Ld/rt-Q,;'e%?W6+R7!&`Zm54/+0=)0b.]uElS,3%A))3<AEk&mp<#qaYi5d'j()Mhk8!a?ar%U45F^1&/n<[LVu;i8`^?:]2K?aHa8'6*1WDrT1aZ]PF2RMXm_?mS[r]H<p\ud+gocDL%qlB(&]3ZcVGM1s8a"jd`E4]F%p353KG-^N!:#FFC%_$MsmAtm'B8>6W%G\f_jm;JERJ">>%Niips.eq"hotqrA;AoRg0jOP=a%<G%)p\-"?Y"pJQ-adE"31<k45;_&R@!Ong#67ai2<%b5%MS/;0M_R9^-K$_l%]WhRMqA$1c%^a:9;=Hg0%c_sQ7K$23uqc47==l[!?d%Pd824G'*aMG.?jum\siSgWS55Go"0;%X7N-VNr7JET`X#nH[b+2DQJjoJCi:pdbn`T4E]^gHYDdlu;,?K"oJ=+3f-2MsTqQHPEBE%*U^DR4.Y_W4#br-\*^B)_n@`^h<])B2a#1,iCUAn4a%?23BQ$IodlTm:U7lT6k>ih0\,N/HS\PFp353KSn"1'G.=(^5"oJ8bRXBU%@A]G5m\[t#T,g+-?Da)1DWcaMG@%qbmf(2<KXeU?N5t\Ylu7<W?#9M>AV]$(NGIO'Po]:Z`AsLUn,Zn_ca(FjSZ<mG*@[%Z;<`lU%Y^nmfOW>Ad+u-f#ik+?$JT']E3W'&RqjtJ#^,N/^hLMM=f\534_LqB,"hFa0<I2[+<P<W-qN+V;p1O/"lqj[O,8^fVb3=VbT]]VU%@r1euh[jFD%1LM1Kb">"=\3uIZlR9g^3!.Zjh7kD'2Kd88-cfZ+eU/A`Q`1lMql)h1uC*>c&X(ift2k]*O,?F4EYR8IsWWrnZqf]%L]$dOhnkm*8ON*2r5#[e-OMn\ScfP]NB"nl#s(D"Yn/k#p]_c54bJdTpVD1%`aU?nnaVe9-TdK3>\:[mQE]7P!H'@)88K1l-[^kh%D]_B?a$%(F&3+:^[O2,>D&>rQpY-Z'(kL<I-Em=B'+B(;)U`3;B_QpKm[H=W[Y&*K"H1*F+1TSp"M4^GVLIjg_/sTP!%BY>fTW-q%g\\[6M_X)ss+83A0me4=GGH:A*T+Wh2blVYg$7sJ;JQ7pq8Sg,\*VLI*j7/!R(WFAlVXeJkWlGC]RAJVGsn"QLD0+HG)sJ^gK,oC%-brD29rTq_.dFL@/uX(lSU%Qp"=HqdL>UqVM6Y>#<%p5Jo>Q0hOnpcI-F.#<INhV'g"Ymrj#_@@D+ob`TiIlXX#ti#5,PIffa\i*%T:jRQZXEl5@pKpqiY/50>psZT:F,(h;]JKoNn:cCpET.?VM;u?P91KiWU$($*@nc9h6^C4$$*gK,[`*F+N<Y<iq=tJR(#8=dirJV%qB-/AHE%1k>$mgANJ5osDS"Hn?V$+:^bcg9oCt`fA[4fG&Hb1Id^]5jSNZid:!_j]_CoCDKZggFoX-7k/UF7=O;>kXWtU<nB[J[r%FZHRAH6pC4\OK+:?OI#p)*kl(K(&u[>mNcESq6dd4:;]#6-l,/Paf7S/rlMd3)TP)F_cABlG2c`VID2SkWTHpP6lA*-T;dhYBdAE%\,$97f)9YgK@8EKa9IL[+O[b?#Te3@]?&7U5Y-Dn3GW&naCK`p#N0UTF0hg4J'8+:$Jf/$Y%,!PF]?rEN8fA3f*5P="8@#>BA=Yh%iQcf>^*!/3e9P3W'<uh+mB7%7nCjVtlLF]-F?W:g_<q4obZg_'cn%+d\XfMZ(*X34)()fU[J\uQ@j-kk.*_0tH`?*G>:o_CbCF@'%nRoL<%\[6%ZaW5pRVllniuA]!rLeNS6nOV8fCBVb/r2D][6-MI^6a$K[e+FfF-Xj+;cCl,ILU%;$E%RcXS&i53>@Gnq]>7bTpEaT%=[,'W4;(N0A_0pX[1"`q"`_eAe?\gNDZ/++i653U97#jt)HJ),T)7]S9@MJh0:aQXrR=`l"!qCY.u@cal^PXOC2qT6^C:b\@4cfb%DC>o++R@]f9k++55OSj!@!@J(^!)FnqNW(f&<-A%K15aqZ:Q,[&`YPd7kT`nC&[T`E+*\jDC!#c#'[fl.up-pkdDl'(Lb9EfDV!K%T0>qHf7Rl"@+UsQ"ZEQ0/rteAEnsnU_1;uH]RL_Cc6(&q[$;Ep[ldQOhJ2AUqsJMf(`UK)HQ`U,f;mDiB7Bq_bWYj0:=N\a8&XH8%A\PfXq+`k!M,mesoT+cL!9ku^W+j,o`n0Hb@<pgr$^XJ3+nsQJMs8-Kq]fmJ_+V'imhloN=+<B<X4rnRXqnpsd:oIdb_Xr9S$Q:,%,QF-an_G`2ib)/8k9ol6KUF:=*O&/F.g9ao\?gX0f#R^P4X2\fd*LT[DIs*@X-fr`9%A=N2.,]lUi(Kjq7UjXQAD@QjI9X:X_KBB%O8ZIe^D)MVmaV_eH2D%LIWf><(S=88cIZ[sT!d)G`Q_X?p=6f8>-*.Z'ACFQc\qd&4aQ#]H9M'`XBh4UalD7(onD$^I(T/5X#I2)%f8fa[0>$bNQ^@&2r:<\^4T-n8XM725m?RR>?70p$[+OWao/!_T>&,]:b^Z_7muJsM/*>"EdalbBpJFP/4l8p@)]Q,Sc??3IZi%1W%4<nE4)_:4hAOe-SgKR#'ntmPrcF$E#h:%RK:8bgskk%*J5[&=I=&6t1q8c7+0BV+-8I@J:mkLH]NtsngI62eCC$91[,^C=uH?ffN%e>b#O#;3OQF.b<,M7F\<&?e%:R?`MIL>C$2l)(9)in;UH@S`[(m>IC)F*AT_7-3FgCAt-;e'q,:Z'h)F_\F7-oj<pSb6tT0ik2PQ%aM`rP]*F7t(]0\Z\T"XdW%p0nbI-n!-HKPsCp#(%&3,)NrTUkT4'5\?-F[LBSI,+-rM@tk5F<+[ZcBV`rj5VIm=0'3m\JQ4)afa8%OHIRJq,O2Z1lDTOFc1SeF:NVjR'i>+''!fuFDS"%6#-$MZ6.fb*R%OX3=U%L1XOE7bcU8@]IuJaqD5/oT=9(%`V";$B(br]G%N1#%R`/2X%e*tV-BXUP1PrMnB:Pj$R7-Z5EFu&11_CaCqY]o(0jb^IFjd^I,7@Llncei)^%P_/!9nj:"J_F?^sdi.hO\bq:1lH_h)ai<%W,@'gXBN\WAnH6NkL,?+]sK*n6MGUG=$D$m8K4_tek5r<Fq6([c9d"2YDE1+l".'0.YuDlZ-;t,P>TDuqk]j,="Nq^5I\#BC;*T6%>M`LIp]@lg4R<ZX8W`e^\Xh#N[?F0!N>"T_N5)8D.Z=8tfs5UgDRGWtBW03lGDFG\S^_BI1]Nngn*Oq-/$W@Akdl@Ud3Gp5lcX!(%I@7^6JD=3bF)So9*p[6lA?>S!F_=(2koa3KXg7DTps.8UVU8XB?t37tPA97G-PagpV<>7FdT^uF/@Ag'gfrdsPXtdT"c024_fkHg%Dbi<<VQnU3Yskr>1m@l_W:X$//+Nej_'&h#a=D7,a<+b.KpgK_6K'6iE2`H`cUF5%m8X-sAneaKdOrG9DAADX#Q9pYoqNBe=*JpB%GBgWq_qT7SJTd=pq;gTt3:Lf/>>%(h'X\f+,f&U82O=;4lrWrDOtkdaBB9$CrE0.">?o:P`qkCc^&@oZ8Z)NLgY^mkYfkVTV7WqT%hGs0&p*]P%&hqDlXBe9,f01;)kATg[gtUQ\9>31U[8"5aYlFdo6N6.&<EP9bY%VmUgP^GjFX&Upa:ek@bqr#UaG)G@FaUn-FR[r!%ZO!j)[cQ@$2b"sghFg+)G=RA"'F,SsJIZD^j_IB3XF8O#ik+%KBX;c?!?L%c[N*)$(4PtuXML,`SF(FpKgd,=]5'^(R5K$,duPK:%7'O_g^=VPsB/=c#0F[n&GOX<l!.D?P,Y4uD7Rl.Cq'#T7&6j>f&5BXIoVn4f@$=N+T98q\<AN[icLorB%1(J&UWhEIY!A(7B^?1?%nGN0Xn@3[A9:ofPGIbWiRHot?n%o+am`hTHlDo)PFL>%lY0Gkcp)>M0\[PUPM[D(^rF-rAIXcOSrmi`7O`2CnpQ7J8F[\]c<G?NR%0>6dk[$OC=f6Ad#bAF-c`eWZZr(?q%Vp/dK?Ud</W]c`9m<NAj^PVl/9ucc![/"g2?d$,1QHEo/e!#L@h;p,Z9n*_MhKmm,`nkXc%%l0E>_KL.4=EqNn97nsAW?=iFdMIc9j6Z;J1WuR_jf"Y/4$1-u<1<bu2D7PkrDCk,cYh,G4A9MEg?ic9J$/D\#oqeZZIPGpS(ub$%pB?9?<?X#=k&[T"*ur+F,.CV,=@g+a(U!fkFX^DXDCZ->1Q"c"4kQ(+FOVhRXBqgON'26n%GZ03%(.%IbB3obXr+0;IWgLsD4"'+%fan%C`FVo,JTNMLU>@]6X3FU%IC6<Y8ueP;8N1SWSV'T\G'TL(J+(Y_aN"KOB&kK-CL"Vl*:;HbU0jNU>f+O*WN`Z)YY.A$.8-5E%YLc_GBB'FBLeE[5TmP.O[<h.I2n&VYR4hq0<P'uIA!nk7[a`#<PDgc4OfR<XAaAYtk"FEuiMpC+&J'8gAfAe_(%?XCi_YqJ!'43P%_#$d4mAG'lj)g^b?2RQ.WVZFP09oLXbM8Ff'WK-"f3^V1h/BM9im28JjEX0<:BrKM/5#*'m/+ib$eWqm9ih]\jTpTnBUT*UH8WID%hYOt0SG#S2oi`irUjgpE\+NdH4mF]SHNWUi2ITfShaCZ1kJ1?P(K1\n8HEo-kB^dC\"$YW<Fl:3g,R_flaF:]_=9go?RhYaK?`e8%3IbA[4rql7&[P*E:<Xaq?B5nE(2@Z`P;[3N%0O`]5aM9Bb5EYaM<CPD2EJpEFe")4YQ/4%6nFGG0+"E<l]p5C:qceLZM(/4I[9a"%ji#G.WOMl8[t^KnWR*gu6DLA\s'%+nSGuiWo3o^C>ep6G=^oAPG:Q</7Xlo+`7RVn(0^F"?&%$9HV7`<gAU[&IG>s`8':=;>:_pU%IQci:$d12MRud+L21eVRig%`%IrPc`fO""5H1l#lmX-r"ZMj:tNs#5-/00*j!Ff46l_&_s-kLW(=BuSK_RH0e;Z^78;Lb;@l+M<A%oD>iok0)RYqRk3^c<%`/9X&ll$1+Ze'GE1<l9,FOSQS9*jA;PppruF%+GL;kpjRH:;Neu*`SK]&bsp%*(@o#G5#cS_6m5mfQN/;i%!t:pWO%^a_S#>8nq>aU$2?ODYc_f#`C7f5%]jDp.5U8RZcZi'4dE3I\5KlJ.[C4!(X(4Is,Pk-rjl(Ssofi+PaK92-%^!9i^2[(R%>'R(1b85s4r5qkLj0tFYmP+5^"'7ZekMODJA#T_8@(cfBn*,ea-r_8>CKL%PVXcOt@IdlV[TeP(l`$.$rH^-oqNY4/eR&.IKpUXd%@jb94Q)k4s+AeZ<L]ema>eN@R'mAfF@DM'RoKo^c9%>"=G"1d<p,3:3NO>1F<.;NJ2V/HQI"#.$?u`jR$gI-0.R3OgrH)up5o=7N%H2(ZSI]"."S]r/rgqRI?X7'q7B)*W*nDN[SAm>KI2P[C3\(K\+k"@7*EeVQop\`1So0%-P.u?&nl^ulL=@tN#]d*!r1Iq2A>N!KM%,H1'lH'".9b"h6_bKQIlgN>2\;@DW"BBFaW&r`/\(IG"hh+get[E\"68knMk2V1dJc%3S!Fsmu\[i;)[b(A?Q&&l*^"a<.7Lu/r`%f#]8ILf$b:9,cXZ"SsEr%JOOcSJ=5@[COdhY6-uGB6JaPF#uH&X48[[lAJ%9k'j]:Z#)b#K],'tr=p@9DL(2oSp6Nkhp2+YoNjRt%6kiqIC@s^P44;]ck=Eu:F,UhrqH.>nk:i2lq`>0HdM[?1iL>&u3%rbqI6S[fX]W*h's1kB-7+r/lKG44cu&P'qM`Jtrh+WuV!Z7P%p%Om,-TN(2<Q[-.f"Ss<geolPR)(9VNXDthQ;Ug?[<Om?dV@O.eQRAYKtMYKmbF>OAmO;BI`obsN#_,^H8bKu&dDo!Wr+.WT<%9r%X.B-(p%mg<q70`*<HQhdE$0<)Me-<\p\&bW>Ma-XQV?hNXpa!&1JhZMg"+F1l1OpfiVBb/6@QaJT*UDmXa_t\J="#XKm&>'M1OS6%MdUh>+.grZ7sjuDd%;%ZV6ij/Ch*G@>`eYSqmkOS?H]:X`3nXiHKFc9oMDfH2U$_T!_HY];L"!8d!lcNBDgFJ&cLr'dR+93X:%QQ%((+$DHSG`'`mk@r.O7R(Kl7#*aQ*r+kin3WSp2/9U[SCKVjFrb<&`4AM;QL[S?sobSN0hJ(V_W[$e`[JQ:?5hOl`BTI5A4hg?JFB%oZT\@\SghCAU,o'gdi<)3/-un[s8!B[FQE:hi8+@j*f9'#Ie@q%<RNUVah!L3ShFG)+A9`SZ@^r!MZ).Fh`#[e1$?Qs-aSVdG!@O%#sZn?;sF8)7OgqG$a"ZGnW=boq=m(7$D$V?/=-W5^h0Xn6Vep]4JDD0!d1rarocgXDDMa1d+>N=8C'XG7:L/%n,s(ohL#Y@;C%!2%2((\@RLga+a^K_:e]rDaEFeTg0S'q$pMn@i2@B?pRef%f+[br1O05$oL3t?Q/RWC&,47Q1nu4I+c[k%+5'NFNVaq6ZG7/&u6LEuf%kI:0OHd-KH7J(EV3C!g-8I^aB=3TjLH@5ELM<Z[^9M@!L\2o2oT;Fs.rTLj"e,_-ZL8[!V%mBU<%NqZH,J,l"-)ZYS5N0RGp\2]n%>O-Sn.hjbmW@&%aZ\<USXbi)sgR=O,=]&:,f[V%d#f?jVf@P4BG4!TCmU\qaW0(@'p9*Z-Cuo5%Z\;1V.=caZ=gRHKAdf"1S[qYA%*q)580E\Yj]n.E7$SY2,3O&=gYB+WK:Q*o8Xke9\Tr!/Um_(aH>pI8SiI\t5[Iir%M,=Yif%\$FS+Ku7-.K-ba3+?#%uZXW_qCUR%_qR,*lTH(GiGlL-lqZhhWLcZuSTb]d0oYr8fOK84e]7%GWf&Fa`PI(*S(Y9qO!;0K1s!A8g<\T:6.4tT'cUM`>rHT%\<"PJ=?i=j%X#R2#oJ#GE$b=Tmf6h.TjoW9>$fL2_(\u!Ciei5NcO3C$67fVGq30uQpZKK%B2,'anb*u=AWM;Ck49<>%_SDoI_C2S/D%u5jrF.Q%=7a!$`pJ]O:CODTgnpQfb<Hd3REX:1B8=LIQnr^1au$-KGl%"-2@_RP^OIlHY-j@i;>0BkZgdl,IrMc):QFhK't<'q3!hR13`a^E%p#63n)!,n3Qca;i'q7H*f:2KN9tn:0*Q'?5X":usZZYDd_ecF"msYm1YguOQQ+\KLNe&,EU0,\Io,faVlJ;N5:,6h_:Mb7*\Uq,2%%FAFQ2fX%>b+ck(7S@MIF:EmS@7Y$lM>ZXMAJ=4&Z.%oJCQA]R^^TgS8#03hJ)7NH)OHMQS'4r=[T4AdQ[gUR1#I@_X)uCM`^?TI%L]KW08;nSFIrg*8A!He]7rA4or[S?jH9+]^YD=F_'QlZ0`cqGk5I^[k4m-pcT=$7+]6&H89HRq:__hh5S8hJ&`@3jLPn=qB^=S^p%FO=ajJc7I?:#J(pX!Lq^k9>7tSj!mC;mM_+4TE@b.sOY2jdOUTAPLsA6i:k<744GtP*.?`$SL!*0!JbAT3Jojdt^1Dg8e*fk2e,&%pqbQS^E1LKbJrDeG()CKoQ6:^2_VWWg&MEuMr!)C0"=#V^5c:W[FrF?=^a=.La3*s,YYf"hRp(Z?HBD]nG[V*&KmRtR)AI_ADShr%LJ4NZ0+--NTpRL:h7&.T'"!"fHCqsU*j!cn#H6(EHPN?r74c2g`h.J+L$O#irX%`6<f1TG()R6rfI4GHePNdLfdahZW=2fANicst%kS1_+JSlk(FJ5&8kg.T(?pD`;YFY?E?4iuS]cDs/^#FEVpZ^OZa%CISW[JE"bC9*0Dg#%Gk;\GPj$F)*UR[Mo)TU8S0&'nTO(QNI%@AN83?>]d:a^4N@!;bBDG,h(Hb[.to)TJ:UESrBggX4=CpK!S5SeUTJ%5kT?^OEq\LacP[e(,;-Q2S>Mg2(#T`5M5oIU%sI9>0u^%@J:mcI%qHC[dTZ,PF;C--ujaOZVg2?@hf;JKo`cN4]biOT?To)UI[,_G83+P/*_PW>%`bS@'X*e?sp?$W*bU)l#8H7/=0[[%74-t%dYVct?(A)<dtL3t=/-"(V:>8C2/tQFk)Vo#L&&+HI"*tLo=_p1Zd[f>(JdjJG>Eg-3]g63Q6d;fDs>4b._9Du#4!S<Q<R.p&s38h%M/Jf=[p(t2:22uk=N_,2>cF3U<VAl5&=Djion1Er)ibXBl0KTsfQhr0O@9\I([,ZU<5D:<V]5Y2m)BBQSMXB7=\df]nkD_Gqkuu$%"absb2"P"o1qp#s@%M2\>NF>2?1%+<cKF'816(qFl;7r@?huQ#/9=1*dr>u^c*8a<TPc+OWe=.7.'pFfnHK-gr'!qqG_>U#p+t0!%fif"q$6^pmQik,;!K_F?d,fKT!_GV:O9"4\hCE0B:S[FU;Ol?V^.p.oCQWjAK3jdhTqB%m\!FSQ>?o>N^VmhORbfmL21,OT%Lih?%J>BFr>F*qhkp5U6L-5YF&3:+#\d8MVqotc-fKZK<<DrY$3t+\mhM^]f-hhB/Q=[$pWnk73o9hfq&*"282P8J]^,1=hjn;L=r*3S&%VO.YPoOe*mnEB)eDjN[Jm(YXks7l5ed\RIX(rfJ_Ot6G/qk)aCnB*hrhWr<^](GXV+5d+nq"!6bhKoc:fOakGJ,&AK=)YeMqIs)[%rC9pq\p8F%o]sM<(I'piF;kn\VRS.H+611=?gKo`2u`3fDgh3SO5bRd#KX^`m[DZ^+th4Aqtf06o=1F54RKoUd=[Y;p]#C9mLOMk%fg!7Gb2,dXhX:8:J%9^jgATd85IpamrGgrUnUo<F^\kA:o);:K5!COPHBD(FpMSe>c(A9$2id@6.)6U]oJ\q.93:hRl1@WI!p*p*%HrG@QG=5f0/)U;\hjZQ)IAsF-r8l1ec[P`inosPNGj3ZP?ht_F][;4pY<6ml_::&kDgd&O^?_u7ffXW-rWca))]a4kqb-+%IK,jr%n'8\_T&4keo7LiQ^)Webh#I5om`LmJY((KZ[7d\DDtV/@bgbIu*ri]=&P3S:.pN#7iVSro?O^pZUhfecSPMIqs3b-9]D)=Ms73cd%s1s3q,c]h\QVN!T)A\]Y`Gb\=2qMrEf73baIA[5K;f2$7r.iP_V8RcCQ'^b#D.fF=r!u$)c8deT/%`^T=0K:6m]6A8jn:pf#C,*,%cp*Q5J`-/_i`eUn+;Y>.\1n_DF7(s'eKAn)];l0uPFG"'^[bDQihu7Jgo*uL_lmrb41m\j+?g.8,G)T'mk3B,Q4nXjF_Y-J>rsi"%m,`HgQX3i8:S<2bo'/"j31[f=?MjHh9/k1W-<m(!?@DG+p$5\o^\:bh@XNIi^#`RI>#--EqPNHMb$j>irSrOnW23FoXJ<^YCA@AX%bo:#^Hhm1)`uf]?5.NXSfuI;eT=nlEIdcESDhrpX?i'BgIXR]V?QLr[SUTTXO.Dm>kI#BO?QW5jGAurl#@G4+I+(6>bsdnI%=r:B%f:`o&$SCP,Ip>1JIC[+;qQF6j<+jgRpL\WD.a%d4'!(CWd\AIQ2V@uP(c`$(2)qk\HPmER#o^m_j_4Gdq2>"9*^=T!]6+(qgXj/e%g4$b^^gjs*U#Y%%IIl'?HuhS8?R$NiFd,(#[%)eY+<4XBaI6jqE71N9=0=^\r.gWZcT_9EP^d==KYQmHU,'CNq/=m1^&>o?p#E]_%@A"Dh^.j$QI!p7dm7d&lpN8GJfMUb0Dn48s,JNr.fA=+8Nse1$^(Ep0Nh&>I5$.rjh2#-.GUg"qq;mt%T<Fl6b;]6E^2rCk(Z2nT%O_QkbePjep=-$_'nP"6*o3^j+WGL!)Iei;8`"F+rrqY>>^Mpm%U%)Rfr:K8?HLT=0H[Tr1qSm;X^OQ%4[7eP)*$]jtrLK\oK@&%&%IJ<P1msY+TjL]egrpoR:nqSjmXM=Ma>MR[^7BTn+q9D'o?@:jo#Cj**E`(`Ork'6k(4-!V04$h&pu-p"*us/u6GG]rpd.')gisjn%+GT+Tgu7)H?gX7KYY5ef.@G3Zp%j#"s6Ima6?u`sp9>^.?N5+ls&/UVKAYEDWpIeh8bF`"oD>RAIeq38Bf+YUFcP'ep_Z??WrH(/%jM#p6WaF`of"6G294T]gV'6?#m<c`j=d@nDHL%L")GcF=SAE,!Fr2.D*^u^OO'F#B^A#q')ssQ&8^Dd:DgI5TLn_eO5J;W`MSmm]%OB,-Ll%PBGao:d)jh\N@K6jlfDI7h_)n)m7Ybq=NIsoPFP&U%"4SM(+/aCr#?Fg$VG9<*pp?(UWg'5l#[dU\9%O!u_k5g0<?bLqR%r:/Q@cbK>UnC3/YrqRGKbHF&$O":%V)K#HXrp\33kC<C%?hhMX#X6#reG8jQGjD=FIXC4+q(D-lTFD&*\.[Ea7^o]\C%(+K<JGu@%;YJ8(P;e!$G4C?G?b>o1J,/s`=7%i?D#XABEgeRTB(oYD+G3u`hgOeT5C[tH_pYC\X52.qU'mK4[aOZoJVNM`]CQ9*A\Bd\lgX]0%QZo4:%W=SAM0$[R>&M7>0<QC&rVka+D'#ar#@=k(ht8[Gs0FXAIf&]tVojkVonsTLG4%@"/9q-(O'fWuip54b+V*k,fBnCeq#fgp%mk>1MXk1;_XBQbOLM*g'H2ZasQ[X5?WI&3NV.V%u0YVjN\2<&go@&W4h>-"G.tVa7Ma%[s'Dq4nQX@\qlJA@556&Y2=2.DC*jarG%C$Fk(V+]FEaeYQ%38IYIWrA'T_O<FKX'8Z?J+hIf]@+6KdhU'UGlF5bomT+)k%gUH3P=!uB7@R9p%`NDr_W=A:O^(Tjm>:(ZX*1J%ZPQshJ%COLR1'&-;>Tn<.i>?\Q?.0@(Q')>73`-/ila9AI_#C:GOKs.q<k)_^Us@@LY&S%U%)jK56('D:G/8%rQ@'QUQraOo>cY+%q`k56YOG?:X.Q;.&XRt`J\3(24o`WpQX%kPO]U]6D]7*D.-c8qo\IJfh`<m8c!Jd7<rKT_QP8u0?OlP]rT'$QB;oT1>eemTHq>_8%#J&`q4b*Do1BN$9p?K%irN8I?B*4bCp=>M`:]5S\CZtQQB:lhbo@hamiGD/?]iP1*"2=R38PUQT22=u2Pr&Hh+6+U'U3f4iaISak%LC_/!6"lm."cks]5`jI(TDW]hlANEtkGef7GeDPF^PnL?Ia4S)*Zc7)qT9<j)DCd:Ih490cGc]QqW$B"5-JE90@dc7p%\]2n3/Cr%m_SW>r3l3o0`M'2fW^no5Q16?DnPnm2uRha"8U<rYjUeWs18%CDgM<FnYJ&!e@rZ0`oWQDql>gi\"7ri-VhAFk)3:N%ap\QbNF=$%R0!/>cahdb=iL(rq>9F*j`#8%-]&,0&RR30k?dtaB,Fe]6MnlqX54^)?J1/^CY.u;.p!PKp8;q;HMP*eQTdP1]m?0.q_u:cTdtK8%2ts$.]m]SL:Z).W<84-rIK]E=D.L]CVD#>'qB.KZ]5*bIlCTR'a5q6^?KmWeQ['fgqddST+9!jaCluj=mfsXMaX;Gq]na4VESc1S%E?/\8#s+#h'Yj\#0(G2or;-5p=.U!)n`\A92kPQjm@Ea?k$%c-!$Y4sm#HLLs$?;2R;VROUXr7)HCXJY1SQ)/Aan?GP@oT74Bei7%)uVk5Dfod_ftS9fnq`D\^4`-IeB8s3n^ueZX\23>I/NK'cgEr$*'J]:D[2-sI;uX#p2>?QT>kc?'sY4cdD^'&55%i_]!g2c<^bP?%B^?taFIa;sKcQR9>q_g3s5/`=Y$_4t9rd[.%VOK.1HW5$PM/j!;sH9C4c_Y'DO_HeZo_3qhW=+YSgC;LHY?797Bp)\6>qo,(+"+h%V4F+DKIpO1lE&asH(:#qM\+*&>cnleU3_%@jn.LtjUfJID;=gtNd+XOO94%KQ?P@d[Q)$LVZrhjT=oI5j"I&$j)Xq_]q;en92<M(%LG+'CU\QZ,j$q5gf-#p*kP[VgephgM5:l:'Z*XG+4S3"ArBGJVs5(*^6/MX"O.5gg"SKOPqg[t6ItTHQA`!GsBDq_3Ou)_/+$8e\%@I\i4p]&lKrs6L=bImkqcME=Xl7_c.?[UY1J,%"^1@P7JZi8-Hr]9NJ`Q-7"7p*l?k5@Mfepht3^Wu_+m&Y],p]#-9J\RiMDq:M8%k5@Mfepht3^Wu_+m&^4f1?Ka*s,W`DO-G+<qqp%0?%1h]:/r<h<\=G(bPk@Ng\kn@S9t6Ql,2KC4!A0BB%VfT/5t_=\aoIaCS/##%25Dd1qY:!7s(GiD@VgDfqXE@l05j#N"&6o!>Q(98?.ntXPe[$rDTct3FSG#1SuZ95hc?L42pBb5AlqQIIK&/&MI58S1u8R(W*S?!%YFhf9p>XQrYe0VG5OUgMD@^Odhj'2ZkN=Lj^A-K+\_4T5r/0_,HS6VbqlOi!_H/C:?coJmhRWLBmoQ,Cr:0)tr_iLeK8Ge-n(AJ7%L/%C:CAB(Jb4)$QTRPtR559q/)"3`7rT]+%Pu'N"E;oi8Qp*_fgHAcUMii3T0(o+frHu;i64Reeg?6Zp;ALmF*"9\g:OsV&lM;Ig%rHNU852GrF&W@Ml?u;Qd!k#\T\oR]5(]Q%=d"7oT5J?dHdCiWlDGU:Wq<kj2Iog]aA]8/3rZ#;FHGSH#.#Q0$+0M0HPJ9DHr:f];%5PsaSDP:3\g8j')rOZuU+^I&9s*3qC.gHT6s.\jDT00>BFQY<*EqQuTMu^P3kFZ\3CZjQfe5V5?0"u`+V'82YJ,b8eQLE5U@%N>'%^VBQc8,;1\=.[2"Tmg?iJ7tH44H?Q-f"M+\qVE`6)SOu$hd69CQB*?HHhQ-EI!kgP#:NC=pA"%:gHXKljlkjADr9I<pZ9/mr.k<C%k5@L)r@j8n`sD>$qn7&e]AGifJ+Uq@ZerK=l2Dc+mN2CJpYIP^n,Ib7AO'V8GP(.S=8$"XQaYe;[]f%i/%t2]/Zm3gSjre8\#"l;%mWJDnb5Zn[J+arIJ)1+=p:>m@d^7mPN-t?8(oLL8?g@Mnra-aWh"cG,gt_5&j5jnQ/jJ2As7iQYs(?i6IrG@f)r:KF4QiKQEL78k%SDsO%3$37IO8Gi49b(AOU&<rWdOH9uDOgDR%(UJZZoZpNgX4lK]eRKY0]dnHF*X%Ea"pV;&46kX%;Ec2S(R/:ElUu\UEB4`9^s6d%e%e$HMaPAb)'"67%gTY;,I'9$1S:q!2gIkR.(:/Vagk2p`k"+pG2!l%3#m%he<f?OK/@c"lfk&q?ZQ05H24!%`2gAO`O-k,@d>Ch%<hB3Qp;H=k?[DU95@c,/+5]0Yp"k=.DXIK'j3:qLn"8IKFk]X6H2l[kqd4_Wk$nbi5o=\"^X-Whe>EJ.#@ei1'?5Z5k,>B9D.@e`%;EsC#Ed-ln9Fe$qUKiO6n:o+u_m%/QL?N/#T.-&an#,`;nmuganR.scd'+a(Z("\0E5rY[-Be6gm'!%.\CnQ54=EuVfU*1iS?lZR%F?O9QfT#KOl@sq:(a?_22g1T[87?8SiSHP(A`_FGnu_*FTZi=&J`Uu-V]e!8bgQT!B,hD=.[nNKq-XQCI$o8I_uB0IZ%s,kYbE?I%Bf2b]ABJK[&=G5%JWtkI?579O'3^YURRZO-_5;JlXIBH$3R:gF"W>LQNcXGh(M<e:%Kg(B/G(s]Z;CPJEQJnGpNXNJ$uQqr`TCSC%EAC4!PfC6e,&W^?kLT\HML6sGq-p<o5MX")e"Jn0b_'5K>/i3`8-aU`*#4AF^(3DNkg8#RI6s=UKE)Vh5A`(eI@2@/p/>\LV5n+h%g&VN/34QS5aCe%;S$(jZdr[8HI)FSY`*qe)9Z+]rl]?h7Rk*&/<^)flSKab$4[J.Qm+Bd=%&84&+iloBjZ.<[aV8_p.+0I9P^[&0%,JTrEZQN1*p,ZuD?<^-P)'U27im*FG=1DQP7Zi%3*ZK8jC`Y<_L8?XJ$-T4HGSC"H''=Q*$G-1["No)6K3PJ>MpJ0q12Ba+=@C*f%b/7$L\?k&G9.CcCFX$BR\*R(k6HHhGLOSZr4TLrbVLi5f"dT[MM,o]eQAH$GCrm4tI2NMi.pU\;9^T-PKZMQPp=QQS<diY^-CG]V%OUKm\h'Ye+AF75<etM!5GJ!hW5#%0%7ANVEJn5hDBkAH<bsTC!$sdem?q?4c3A/pK+jRVG(;g^W;ctu!Lm\Oh3fSP"T%P:K](.#m%S>'f,lI?Pn=,9f_O"m#Z64CG!J\!%T;cuHccsp")0J1`V8B/hPjH*G/liH@]C59(tB<94[/?L+Ap=Bh%'!G+ilZ0UB2CTZJJWm*A%72!iS,LZ$)8Yf<)pruk*4"[(Kr'[F<Is:F[WTXI&Dk"n@QDa8p/Eih0Uo`%.)tBn8;`?Xo#kmg8&uV]Pa*VI+>2O&a]I,K.A'qW[%\gXOZ'C1G+0HfC8V'Rn@Es%Hs[Mu>e[!^YmH&8hPO+[*Pa>,/I<S<u`#%UF+\4"J:.JrABh.hA9jn#(f>=@$$r*h;UId@<S"CjIL%:#cj8LT>Fj(0dolG?R3!8PQ/&`/sd/`oSK0])L[K\^>)=Q^o#h,^R5;377]!EXa`P2AF,D9P$]W=I/R$p:T6sKf]a=^XH@'4ILVF%\K@Fn2E:'!@!s!gfG@78V)$+kQ%9Wh^F=?Yb%)/\6#raYDmZ2N4Gam/<K9g5V7X)RX^)9L$jt,IDJLN9-_g.6`JfU#.KjTG%L68J%iSj*DX4>4LG(nY6G_]Ra5r=Q\F:3d4MUOD/A4+>jBXMu\>n,o;LtJQ&'G29oh_,5Kn%.SB[GJ7?C?nX,UA7BNT]V6/dm+#j.,&Gh%qG_aLZ3-??+V03-WA>$:BK,'=6Uqq-lK)9#+[n2UTpZf5+a;tJfKc2<2T\),qh(G[09eEWBli*i6e[gJn[u6Y6[g+4AC?R7a:X'I%,;SVBHKHJ2jSg844S_bs@tCFYm1D(=M0)k&l\]jfSq!H(IqLKUPpo`DM!/_:ld@Nl/BaY=`(gdUBJoGD5sTJdf08Uk'2V-?rTCJ[%cEuR\<phi36(Jcmc=PHC;f[);m0#m$ksNM*QD#->:AV,so-B&6^6@C1A$ClnOm?hK"175P4p?dG%<4.XX24h>SE(dboT$bQBc>$4%L'jH^9<@c6NKfdUo0Mf-R-eS@3SLt^/=Qb7]!;WL-t?+<&JUG&S/\sfJ5Q>!K!Tje0Jqk:dOLKhM\T/pQ(;2-&ahMdaE`!.-bOfZ%foPf_K>Rg`Xq0i)iPQ(fI`_G`B.`6$G2&Cc^N,^bAOF3DM`NrGEmIm3b_jLDTtRjC\>,R>b8nL9288sH__Xa+;AKPHQ5FD:ZBRM-%gG18'G&1(VKj\EJb8+EMFW'k(KO2-\:p_u#r5$KPDOnpr/5rL'Smgo]I=-!?#peZ]1RSAO#7E/hZApYb18R,FL]JX[p/)Ei"/Rpo%Nrp*dDBfY"SKaH4AJU>9H8^Gka*AKB%63K-@@H7c,&0S@`ZVBCg-CAubr'"4jZBTK11nn@l2IBQP)BSNL`Y"KL>F'l7R:;AC=hu]%n1!kg0RLhoSZrZ*X(Au=<pQnn<tr8%@Le%KT/0\o#8:`Z/n`IGL=Aa-^jdI?jK/eJGE\ZN1M.hiq/u,/<m?-I"R:4'a"W9\\1Fql%)kR`V@t1m4k<Tom)3YFND@/0HQ]L%Q(`*AoB37pO:/[OACc0GHpXGHcht:,(B,O(NgM.+i_l<:/XB4dX7t2eg0!],$r*eS.K%45H%^cWD&_:JuUQh1L`NYcfH45dJt=*5A,gRVCY@-=B<j0CamjjptYS9$V?XRj!HB?C@,AWKsqUs(7Op[[^E!LB-QVKNq`]CO6gf#\@)%%@0C)jXeupqj3keS4(CdcXp::o!ITum[nlF1%no>@X[Y"O)`7e1\=XR0qpDd-PJuYa1X,rU`"'T;2-TccE5t-D`Dl..Rh!E=mIom%aXl[Gg-m74/4U%A$:3)JOq^JVO:)-#6_lj@E9$YZ9]ZO-,Bk;)#F!fDVkLcl3/Z_H#>>.`Z0t.K;gAOO=!mYmNhl7*!9?3S^oi'%%@sh$1qf11HmUFUORH@p/J#;)/`f;t6lY*W\Sb3Q;W:r)+ag*fpQpuX_``ipcq"=^-KE2sK,)]_6,?uR>RBU6Woqi[E0D!^a]gK=B%'6MZsiT@:Z%&_#F-VfdM6eUJn'=DDcegR.O_2$,-?'*iaq2@bU+dU]?'_1a%4TeIZirP\Tg,8Yq!2TiqVj=`>/iuYX25XIkAN,JJ%5%*9?b(F@iWCRoQIWhj3T/^t)l1D2;!pf*OS%;ioa4^iSANu5C^Pddp\8)bef1?HE:`fZGl8"'_*+K:#obCX2f/\r`0QGBVN9g34%Dogd@&M;X-NitnMY/oB2XD?e,/#!RKecPGVDbI177IOEYXX)e-33JVD[]!Af1rImrD_2sb@QQ\^9l@)h19V<AHa1eCgdA<qiB1#V%>_YBS1K&gH+S`rs"pRD"e9pV<HRn>/Me>P3Y%6nE.f:qK;ZDkkor*2ePQs?jb[N7WU84a8o7Z]>+M9,0D]X4:c?/t:Z['":a*UaQ%*1<!`O:rg$]fg\dUum=#]0*6Dpb^0.jT<;3A5,b8FO3=E^&WXm/Bb*LBYZo@i_4%&!"]th:lqiP"Hhf":P<WD<^e:S4GnHTV,)&G%@aP78+[gdre3uAM:5F)/B4i>h7EW:T24tjDTlR1XA]KJ.R<i;/7/Od5HVD'RE5&R^3/*VZ7>.*!?s(umfr)u`apn22BFl&q"Heeq%.p/)TYG+%ebeuLehP`(PeZ0=],?:V7F<+6`Z[(O=mo?(j*K[S&/-q9W0h6Hs@;OR&^I7:?hHa9G=a]:RpECF<W3:UtpO^SUd`M>h%mT&uAZ>N/+63Z>^NHaNa#Dg<.'ngcapWA:19JStK,!I0iSb@Yi+9Gr\$g&>i<R(h-T-6:Vf2MU#;/d&&fm'aq_LoONs2q+/<Y>K%%+A_hZr@Q_ibiRd%f24)an(NP"XDKaO<J7U#gq8A=:7XgELU$o#&23R8at&`_9kE_F2X/*gqtAD^Hc.#V1An(G]16rM4K>=N;*8o\%l5Mq1LUQipmJ>0>2k9J0HQ0]$[Ju/G*d8f29P&c?*5tQM`.0IaM+$"h2]\LKQeI<lfSs>OCcBpR*=oCo2/t%:#&^K!+W:OS['RX]%T9B$b,X)C?*Q4k7%*`Wd/K+E?fUsIC/G<Y4#0ke>$kjo`Ql2@ATk,']bj-OeJKh=GcBO7BUBRS=<$6`_jAA2[30!6Mh5CM\':"VR%K_o[RGd&QYTp?F(_HHV0Y04LfTpt]L/l'S67l&j*<*1GSd=fe;1uWE.'k*Hu<G<R+l9ESqVi"nX"2bO2,1Zp4<+SZ3#imDk5#O%p%0YcW';j)t#MBJpt>aOpqL>c(jk^X`+/#`X??<QD9&CH(;JepT*'.?EgF9V`]VZ\b`(qG?3!RMRl/9DG?`7"YU5"2[1s%FASH7+B;%/eRjs"A*na-nfmf%Q/uUd^qlI"opdnpF]Y]j*$@Emh-F$_PaUu6M+3fO0a:O6f=OgrPV79<XBt%OeT'Dchm%3#BfZma,fqCkYCr@%qrA#mnd$IPO`&&V!b:03l5gcu*$BnHs#r.a]'(c*;#[f._>M;eXW0tG)i[\lOUg$<hiq-Q?d9GKi]1)uG]2qg$H#!32W^ToYWd&g%Ab9q%m%g<G,JkXS9\3;Pf]YdueJX_H&m>_6altM=Cd6#rC;sHt4s[JMB-:kW6`6)+6X9gM9:UPS37a5jLM(3+?sj"h,1lQDPV[sj%Asm2q9SC;>Z5>K?0;tpOXJg;-jD7rt&^'Ma#_c1PSeFG?O*MbZ+r;'rL&o4omkm.tL[Fas3)lS.;?fUYeeDi1)(B!/\L-Vn'q]np%rJW9B<OYJS[990n$&22]6O'\9JSGR!2'DT4"rGQE6cr5kK7_bM%4h2<b=Q,3!(OZ-+%/<>2Uu4[ei%C%NFckRe.:S6K'roM/<5A8%7jdT`,>K$(L(REK-\c6"Ru0U&M?ELF&ZQbdTe@*SZ@b)N4fJB4=jc\FqXlR0TZ`qR5n=n]=bEUnb8*(-7A0]:`,^(e*t6XVjHt6c%Nj')'<b4Ei:qPGP.\b7QlRLI]rOhUeUkouWH&<U1\R*femVVSk]C5K)@jte#_!m]d0O`0MK':CZ_P2S"U.j'sel)O_2-VV&[TGPU%*;#=QQouZ7[kVU*`J(6(.]->Y]j+WM=mSYYSQ)_5+HH2HNEBUOrPCT!7/VtO3.O]P!?jADGt>-^8MRgGJB0GY64%Z0k[rGmJl(;F%Zg/X&e&[>r#F-r06Q(uk@K]8c1t-)4'gR=21o0%`a^t)]!l5]R&=6nD`9&cmQrm`0'YmlJ1l^"(HWeNWk'e)!64qfqko;D"=s,RR%$8Tjd$c6#*Uinc/Nc&')i<F!A2@8_+jk^!7`&j<VP?KFY`cV95&Ia3`W+[FoT;:[XeC100LiLffiZ2-Q%0jlj3K?r>%hRF_b%='Q%ZWrh![.:!t)^7B]k`M+F!"U`E51rqp=9CBk\S@-]+:RgC,.SA?4i2>EV@YF>#JrTs$TKNM-4*'KSk2/4>fUXm?qd6p,,V>kjOiF:%ZhT<,B]^!_fb1foE].FMnr"d8=94TKW@5h5LG*$j_m)9jV$<)#[#l\\$kT]='N'ELWcAsjM"o,V%SK+-$l(-a&l/X`qgHW[gLW/J%!TVoHR3tEW]7@utAhg1HFa-bm0E;]I[t?\7I`pqe)-pLtMoH.l[#"7#!/[S`KN+Jo'9PEc5n(-(`=+g]?Y#HI0p%tR)oOo_?OVbS%F,5nhF!7c^e0SQAa'TsQfWRA>kXG',c(@QHAMHuoN(GSS1kSgjR34bHr#Tk/`U>c5\IVL*EYY[#0SFYuV4s94[@nT+&=iehp>2d8%YZP-7/B`00_B_J,6"Ge/bbH@Bk]LA_G'@P#&Rb);&:"2*0JW[[=.JsF.NV-S.agR!kmX./SLVc)N=rT`FY_*;/_Cc#[$o-!Ya#LM%Jn.J>30EB$e51HPE*X+"^,]U&:pHbgMAQsKoWlgYJ_`XFRti8kMOK>EJ/r&6;^I\Q+JPo'KC20/B#pN/bW-)b"%*#/%3ElgMuKMb%V.m/a%:HR$@_]a'!?dgLp)@m33D6F^OZ@'fN*1P\J<7*-5^^k0aAF-nEoO&`0$>JdJ.7<MV<mgVSMhDc'5>O`)/'`Q(p9>cF:)4Y%ecl\J+4DY(#Y9^7RYVeQj'98UY]W=7,+9bid1j6L`(8$nlk6[k!K%T;"d3`1+9NWq5d21/)07IP1eq2WPI*mI*LI(O%Mj";acRHs%"PZV6">o,L16FUGq9Z+N5o+"&H*G,/AIkNTD]p52!KOZBg3T/t56I(G8a_gOAHkK]ab:qNknK6F,YA:Yln;o\3fnm^/4Loe2!k9o%5(Lf\F3J3B)*"E/b6r+'.+`1M(o/AkDd[.jpV_fBR0]]7%Qm!E*$T<F)W]akN9`r9o>%kA!g0!X+A&ccYF]=O^iebf1+O01'>1,+%-DYqhTq`jXeU]]<m24GLp,98F;K+(*^B4Om*>$Je08PV2UcSW90Zp"JWs41C$4^GdR<fulAn@=hF]ioIg<h7X:A,scd:D6J4VBIu%<^bA@\i^2-NZA<Z`uqJg9Y>r58HD^Zm1#-_+CIW#Y`TcrBqd-6"<t*L"bH1HQ^.4uNm];Hc%/\(?77m9LWMPu1e?O`O8\1?3)F>'%!9r#WS@+k#\J%h_)u'A<RZ-n2'VW'EmT/`i7A)>s\u<\]:!c8&&]!U&[L]0OP+e@e=:m<EKL6kZ,[)j8]!r5>WEq=O*!e]P6okf[%'#aq?\WhA>.WS>ZSdolRJ;CL02Er*bL2N7;#t.^BJZ6<K`0<MT/Bsa0BHW8u,pJt(5gk!4&<GuSA>:ZI3V%"l3E:#3LJ\O_7Bq1O%$b/gR,lfpRJ5!7UFE66)b;_Q4&4UgUOb=9+8Za!u<0+1tKO:0`)&SSa+rjkO-ohYZjs2&Of*LOJ\']g#1=b<7UGb2ThT8tIeN%3T%B'r%n-54=<@WmVa7UJ@B0.&H^.QM;Fdh>:g*=)qWrdcc9!R$0@];g=cW+<M4C:K32XJ18/b8^^17j==J6aS`+X7@]#E^9mZ`01>%%!hcP#,g%9t,(j2b3!ZB^baLagc$#ODpb3i0WO`?<TqAc,aP>Pofbj`\bo1#Y5iST^[jn!]Loc)fj<t6u*2uL?HOTKS!n\h#(JQQO%^$$JX4mZl.-BKkLm71$I7+tQgiRq\+/O>-t:)TuWfFSl9S<.h3Cic:SP_Tso5]/kjN^V[KZ#*2DKB;nV9Y-MR'[TZe+B2'u7K<OH%8Io#gb#$/jZBB0#K@2>uE0?t9pBi$`.#/,:diCVcAlZZlMWYI6Be+X<+?beR8Q$Tt1#NW6E/?rY-kl_.LeIg.:ImcP]3N>jb_%I-%]0PG%)+8bP5Hqplj5Kr]*gR9O*JbFh$GnA1RaN`?;1tQF+Ag13dQ!q@7%RAqas+(Kn>6gFB.od*qEZcm6-TUU_?$X5"ki79oN@Rl%Q!1tF#'A95#g]P.;ku\o8H,En/Jles`&]&M*(7gfB":HEG1D5I^52'oIFai3:_nk/g'Ac@J=&aFVLBZ-M"VjV?Ept9@AdE;M^Ut#%Q21t7@@Z%kW9bH[*#*4ZW#R/k#cFL=>6@Y+,Cad_b#Mp;(ajXdGjqBo3[QmZGWLD]#%3hcE'd]+&:-M@^jZQ>0hFLg:gt-7[gnEB%cOb-Ch%PPgZ,shQ9>rdS&d-#2LY*^F+OqfP(8NB0CBTb@I-'^FGWAX@c:GZ5a0_>1N]b)Vd`6jm^\c1bqr]S=^3"c#i:NdkJ)!Fj%B=Xe'a#sl#/YL@[b2V@MK_6.N0f=6&Q.0tHnMCH,ND_8\`EK.lZE2?57.uJu@7^GOc:MU]K+5h"-+3ri,r(KHY1'L5B[-ah#=apg%=e7:Y;9+;Kr**:(gn0s)"=lTV9AA"TXYbI&'43?iSC8n@,EKZ[L#O!&4fNbT@>];)fjdZ"n`/&ob[$Qjd'47:)u!s9!QT554O(I8%MnfCKm=7`r-#/Zj-kQpq&;jeFAqc?77"iZc6papBDr$b`Ut<]p#f/,63u'VEE9p<<N9[beK,JKUNEHlf-uf8a^B,&8Z71!<),E_r%<WtHQJ^GYK,g"daGU&5Ja7oj4<9[Df)V#T)9Ji<f`[T%bNJQD)&F1-4]1Epg#Xob2@X=dDUObtObG[ugEgbuiN)@"h+S1ho!t<\R%rlP*=;'86/=t2<I&-ju]GtA($/hdiIaA1JYd"gt<^poa4_,!aT+W6(<l'#AL,<&.IP$Bp!FgFd!8]<an'!eJ('%V_D&_UNA1&VUo%1K^<n;fa$NYpBKL\N*jk#r!9<&6$GU"HEYJK8FY6(R2'R+>d3YZ<7:6J40s=GnbdJ6I.DU$&G/U9HmP-%/l:?C6j8kWS6'MZ5HL$%6L9s&$9%Uj/r<U/6m>rf^k`"ZJfp5d#]Npb&Y;RSoK_KM$(2<(#KW/%enXLO`e+=8-8G20?FP;qClCXOdqKL'/di<l2,81N#EY.h%L/<"1qIkEt'9e&f<Rd3>+O6iJWfmP^)ii$*UsKd:OW&,b%l@I`?uhtlLq5>hRHd/#Gi2.UaP?B,E1G26)J%kW_e0TdQ)AYG*'2ok%4%XoA,!s'l>s>LaQ)R_H1csPeQifC'j8U6r8&TBXrI*1G'hl2i8XXWtR7XG!0H&,19TB)u>[aH.XoOY*oEk/r4:TTZ5q_1p!!m^F%p)E_\!WGY_p9C[=eK,[D+L!ldG7p=G$5='E*5bM_m4(_1mL^-0">Rf=JXOde!!CIKK=\a9),?ntp*3`@J^CPo"=G?8@\at*Rd&?5%@e;6Kj?t$<kVCAVV.!EO4Gs*!p2QKp;@I?^&f8aE`$mo]&R.!sPIN3.RM1"c>4mJ=IV"q[;Y(<Qb[hV8SS,9(p`W9a(KUbVe"GYL%>Y6fi$7?3M,mM>R(cDsK3UokKWq!Eps,"fVgN&UYCH*mhAV!Ah,D(3&7+ZXGl2Vrc.QVgaU$iYeKLi#%Qb=3pKg/;opRPuAcp_Q1%2kkF>-s4d;ZN_H]a]td[k\UA:E?9ZjQ1QF<^4X-)6t5Pgltj_fifpJ>OB>rrXZV>48d,&?!LfP4\mnB]ZJLU\Z]86`&h3o68cfnC%lIh#J+32ihaV>#J3C%*cmIa]S:/l%V%=WRh\gF;Cpf%#3UNO][+.u)g2)]K56YJC<&48+=%%(6;6^-Rd=X+iWe][atEasX+#GKIK%;IqKnN><aJ1GD5!Xr-]RZ!/Cq"3+dm1+<9(J5Hnab@+3Z:p<2FKk-LB<W=?50anul&@KlS>aP:n@bDsLW^%sAJOlLdnojeV,:oLH%N[lTZ\?8ql&0cE;[,r+;-I34,q\;CGM>7dC$K3QXE("BU7LX(k/:%&D.(lKL8=:Qp#UAt^Or,9K4h;"hK>r"G(uU:,QQ:lCf?s36%.Z2<%TY?8,)'h@sOdRs)4?E,?jQ.V"!+%=V)Ajo7fu6]&Gkq1k]Eg#].YfU("](OT$Lga.fu$L&aBVbfRmgdKTrIqRDE6H?`!Kr%%,i[m'L-:JLJ2%CD0%5o[019-3I0ZgKW:QN/)@.Xs#9AV!596<%qXf=JPCA\6eNo.=]ANsoB9*6rp&`/\?C9\EPR<dfg;$1;+73M4%:-i?sZIVio%I*D<0lDj<T=gO=H[t-G_ebb@$Z%P(-PAgH`d`[%Me,'qd0?I"!fIp7#9>+%E<?fJ'&4q'4/btI-Z);4pJ?uMgl@+0%&JHtKN!M34#,Z)a*K.+q)NDe)M#nhVCGM2`Z5_cqZplI8b9/L"7?($32>LNmED#!kHtC[57Rh[m/JS#e[":.o03VqD.>MaNkH3.%%=`r($2[7\>17[E!?E%ju;4b`FZZtSJq^.'@lB=gY`?93sLfa9fZ^"k&?6PGPm]4696=%H<X.GuR,J<5'Z[t4MbGWcfStalYE+aQo%XQbL*V?(%omabMjN`q,WfW--[JBW,:_d4'T\9?6/A-Hq;STnoh6u#2@QVkfH5AQKSH1Zod."(9.dHTIg4)Wr0<nCHonPfkU;Xh<W%L'<_%.2Z/4IX?a]OG8]sD3k^J!i>R2A2/V)*-<_hF;^P)g<iWaZ@i.i#>ct%pek9H@EdjJkW95Hk&]c\WR.7W(G1*kg5R#nflt-[%MbTYYKf!\Pkd*2;1s"Am,`J7gg]n]2>)re"^GR>Se2^p#.RbE%;DT*EKIAk?Ru%pGYtj,BmSYSp*o!$Ks'fl*+o4,b]$BS@3@-#m%&h%DFIE-UGItA(doS4#cPu4q(3o3MK7s3Kn-jq%p<9&l>akTU]L8W-a;d;#s1C"0`ac=P9f!UF9*Ut;?4!QlqE)"]a,'/.?C1af0%>h5.:j-4V\I!bL;Q::uG#(orjD2l[NUB:V+OdYbK?QD:e2J.^`j+oEZkkGF),4cE)GDEXI,Fm:T@i.\&`Y'ELS:F.&&e(6`=/0uQ%"<4#P#9@Y/`$AjqAl:Tq?)r;Gh*/3rbfkn"!jJ5k/ZPU;A1qX1C_SjSX.W0H*AU?(<l_YW@@.;cED-:NDs?#%P#ro9P:DY8>P4dd%eqB,nHE>k3"X^KS2HbTqI4Vm2QpQnMEBdNeG"*RaT<-E96O_/[$9`isd7qK`Y10N7-7_\Q99N.fLGQ]j?_+9CC[l5MadP'b]?\s$%9pPt+Cf6aW3',F4l6^:3icuAg.kT0*->UuL'/s(Gj(OVk:SD^Q9iepm`11eaE'8!kfN\TQ)2N.4(1g`pq_hNn.)*JX<El5En(f&O%9\!g=7^J\:OEihN:&k_%3$:>'<MY!`S2[<Rd4/7<)Kf'^Oih5H(7N%W1PcgaTk3kP\W0S(")84\EWqr"klB<i1=B%,I?^/AS`ikX%O[WQbPB&W9#?BHsU22CI(Cu]E68s3@Y[6&f9*XQkLLB+kZV!3`5\8+"=o'(Za0/kiNXDJ0K@'n1G,$CZn^&?a6q2[NZQ+a]q#t<l%XSOFC+fbga%Q4Bj@*V:jMG%JIL"SB&;9iS56kL_DP/@?D&%oMrbEPYC,,d1s[3kG-*@BYN`\?\%62GPK@feXk"']&t(NTtmRB/H^%bSk#%gP0*WMacj-7B8^`ZJ+(PXE]ks>6UL,jgVc(%heK8gtVrXk8g*t0]CDjmj8iEFt@Lf-J)(I%AT6DUd6s1!^]*o+S375KQMjk%bK0nq6/-d0EX`dXg*TN7%mRVI^kj/Z[7_DFA<Ue"C.EB0$a)NN4P%V3F:p[p-Pu+]EfRHIKiXA#h^6sJcLNm(9)#/dFkWKi3Te<A%64sGbd^9gkaK-'=-J.YgnoH<b+i$j$25k&BZ[j+]'KdQfren@K*:_>B:nF'hh.c'^^CYQd5SCPd.55Gtk,>Zt3UW?$f1T4\gGN.&%N@2Ko9J5P7P^dVRi-?4WG='*b&D\!1\),XE";r%'GJP`Og.KMUf/8^;9``acgn]30`;2n#T%SbgC:9*<d4Tk9Tg+sQ/pT"N?!t/W%?`6Ke1(a9i\3J1$,9\H\;r$-9RKb''RFNjQ(c=M?L)eAUYV]s/Kg7L"e^$N$\,YT@8?/H6K:')%/YV!?X1L86U1P-Sl;pK-W[K*H%!U7.fk>>b\1<4urdnqXiQVT5u/Vk%6-(.,RjDbV&QpX7%9godOlq$mS]#C@^h:%SLmQT0a4*C[h3lkI%Qt;Q"-G^8-HM6BTdJE,"%.].WpBgorq_KB"i[Ou&(/'\$5Yp7\,NleasOS>!pST;"[+mjQ6mHD666`lJZVsg[14LPcgD3&l[&BknPpDLtMF"uJ67KPsb-MVeW%2"1`W&mG_W]6#$pHO+G!5%B<9(.#(2mPUXR%<?Ec;]%1-*6cCf]*a4Y+94m9mTA@JDn&d8-G&1Qf#(F<P!q6Dp=0a0aWa0`09QF5%LlMW(,<@*D&l-ks9f&oFp<GKg$NjWGigR:3$uj##g5BW)=<i>ea<]f/qiOFiI&&Y''67`,>$BuhROB]s2$-CkZ[\sWh6F[nVk/V=%;OsU\eaB^[;Et#%65?=Jp7(nR//'nE\e2?Ef)e@aIM2$?D.&3?N)O%lQBU.KKm9dVVfhBKZdc)jZ62O6j>bC0fP.HEKFWg(AdSc`%'Ls0/q+cR@q*D=*n24jbe`g?P9,1IbQmKA?KR7K6`,\i1aR^1i.Z'q=InGBGcHB"o0gD-1RumE6(Ik5VH/Wi`Jd2<JfOC+P'-2n!%WN?8N0/P4[k"NHL8?,p`E/%uQ;NkEc3O#J;b$*d%b?8!:'Wh5EHX;5VWV>B[-.!p4gN@u<Os[o?En]&)8l^75F>,e9#_3&IRe3$c%GHd<<^a*XKU_f,$=@fX$#ch77CKF\#]k`t"bJg7nOA%,\s2\?Dm]#iIGR,C=f6?+j7sL/h.EXAI]`Q!&<6)WQ5kODV67HFOC%=Rs%eWo@ZF[@Njg0IX1V_C_C-9k#Df5AXG$4^5K]6OR!EG("rE<,L5;7.6rePh^8EccSu4/WRpJmM`/U2WhKn`<3?ZDL(*:p7[QUM8A)%:4`'t\ht6\,gt@rJ4[!odo1fO+f-'#-D[5/K0tZq"rdHtc3=DJ9*$pid"Klp>W6MFPtB:E:;t0+8<SpI(TOH;D*SpSH%_Z9."X<<%)pe`F14q.%\q<a/NK[NN/:/<IOGTg99Nae!Y]3k#JC`aog>p2p&q_t^@Y?,8YUYCnXh,dZ1#t++WXT6!(F>cOfmlnlOca9g"*0Cd%]m"h-Zd*fWm.4-#U*.E;H6YYIT'dVH8XUD80)6?tO^i@K7T4:E^,mKS6F9<1NanV<3J&b*p"],2a&d,CV(@\>;`<2qs$Yol%!oEq%_?')D@"-`+eSFG0CmE)j8d$cQ*Ml_Ic,G4$qm?:3r]%cUR)O;s<84R<G/9`iVe0N>D*Rh[U#o(*]mik4>&W\[)j'Ms,EcVHJ.,G=%O^&3AE1EQZ6dGI,A0Ba&a"[X.^Tu/D,]?[?3YX05G7&@-\-o,:7r2_`rctZ#3u0b[ZG]43hb.B]d)6P:`au98"h;-kaV5\P'P!P-%:DI*M<iMo^Sh(X"X\2/gG?iS8o(e^7Gak8XBR'gG.:XUH1h=F:Kj\B:+[8!q>[4Dk[#;&Yn_YRN%8?U=(Sn<u&X?n8=?#$T4DV%1%AYis,J8^SP=Zc$1"ubo<d`)JPNOsYU)d>U(**^8!*#k7m1$u.dICS+P8f_,r6k\23\RR?9q@5CB.X<S<1sCS^O0+MAO0,)<O7cm,%OKG01aMsr0O_pjjaPo:drf-*&"j!EcNC4Nn4k#BZQ;C'aP"$Z8WR23n^?:V)fO`)J$\SY;NCam^LE'l$,ob%SdZ!M&ABR8=::CTd%fe,qEV.5_Vj9mt+=e(]g_rU&mO`%3_Y'dPGEN'U/6<T]Y-koZ!Aa<$(Pd2%pS?d%$2,`+NEFkDPO/TFk2P!"5Cd;A/+sB+QCd`)J%kK%7^!td<DQt6RidMfNp!-@V>A\!8BN/Eb@M@^03Z-,JD'NK!noWf%$&c(CW?^>(q!aR%<'r]p>1X&nH;p8:HEm3OJ'>A-iR0CMK%nAE!gKnO3L/oRMRD'E@>5Q4/`Z[[I+Dj;./WMXr,=/f#si.sOM_:5U6@uQs,Cn@i9I!_Z-mQXj[=aVk`?;<F$eHjLRE$AZ[%Z%/E%DYR`KB/04\E-oUX$9$%0J`)Qf"EP=KUpH2KM2U_6XKrMA)2rmBs&pSl458JkHhV'=B-T`37GFfkZOu&4M!RSp)dtZk@EV8,CIf\B%-%]Mp:Hr(/5t):0e,I?3T/6SNN*;Sb%($acV0!MM;Gl#Z_KNPN]Bq`Ran!gXGLgo;#[=HqA?R@R7*A/_D;6qp<j7_1/tk7!%e=/;%bB=hK><_`%o$R$:o=X"V26<&Vp'B\G%Ic61IA?IpQB-BuI'bXnqZS(D@BKO78#/b`S(HE>f!egHnAu<k/f(p]Uisr/l;fP\.;unE%PKe7iGM@E.'BQ&rcDrWO-Nbrf%ia)Z7dI\QbetmN9=n<d<XN%PKb11d03b*Khji\qc&A.Ch/#G>4@s_M\oW4Eg'W.T>'?R?JQB[X%#UK#=+K>jXd]>"!7T!CY[A?/O8WMN);Oq]`r`1m]>"ZHf%N%n88e6Qc-c>/X+b1P4X]qN#E;ngsG-g#UbuR1"8J9TTotiN93b?Z)%jo7Y3ghO<D\!9k_,^F0L,dEF</A?^("?p'lg2+6D\!7O)n'flT7AXYJP@!8<9[ebAY_AX%o#W]?`YcpQf4ZESia#&$q_Y`QJ3A;'%NKOouj?[sa2nLoTJOKR:dIZ!kbS/Z1YVFhj*),q#7V)s`79UL4[W#8[H'cN^RjI:=PM$#u!N!'S_K`o4N^dYc+jXe*5u21K0!:/A%m1GB,(0:$P>]SQ,5$,0r^77>r!Q&<T!I7l'2HZ6r[LMKtF8QiBD?%>L_!t0oE#1L%:3XMa3M:0/PM9PQd_'\/FiPfAD+rs-p%5].%!]Ig5ZWSGIE80)Hc;*4+=#=YfGsZ'8E94U3?mE4iSuhgt6ZQtGI--#f[6+QH+hC+(c-17!A%FO:6$6t9j17\$["4rZoq94/"k/LY%n9h\QiNaVYG!sm>)+(HGhF@?*8^c0\DeZM0"f/E[;S,LG=k2>dZ_m9L7MJ$OTMQlINMq5Tnc59WQJb/#?),+KBGqocX[&%%>M3p$%`Z[A=>=+-NC](XVWW]gn89Tfe^]c-lWH-qVV>(?8iGHLKSk4CE!I>[>Lg!P_9kd#*O_)AGYj[ru,:b7-g=`ED3QIgtT<VeT$Ys8J%Xd?$M_encj+`@*Cd7#b".O-S5\T(k.igq_mFB(1ngcGHS.;iE;lQu9)J/7kk%(DMS[G&2T05`Rr=,tpF!O"Vkh?)PY&6XiIM=n;T%X%Lht/JrNI^dfDRh/F<;dc@]0*M'Hp4:ttSRTBe2,Kc]&i475h7YZ;LP@rFAF*S=CRIrXf^0ET4)^Dd0=jNN%r=,%$EH/8S$%dfY%1I0N8?*`U-4&;:a8P4es/%oG>5\5N=]rSfV^3>i%[t9T"[gp4M)gV-^)<K]lO2^.tYCXp'`Ze!P%T9r@n$OFfKiO6R]P#U1%`8]-%c_3uCHUm+Z,_QtKP`l.XEPY@P+0reZb;s=s\003/be`D*Bf(mt(n%VbW$(=gMr!IXFFt=)>nZGR+ZnNJd[>a"!Z.ZD9U2Hs[/h=c%^#m^cb<&oQn#:F1p6\O5>8QUqF/-#+_FQn!(\I@2n@bhgEe]\.puVsA?.PWI%dD-@Mb)WS,d<PE(PN),=%HoUS^l82L-XCSD]93n%1[WaBEr%^a\ZtO*m;#M,)j#*#=Kf`RMj"0%%iaJFKfnBJ61M6=b$BUIO;2;r]+/YQ]/u[imT-R>mK0-!\J"AJ#KlMoWHTl&!A3MZ%=^*\[Zc;p%YHoP,<uZZ7ia(ma)k4rA&9!Bj%?\@;rLSsl+`THZonH:MM9$,l\fkrMKZ"a;DaQd9;ViE[\fkr-9D%_T`OrbJ.lD6H%`!@pk$Z9:`!pm1OS<m\!_$u[#[tZAWHJU,g4[H98ar@X5[=J;7e+EWf4g/jm"s2W7/o*kg!gXSUW-San\?iI5<lbsJ<mYp][YlYQ%DjWAFYS$U2dM:9!HZ=@B4GT^""\+tNj6d(=`l:L))c;`6%)#*s$@=G7R`l=U8)K43"+`b3Q+n,,.YoHl"MP(c#%,7`'Ya7ob2J6`%+TB<Api=[o52aTCM\%HQGBk7e-kDddOfp`F)7-D<^6.BLjRHq`^-)D[crD]*MCGX,7ckXA)musH<libc<m^I6[YlZ0DgOl`oW;Eh%PeOQST$t0^>:&s]!:](#=FDDsl/c,K>$oLGK^(+[f,#Qn58pj]B-X=GEVg(u1$`Da1B&o@mirga.Z#L2FOWoF_/BJr__2-*F(uW4%04KkWV!0mg0q9fgeOY-2B#R!ind6@":=-ge(t'MD)uAcIPt,sD5Dn(a;>orr3[],6SL`m!Vu<`jkP]6]_mO!Z')sT$M5lS80][13%l<fY^a]rfn0AbYjrk>M%OB(e+VuLm*-EBCrSR<2Yri;,.s0^$"pFh/O@*Ye5^FlP-aF=Y>jM(afG$\b[X^Iq(X\h`Vrmq]Ws%<c!%\af\$U?:/8J7C5IN'%+p0KN;S")qdc<gXm20VA](Qfe>a:aUrB!R@F12AY3tRFW!eK*RdT?'ppG^^,X*PeJ@D7f5#*MIQ]WH6>VE%UB3>e_$+Z5Jdf.qgt7.nG_-W67gIg`5/Dg^\4\S-.N^>E`*kPj?m$oNFijt`E*.&\GFHsc+9cB5l)ERtJT)NI[(q4'<(Vk!(Dt&H%j'X)9mZONJ$YnT0nVGYG)E:C"[c[iqBLr\Mm2A&?fM.Hp^%#,&k6/V^OD[sQ@A,u+AU9)=*'*RTrng<\N9l%1&tUC/B<_J!RUB+m%K:C:$"WOhA$EicT//U<UE-NT8#,t@`>+q35(rD)eUX964^iH#G^0i:Ni2$o*Q<gf;6h-DW!d;D"#")kGh&LV036$D5)SD7a_W"@Q%Vkh>3[)!Ba4bWcnI$DOTdTO#aE@Q+8J10;T\V'E\=eE<g#6Tj?7<0>o0L.h)d0BcJQ!e*jC_-k>E(0U8f@`_cB.#DcEg*YuQ,Q^&%r?Ph:Sjf#Pk;ZK\@D6k,9sO3o=3)$]=3r`0[u2c%0F`#h!NoFlQB"WUkm$XS2)aE$eJoKuE$.TBY\$s#iBTlL0RH.FE]5>ODiF8e%J5Z/>!o9tDIRNHd0,;,8TLO\UI4mc>D+KZJ[mHZefX3NT@!=O?nYr*_322!bZ:FlL7c?Gu:K>K"$bLTL*U;H]n+pRH>uh\a]Cng.%8U68+Mo/%%nU9V:,psKZn&hhemrRoL9CIB$YP56g?hnr]Lsc\0rhn*2,9uc;T?h$kL5cc-P6DJ:Vt7,)&T_rd^/e_fVHAE7l)BJa%KLb`4j!(YLX-!u]DNX86ZOp-'iKVmVLjAW`a;A]?`.08]4WuO9XEnp%)C$s[BIoF3QjR^PN*KI_IK>TmZ]PkfQube:/TJ.n(!fM]%E!-tl,:3U_mqH8YVUdp=o4"OC#"W1Z\;:5@Q_9HS!udH2Vm6ub+:/-Zj!QI78]e>S%)ma![,5p="6=a.YnR9i4%!aF`B^`)%5jkh%KGRHFCJ;]t.+9)7EFaV^,t9eq@Y-S#<O1Vi43BR\Yn[r;LF$:^6#=)kYS[p%W&M_*5jXr;/-\X3VoDjJLc4!W=ra;<>5,,;!1A8f%BSunRF11TS"4D;)7U-@`;%JYs)!<lIYo7a>TI@k$`a&uaVgucm%"s06Q+Rq>m!kV>(l(U!UWQmOLm9J?I5)<1Um8\s5eL_U0I?p$%6=V\r'On:>8Q\P<k1O_k'8#B!BT*6DTggm\j2_l)TP:Gp`dl'ke??l&$n0H=6=%-\!V32HaG_@e)j3P1fSfh7Z(X':@t6pEemi./%!`VpJfb#,)RaWg_A;nOt#r%jr.#e83Na^s)#"4f=,;f[kUhdtb%#AI>)m(ib&Ce?UYH`Vaj#&/=#(n0cYEL`%NnG6d4]dWsQr"-p%E>nutH=KhgDI['g-C(m!)ZuO?aGerBH>f%u?0R@5#TC;@pl,<ZRSP.f#"3mf1E9J/H/gl][QT``c:Eu[i5s-8D(N^-_p$sTbqXA8%/k3m&9Z:@@V]*Aj%h3cA`cOl^%r(5XeM3"b)NRh-Ne-_126p^W/.:.`NX<soYp;-?'Gt,iNUN7]cjc$)R#ohjDiD^:'93ohne_q/%8r`F%ZMJ'q99&R';MUiUa*J.BoH9I%[)[i3,nt7BZ%8]RNV=8\:,t;nj(R[iT)':sm,=6,Qr"iU,<lCN[H#r$,ABKcK,\Rta=,&Z%`d\DQ\q)4oN[S2LS[^Et"!Z8\UHjhrFU8.YjZj$kG`G7F$tt0Z]s/[^U/B.`+;9DGWq%8GRC_&`+VU<NEEnr:1td3n'f$q-l+(@\%-E2UZacI_u31*$l%2k65eOkT*Lg1O`%lk,g[bM.N#pm:7-H*ina>5"BA*RR!6j?'VA`H1=K@1]a;Ik<`!EN636K8n'/M\Ig-0%Du%.)N"t,6Qp+^+gi78s;f_8rZM@3h382-]8GKOWtN;M,r;l!G9su)a/4p/I=5>nfn71s2Pcu'-sVUAOn/$+`%k7J7q7>,fp%#NbBuc%J5V?:dNepf\\mq_7p*f/1o_-6;iejlm'r5Cm)F-`N6.;_E'?5'AF:nh7[NH(lQg;CE@(eQi"0\"an2*!8df=6aTSk+1a4qH*="?f%:,C'?i0fe>H%rJGeB*5SL2,McJ2G$SOXG3'L-;B<-PICsG4`n0U9[-:Ikl6E4?!1Ll2uU@D?S,3)Nle><<d#dW8Z)_P[i3'fgq>6%KhB'14<7Bp`\'4hAL]A_9TDU\OKPWRUeEJ(UFt$sT>X"BW0@St3UD)FjiH^Z_r/V#WJ#8C<(^^eaMdh;b)o@^6`fX<"St)=;IukQ%UTt:HX)]HdO^9HCb"rVj+`+7&<?_%Bb&iY/T52*^J2l^BYqhEGX5rKX.E8+%)m_:2N_6'IL.4=a%A7\ke+H%mVNNH.o7kN%Z7A"B%]Ws%dLI^i7UK=>h%o63e=6:Ad[:1@_"uaR5W=6s8jR?mub=$.O16,oe9KFK,[uh`ML=]OnEUoeUk@p6-*.j4,LmAA+@lC4G8?SfG%FtY"$jl%\2A)gbT)/LY-Z]Qi_iCt/6/))i*JqtMNFNZr1<*&g\!DTOLSn;2P6/4tiE>]<jKH'#.+F925k;'g_CqG[K)/!3'pVscq%a54qF)(F%S"*77]AgLaf_FUZG]GqenOJdM&^!'FOXR/&30R$unD80Q8pZ0L[mn6H9I6"SmH'fWN12RG7G,bD_ObM&r86lOh!@:nQ%.KqU[(/"jD=uP;eC_Y+cR8_)'*6^71Lu<%obd=T^VH"7@g1K9_<Yf<F*pb'o@:m?Hi(9:RbJ;fgP]SG+j(Xke,"e^&0GB"rDa_gV%8ZC]JR@%^,%UjHYbd8mq,Z!H0##pY'7`Gju<K%k91Hc>S],2Q0f`PedHTl%l.?h-l(mtEP44Q<Y!AO`,YqehRW9$#t>%Slc9P_;b%J0sT`&MjN"R?tq;%#CoVULm!p#e<;B2`#4Jd'VNJR1Wk):\8\_JZD7>_^E[SbXsSYe1M#qTkIrZD[anC3+941'[?,LWF`b_1aDQ?%LG:cOAem7eQ#+FO))!b*d=f:2Y"-lO.o.s[]f`DuU1TcZfaZ9W%$8j@NN*jkA-T3fh%F%*;j30AR4`4+XW(P%*S9fC2SNf"\&[/[%EZo7RPG2Q-=Cl:Q'LsWc7bJ1ujYZCPc=VY>'90@:&/F9Gg.WnCbAGN%+ZPOC\=$/=*O%7W$T+=#U5-5)M8?'/2Zlt&f>sE^AQ.r[%]pT^lY0f0udXp\J_V^=18qt$(!b[%j+ZBU<5Z:/k@O&6hmT$HjST-V&'ICpnS-d0i3u2Hq_drDc\n!O#H#u0oJ/D53Ln"M9OR/C*%!E.o7.VD)9r5Zh=bg]Z"fkP'C9\r(3f#Hj2e_[,^H7^,,-aLQh5%e?2UN6XTY_^<^9P=]Wh\/&kT\3e6d?t&*[,5,`g7mt;Q.)-<%;mImP1E]kG)QPXtQnT*kX"tkR@Ph8$5QU#[`p4%h[M_m-9JCK0X"stlCb:Y$R?6WGNSGBoH%$[DZNstfdZr[W_Abhbo/fmn@uk=,%c\,]2W=7*@KR0pZ49M@tU/=$o':G#YGQsmSY0-9.N!XirjI$rbn0H=JVCWN5kq+Rn(,hUoDJtnKNTZ^6?n\Fdb4I7^U65&)K`o##%:O6R3H6tHu!Oe+R"-g]:AUA%YOjO[Ih(p0g(S:(5$5.Qh7edD^cNWAHT-6F%H+m->F&<C_;*Ioj,ooS;I&<^8@'?BP$q]`18,=cG%=6WqS,EWheZ&SGp&G<V(r(O&]AAT2T1BX.d<,'k.Hi[?X)YZ$14*<(L1Ei.O)uDE6Wc!gqR8DeqKhD?%9ns_OPlR7W'.b8c!]p#n%_VdGI#nA[L&njTk[l"q75aLGD1sjl4)04PhTE3Htg6eN6NT4j(:!;+]'_t;6AE/7G`)tea#0jhbN@'o"R_DI-,$-g=\smsFY*@;Y%/_u]t8oc0#YE;-RP"bJi$6B"SZ-A7DRNV=$`X>Mk6GBE26PEAf@DpN72^^Ah)^c^MVAM.-BP9$Jf/u2QS_&,mNZX]dYEDESgU<5D%L1l+48M!">i,d)ph`.>2W?8d86pn(clqCoGAo12"I%uN&'MLYDT'32:259;J"Ds,I)QFcYJu=L/aV'Ua]$i(@7Ma7IiD+6DPq<ne%d;_pA/fGlQr61-R3b45&HK'V*!?O$V80)1s!_17&jX?m$MfT6=kD[DpIZ>aJ`<o8OI@`pS)@ZiVhI]7sh2QQ72Vr,3730Cq'1[7)%>8hR)2jt]A;+Gh&JE+/7!AQgKO[jV!\T,G,%5eA(h9e`:HGjk%d@HXo4F]3RO!:[1&P.[[rH4\t>3j9`32BtgK5KG,84*ES,2R"/%&Si_-!00Pfb'*5fUc[CN*02p:&OkSk7+004U%V]YUi?`tUM#ae2-Dcg8gQ(24P<S'!tg[R\>6IANuXQE1AYtNCin*q>,\u.l(j^k%O;Ljb^Eo+nEks>e4#nKd*Y_\ID7ZYVgorrp[)4BF1_TQclm\NBg0\Z$dn<Be_Wm=JflTo,k":Kcau6p5NG]Z.2@Lr)FORs8jdY*-%Kl@rsdsBsZV\^q+Xi%CDGD9smFIImh#3P\=f',_gW\V/FFrCpO%?5SC6CrG5Jt@6KP#Y.A#:oPUs%'"f25i9+a/$8$SpHjoWV(op%p[eMDnnEWU4lP(l!E/JHqWS?4rb9tZ$)fSEZk"ttl8jNP>Jn%k6#Egi.B)('<sECJRjR,R(2==u8Fi'96]H!2*pAHZrFDj#e-g6)%6VAb@eA7f>pJfWWCg>J?GXuOZe8_!hi&hr9**P2u2EL-E-.5MJOLdcMP1m<B;JLD3A#3Koe7bi/3JN)d?>B3=X#JjBVQN;P\Z,Nt%W8uJ'>aedA\>U!a-]t&0#j1*c:2Pe7Vlm-O2mjg#RMoO.$^`bcC4M.?gr<$)LaT';Xc/SbE^gF2)_X)*.F8mZGc<DAZ\7mM?>>Ku%5K%tG9[1*P*RZ`B00lA2`g<I5n_DV%d)`3beWl\O#@)_d/V<8Tkb%GDe/2HYlA_I*isf3m,H.c,,H.c4-`E&hethg=eJrRdP=eYW%+\tr%g)316++d=D7SjO+PJnNu(omCK&p]q*U)KeZ+fQ1+#'c$jf#T8>E@31P:cYOufFHLX\Rqe[jW$'P;-h#X;&u'::mOm%WCC#2%k)=VPC4OO[n2/\*R&1,GY!-=FQ*ZjXRlkRVeP.)dSn]X5)cnmb#NH4T=Z*uCOm%e,)A6hOZ;?O`H3*I-B8`q(:>Noj?)MS8X0-NL%dT-14>Nr0de?*iCId0tFl8g41?+$05NNTk#X)um7l8H4g2g$WXFe-(&Ye!TP8m(JXDC)B%Xc0Kq:#3ro?)R+*,hIFoDX'-sl3^S3%l8iu*A[S/@Q&aSE>U-@g'A#+B%p3u8/Db-%=[+K_X,.ufZk6A@a>6o0G",c^2hLY1EEAq,E\qReeLZ&)adfKoePpd>Z6_@$C9ADP%`Ke1VPC`Ur-a9cN:*["*4Mp`)"P+=Y"P0\\-*ZNtLjdV`=E>*e+V(UWeeRhPU6$b,G3t7(RVNBcp-rJMQd$-`fJot'k1a">,7.BI%YjZ;-=k8LVI$M_jhh/Wq:Ljo_R(>n"ZE@qWUU%%akH]9uN6E1O]5i=0>&CKH],=]'XP6FKFOko\<W6U^c3UQ,N2qogDT5[GCHpi/%V6uq8Q.*=h\B8RRVd-(+DH!^d>.:J1Bs%>uX0gGqC)X4^T5p4Jg/#7OCYbkN)jWDD.]p*oB=-6,b#Mnd5NOB$[@_K)gY,H68oEI^%>\1D<;m+PQ[jbDSXkQgT"P8+F<JKhjY#8O%.CVC@[Q(GM7/)sZ\5p]B>M"kTo368\/S[nQ\)s$/Q*AY?A&%=T6`I@qA#pu[eB"cH%-<o0*/*,rs>s%/WDYGo4CO>("qCOY9Xf]"/[W^@rA[Ve4)jdJ2`l/o*:MnoGkt5g[2tKXYmFj"s2;Vm_B#e`4XZT5+D.C"lqer=>%jsJ>66^?E;6CuuD[B&ZFJEZ%eo[[>e14JNm[PN/DId;<5o*!Y[C^epW4X*`Qa0gD0j1*+/'5"49Em;E-AGA'KlO%p+lO#\ECNmSL%kjhkMf63t]7+[/NSngDX2O\EbO&_e;-E\lHF^*+Ul.W?;8p0OT):s#C>:$oT:GoTH-MK"EFaJ\qf3EB&]BuS<>oVA)Y&0)2>h=l7%0X>JC;X?H(mCIGDZ<^PQZX(2p0XbcPNEhp3mWpSfXjH8ScAT\e?/K&_SnBca[hDI\]]Qp.rPLEtUC4#Ni>JiH"*u^AkB42t2:?8Q%rG/LdcMH.+Y?<n$H[Fed`Zs[uBZ/M?0H0PjPB3#aHAQ?D]77<8h9k*(Lp,XH)>/.>F61,ZYL^duh5`F,CYopQ^\4%7?TY;m,JRQ8%[GjHX=#TnjXsYVuNW6RVScINQ1BqY\=pn%RYd'\h)!bn?\LBntC-:/:AkI_^&^Q-tRMci`4j#W7m)@R61@-nsl^>@RL#'[OA&:.*%&Rh/RCHU8KiKX\\$Db[p?,]j>_KOq@EFH>"Pmk:\Xg2C4VcGkF.Ms'EG'ektpKWnj2u-LrYRP>XfI#Gn)>7M>C*`opDiG7]p!2d*%STnplfWLdm@9<!MpokQ12+$XZhC9gpH\("^4Gsj,q(*F3G4eup;X>a<.P%ro>*TlX9<H?pmF:@BN9qs.--#YGnR=SP74#rshMK72%]`Y]!R>QO7NSW`%--(0]MoLeEg)3%soiY7CD!/+V(tC3mltU]Y"PHf(D%,+JSl?T5S_9tsA37+rA&rh*VoFg(2:0@)m53A5OR:aZ%.tsF_)FLs*O@GAgA6%a42M4ofaDPUf`fXP2<K?FGp,8*#C3Ed?jI.:IR@P6dFp0BfFu;?=Q>C2WC(/b?lr889X4bTRWt/<Tj=I<I%-\j3NG*QO%-p(2h-Z;E+3-?`A:F"$Eq5EJ\),W:7*_[MOG(i%Y[VMdGg$WIlQ+_F@EFlIt*K+5R=*AqAh:I$"VJHCBQ!kM_._G[(%=#N\01*O>.@rFX#RQHR0^giidgNBT[A%+s.bk7o@]7hiJ=kU+\5.Pn$@"4>6&tpSl#<F_!G]X`h;!_h.R7tA.3)]efrRP9%dBZUR%;jn8W#^ZiK2U#pk"c.!VPKfut()f.pBV=@aTp"H7kRkB\e<JW]'SM[p46W5*96L`OXOpQ<:,^kl4eg?Q7P,CoHR,qs"]`I#ensFi%G@'*VGOD`Ro:1S\PDGq7Va-AGcOIPu@cou/Cb,6FnSEY@Iub'_=fKl;,<FtIenmqNDW;5\]1H<).)Nlh*;#8md)gib$TV]tPaDUR%!TT#cWrn,iFgaZGQCNXGK%nD&Sm+pP,Z:mTLn(d^a4#.HU2AV=iCQRCO_fJ6nK^)$V&l,"GS2K]LpsYFFfN9U603R3Ai!#QibW3\%[@i_8$o8Sg8klN"D<WaZTp$V;+<Hh9\N":8SR,dq:)&sA&B$#+JI89:Sin/DO<ftiP+'e[*>pKJaK/MIcB4cgd#2.-pa/c><>RG`%`Bh6]VF9./IQ:k@bS<\O1Mbqc</WlEC(<skI$1AHl^+54VD'N5coOt(<lpZ&:aOZ&<7D#L>ui,/OqD:&WRsq9,X])B=Zfg=NTsHj%XGT<7oXH3+hW(\g@aqR.pS%XA=dUE`7PG"pADi,t\AVbd;/@op7tF%<\eBZ1`5mu8KqY]IGqo[_@!X-$P:KeU]mTKh=q*g-,:e'/%_]-!%NiI)bae8"e`'tFSiu6K*3CC?5&_T1i%P=&g`(OO!=Wu=:UK6>:>RRYJ-uda(MkY%=KH2EX&6M('.92WUCB4RPK@$r(SCLmQ%.[SR_l$=(5nM(El[(=Fs2p7(G,phoULN:S;+#Pp?&W90MW6slKj8FZQ@(Z*3D<)Dg\AK)*?(TUSde9D&T,O/F6^-<6X6!3)M$FMR%4>iYB;MAX*ese,9YVK5TZ*2,hCWlCgV,MWXdGjn;$RI8tEsC:WXcT2;V&Gmg&fZNDaUjDRX(2Z]ONE:=fI2o.OL1db-VKLsZ:(u1%g&"W1$>Q&DD&>]ul,m:>=r,2?a;HS=m^VlTs66%!WpVjVV0b[/E)<io*M?o9Qd7L!-!I82a_"c1nPO;%CD06O4%bmY<nsR=7D*N=%pD>ITd7WAf$7Z9m!sr]<_%P3Xd(P.IT@n8FL-&1s:P4fb>.)4CQY<d1%6`B\>=W:<%.pZ*c!mEcX>KW<HD[mReT-)Ye[#eRMsl$t%p1Z:g'[\Yo%S>*8'q<8BXma:oD7,n0>/]E\X(NM4$0Gfa$*[i.I._AFH=U%jTeokj$8?ksXdMfO24-%I/^%5F4&48aNiV"VD@,tQ%9rP62QF?0qgF4tQhG?i%S\&cJ1"rO0c1BE/a`k&D<i>"NNq"/@H%3-Q<q!:s"K.a[ojkB\mXah+N\n)=bMp<\$FFR:^",M2P.!["%%!LX>+PPR!1j4&,.VQ%"A73ZE'=hEo!'q&rAcj2LXm>&T[+-H2Hg*]Be"KQ*0uB2g"g+r*fSO!6Yu\,]oNHB+lB.AqMcaNg$:u!U%+^RIn-I#[k;3W<.FN>.S*;irNm6jcBBL)7pGMIda'ckE;J:!?E`3E8M:I<F1UcDB]Jc`g0\oTlr/-_3Ha$:YXR%JK!f39G=<po35%T;Tj)1Q'4m"7>aV;s!#<",4C1(+6&u\apj6j$`J=,PZ>9166V*?KTWlRtUpcbS]f4br`uT`Eo6m7;[T;K<DHeC'\?\F2:?;N>_F;%>1U4&g5r/6Z=2*lp_[9ZI*@C[&q,#f;8n.UcrMN*=:bilZ->0,Fa7Q5]M:B>aoIYNRBgO0`94*n5BZf?Wfp=ZiXP!t#JFn3aU268%l#<t18"0QHQa2>H/_7%]3\G=ZlE1g\1jLhBLl68]@#LstVC-t!6+B\&3X*]mRV09S`7eN[8[ZBd_F-W<H;s7XfNZi4b#\0dqG#J,%'kXF$7a.5EJ-cjqOHnC(/Dkk6q]B=Jd$^S.;[*A?r:N3A6Zska&A_jcaoX&N)k2)Vb$#d(@MVk"i=:tp\OMWjb%`Z<0eiok?t;QA%)RUIBG9W\$@puZu229a37;0r.UeAUg0&"b+=@?D0nZQ!TYtVTl.AJJm=tk#f`,ea/curQG8/h%09nN"DJfL0]OX*&[egab@+Y;b?%C0sR79j8q0<@41uC>icSfZ"tjlFgB:Xrb#K<[@(EUGf+SGG[RRUNY2iW^TPS;?/sW!3OO@eA=(f&.4(Y9._K7e]DE-;$^!G=IcNf%*Z%I#q]R[VXOoOldPo_]Q-s!c)2VoV5G`AqkV)519$:PhnrNLQ?L;9AHN_p;Zoak,8<Rr(V+CbhJqs3ilR:q0eNp*@n$7=Vq/RnB%09XN4SdMLHG0iU$_5>A.;BLR?:K"0?7o:)/\*)A'i^m;WZs>n3gfkd.k.1-`X5T)sWZ/&1)Y:o>$Yr(0e-&TW7a'JAb-go&o'WIF%PcR8NO)M2-8ZQAGC*#jr'18VYJM<\^6:cZ)XK0u!b5D*%S;I>2<_>(^Hrje`:fCS#fAo=R.="O^LT^kTEcGd76`;KI1%OE0W\:q%%^=1>5SSYab^@o-'5V*a?GM,<Df'c&-XR3H?2@!JO6^AFN?7?<jVF?H>Je%cPXJP\>''^2cM0k\j_3@kgB?H)(j/#s.Mp&mVBSrn,%GcHoU8Ube8l&N\!FN>9YAjMBTm_n<Z4]>,B#eR1]AbGgZB,7i6FE8KDSc*El&/eT4biVtSc;CIO1St[;TfgdjbpBo*5rsiuW).c;%J>+OECa?]>):NEN'r\?:&FHb@4"JHiY<4n2YFdYk];!6^J-KhY"mOO43\kF-E)4<qJUGUBT/+N-+0>cnaCfm^UPHqcSaA[Rr78lm%\\ThNo'tSFo\L5OX6nhaDbD:Hm%#<3[q,D/;BG;/A89oW(;4M*EHm6)gQIb9+mUE=L>Z@=fYc8)7`ETHZR(1a4-S$3m_iQjB;9Ml%Ve(GpLiIn'j47rF"e4%2-<Mqe?s!!#fNsL"D,J#Le.gYG)@hF-EYN!kQMM:QQA?qo4p;<lVc^2)GFZ%!@DgI4eE],kU?H1RP^15R%5?cIh!60R=$"P;Ga]&PESX/ruGJYtR,&!3urk3Rh6`bj77P@/'<r`S4jAGA+kTN*4>(q\)N)h+5e&q-t1s#sg:'_,f6'jQ\_f3qN%Z2bn4:B]2mBtKroFJq1)G$=^+`+C=#$)4*NSfsO]!lZ13W!YdIm$4u:?rJF":*uFJj!^:dG!ZuCSbMJ#/&C#\'A7],'kCrS7Ui^"%3+,TZloQujC-VeSrC4IUpF3-"86JgDor.m?ELH2S#V_DU/aF#:C"K`KT*VG72sib:9C"0+JgV=Ca`r4p3Ca5C<[pm[P2lf%&jAMq%,/cl;5RACp-9MUp'-YpS<f#94f..,2W)@8n/nsj#g1Z(+;hZ:'JuhUGd=MNr9u)p'N"J4#j(p9Jb2Z=F,_]Gn9nZ)+84D?pbA-[h%b!Rsn#*5?<VV>_;Uq,jpfJ:@5EV>N"'9DGZfJ;BW4N)cbEX?P!n@-X/-[XU&q(2^JNh-2P9`M]W"%6j0)T?3p>2&*>>8kY^?lh!h%]h*\-0=LGFd87UFD-MAKG27@tnpMc=fK_JI8%Le\`R.@(Lg,RIKW`LkqN09jk53@<Y\iTdTri1_Sl]696Nn,NWEh0E#Sk7U-C*tq%nqF>B#Vdp'NVqal:iGT0N#BoeEGmoIV#AAg$CYS'T*2>G]c4aRB=5B[6TLC3H_JF^MBk,DM48+Z"BD2>9kbbEem\lrI4$3FH5_"&%6+$,["f4i<+Or>F"AFuLaI;:g$O'1hB7d]d4\#Y;/`"VbUORS&iol,g#c`:6m<WU;P$3Q3;+N\pVOD-VMY@EEb3d-!kA8it@1":0%EKj$+,?:TF0aQ9edqi]G9Y4a/#_-$q;;4fdI>C22*mrXc9W\LK0/lEN%76Kh9btU=O3$=Of+M8nH.dfikE6N_@k<5UNJc,'VmMi*%jd=:OKsFI`hs*R=%S6LK2^\_Ep/3aKKcYjd[i)q>8Nj4Zc;Fh8e0TY51)oIR[%+P:+jN0VFu)UK;<et?4%jrfkWhnaSZ$"RZa!go%Zm`V?e8lF8]:R$`\[*:BY*OU5mmH=J:]q2A:MJK4;ZR29b(Gg6+T1q#-g'R/NR11P3*\mDC-8;@AYMKJE)^ah-_r"lnVW*kZ&L,_%c<:o[_k`*J;Q66"98V:NNq2[ufZu@j6t'nu%nRJU$=G4%P@WLj2!D(<B#<\XXHQ",G(PaK@"ZE2o$Fs*M5mL?XK,mbGBtrK#LGe>%Suba)<kAX&]tP@bbBVU8r2TGN6r4>?k=]c!@k0I+`7..JAo5L@ed.dDr^oV!:\*W@_r?!TT9(2"1c$B->.Z\2$T\Zh%LjaR4[NO^%Y=5rIOGf;2h3B\/.(]pQ8Z/jMJ6RmL=[tY!3BKirb/UCG]&tt88WJ!ZLiR[MMcseZj\)95@cAgORXrHt.<[9=6=W>u/N)qPh9]YZ%ZsMQb\e,a&N)DEDnSH1)pO">m6iSc^_pqt4L4\Fr_<Q#J0t<2;^2C]LCbo&;_#O*6)#rT-&XZpQZr`:M]m4Bj(C@>[V]KDHf.7t.%LCRJuY8f**UQ?t2Z[CgXh_N[a$%aktY[#HL>2hYB'J:*^bXjN5]7+A"O"'ke36Z[OB2(g1mnX^4*_['-FAdo^[74Q?3[r&(0_CQ$%Zcl]Dq<k#TA%1d[f[]/$N2Hplq6/t2)#Xkk>[4u@5fN88!CeZh<)30Fl#0C94V0B6oju?F;.r1On-W3/[^M]'DGo,[l5^nBO2btQ%Ys/[,47QDa<r2A!#;%;'/d*FKq7[]#^5rE,RhdTD(-,(fILU='BjfOa#ij<AC^`J[)Fccr1EsT5b1!kZi*$QXD#RjRioXBq9VA(N%2(Fif:.ZFS#_lB\egSMQ:H!-lBB-b9p,]:gd%cJ10,\Yu'\^t@rAdFjQD-m$>.Q/!9IrM,cn`aPctZZlJF7$G]PSKB)\@Ki<i0XM%bk?fA(EI'Lb.27%YsC@3+K&kK=Q(a[1giLQ8J)_OWmq0Gke;pX4f^k.V%g=Bd3ODNM-85pM0^itAD,q*ecjufA7>71OGOCe%8D-$%-"Igj]ki8&L;2j3PtcRhA^47BW\$o\#c=BuSU%e81qa`P%>-k".4:C!g!-o[6Vn^<0Kgp4FWDRIeX`!c:^XfZl'#]-%mn-CW2+^)%h&BtI*_RYkIQ\,CkRb1[AEdLW@JMrf3X]Rc)!IcZ@b`bu*L^^uD/2.6l%,fI;q\q[(dkI6^TkfgUCMH*US"6<+]=9tlm9'T[m[ZW%^A&uAH"')gJKoK2jLEY4[2K)L^-!>!J'_p]/.ebYec%u,C`8ZPr]XM72>Q>.-'N?-+GF$()Qb0+XW_A%,%".iFpAG2;E;"j9B&/[%`,4f9k%n8G`S'H-Op]rB6'Wf,5rZ"WPo[$V]$+Cn@$E3E03,k.L9?6Q(M;lnTGm-53IO;\c+jVrgf9EV:<_Y`XKkE7fr&"dA7C+<%6?9)ZOJu9rWQ'_c;W"%ms72;m/2,;o.!^DQa'sQuV;8Q'6KfVG$K$0G-K><9Tfh*M@*9Uf),jfqaLHc75_E]VlO>;c_7/EC6#rKP%g%1r.F4f55,\,"T4V;cKdi5HFHY:a34_N<?AKE:;;/4$Z(#MSMo1,jJ"61fm9,rXLQC->D#"oslN.ujrYsX7TB#ImNXtI3)UZu=_%lH(0`&@L54aB!@[9+)?&B%q(Y-9@<fCIs^1<9NbL<Rlp9H6?p[%]4WY`[XB7`GB7eX^*jZ3C:i"/p65jb":7*no/Z'rIP3(U?l<+%B86f%X"q&B!m4,,?.L9$+:(_"lb=8-e<*jVPm8N+_H3ftkf$`lGIOi$Ei,SsNh&_Rn#Ri`Qrq4m/4Vt+@i3@KWJG*Td+M+4;GI\o%JKthpkU6I9iujoSA+ZQY_CgF6U`O*AA7mSi'2anu1=n:KB%-/R.n?ht\+SF1`=qQ%H7<<B6t)/'0AgC9[?'-69_H3\59d1,>5HBi%7+Rlo"Rsq'-g+L"QV%cb-(I9N1R(RB)YMV2iAd7'afe&K;1]+B\dhRX9+,t>??K:MFFcn3e*Eo)4VKAC9J'HmZsN%@G+C'bS]EfZ%=c-e30J'K938I/!DQTd&WL-3>i7JQX6TEm!!.Ko%D6):-TLXKg=BI*o']MYe9U2+m$JP2-8VO>g/8%%qCJcq+Nl;E&^)#T=h:2+s%fY>DdhIfd8l)d+3Nb\20G02868O4l?)>9u<8gFDT[iB-'^oGVPKV&N1#\2%bJceFd0mdWVVap@0@drG$_`NZ2`uGB8W?N]RO%gu!%(^Jb"F&um$NOXV@3pCN9"flk/_:8crI."7g"fDGGL/UuHRLV1)P&!bs6HQ3En/+MLJe79"FWcdHb@GTBd$3?k<5jS%rSUIYJ')QN%6IFjtp?ho*.aS==UJqnK3m\RPnbL-iGO2tAJl$ee6<h)87+7TPJ_Dji<<cGL#ar3^8G,U%HA%b#1hEM+ofCILl;La>A4e^_^$7lX%+Sn'q"6E^Sd&B:O4-g4a9a,8@gJ`:-Z`=)N>qNhQ'Hg<4=XdV+J7'&3<i8;20+IR,CIRToq9Kk?2buaNl;\t2,)V`Ab?a0cBO,S<%-F6^!,q(.aiq3(Bc:6L#5\HS*?434&E`KLd";QcccY5\$I?XDDm53J(ks,M)'_dgCJ_#J?(2Q7)^DmEsM)"l5`'O%&3'%d"A:'8#%J"g5Z[J%>ClbopDaj'#p@VMj_r@E`e5h`i_1O)0sXJZHGJfi*UZs3pOBq/qZ*=Y^5V<mg`p22IQMm@fC7F#KW>C`Iq$Ln<5L'WFB%&.U<?&.050f@k?UW"#!ge8n=a=J4>*(jK>"JOd)4DAjp\$1Ylp2F0+Ji!YK:+&2d@Q@nG[UI:>Phtj#FC\NJ#Ash*RT::PLl8\!l%&"l[\o$]\!DMY``n,m5@?5'1:m!N[5<3aWuY^2Pb0Xuc(/<_Ih&+DpNo$-f[C/R!pWh56$ajNGL@.Y;=L2fPYCg'KA%TFaGKt7'V%jrdY1MgMo8-22,VQcUSaTu=$YG8/pNa2I\#s'D[n;GcIf*i5]u,+I)NJO('`W'SJp4dt(loLN:hol?s*Cik,/5Vn'IRRV0^N7S/a%A%1+YN[/EkV.oHW80caPDF%270e4!@g,6L5c*WSN]Y]CjZZ@H$q6K$s;[<FeD+iF<8C/2RMl)2g?uLF9<@bt>nk+C!'V*]RCb=1_%kGBT9jKtAiJ":*o^R>c1MGd9]9t4Sba8F-i<eAN&6X6@"jKuF'hu#NaD6r$PY[`+`g'gNHH6FEBl^-`]7X0)V.CP@.W8i3"j(O"[%:A7)b@P<J=[^KZlZ1()1N/:1Z/Jtae)sWN"q/j)L:btl4N7W=kN0U9"@#Pksl%^11nj9_M>38G>A#^?^!nFd=<3M8nDLs$d=tR/H%?@75KVD51YUYe$\7/,[WdH<CC/!0S^NhE7s!H!Tg;8.G$p7,-D<X$.CCtFq8Gh7oc(=r`@9^N'u%$H*Qkg9HCH-IIF]>HP\mVq?O%$=ag1)`@2>=M4<HKS*[tqIL`hl?_LYY`8KCC(2g<%\P08AMesi]24ouMdfp><ZX+b@Wf_^;I%Fplf+WO(GLig=uY69__q*RCp>D+%A`/[]7DY)k=jSO#Qg`G^_S`\?nZ7(VZINun!#KDITJY#irYB<*o,s'jA]pU0e[Oo9S`3kenm=%bD]oCnl\9!8/ShmqH->$ZeZr)!%bG/'1%B*W>^/K.^r,e-oBWUE`@=#W:gbR6Ag]DmM*/5Dn5!5U(XkqX-7D)ED\Lm)uU%d*G7b@to?Y`;s7AVTTNdRBL`D1fGXa7H[%@gf9/E/qIA>NMnrr52Ug!kA>!+^9N"6$"/RI4[\iFBOj[6<(2-OLO4Q^_knZC24ucGd%fe;HjMPD^a#I.'831&/>./>#a'>C$]9^%.BGB5rOK,4V;K=[eJ^lG>?99(qcoH6Y?Fk_hf]j'-+,];(cYJFC=S_M$YgQbW2J`h=Y6Q%0!3[2g&l(E/XsmE[C!l?HK7_5%701\%:OFUn6)ru6+<W:XFgMEG.U+Eu2+THT'44.c63IPl<^R8"WNaUW&mCKr2Cp=k&[VUV;EtU$7.-duQ@UE1Y'cOdY'Lj.C3f$Ge[),J%#[IsB;Fc_7/#dTqk=TBp'j`D'2*%n(+j1cm0^R(7=_]XtJM(OQ8aun(Z"e7N3(qNO7=?B2]+%esW.o=g0MA=NXI.Plm^AA$`V&=3%cq_!MW@5_km$G\s#kh\0/.5kP`dLo=$T?/!n[PuKMF!.m=fpNF\N=r>i9AU*Y*I,G/kd/2b%(s[6dV\.=s_@B7?K-O6#+]Q,$?V[%MhcWOe=@4Tluk<?.qBO]ng>37`8g]&fP\0<\)gQg=7a^;mn([3[o4"Lh[6Z7;&%3hPHC-4-*cr3S^-AdOC@(h<m.%[=G1a!Pf#9#%-'Bf&3q7#C(U^I_mFF4#5'*V5em_NZ%ZGrd>:k'!?nDT#10+g*M(K8&dNS^(d;F*9h5B\*^KQ"g96FZIM+"h3(dc-I^[\9=V6=,c%X*j$s[enRF\lU5%>huH7,jO,<OBBM6f)V7QeQ^;;7F<Wo'DITb/%<-m3c__RPdRU1`gUnDXj@[a\kc?LfD=Ke)phQb.'2S$l.-8)%fkS&rl,k:"U<o0V-X/0Hb$==)_kjRufkS&risL`9W/A;;EQ+hZV'i<_<Ak>HMK/m'W/,+Q'ru/'`.QRiU,`1&Dr9-@bACP\$i3)X%(BXstEiN6S'PF#-:'M!N5R*WJORj/7D:pYjD$RAKJc>Vt>&/%_^1&V$F?C*[qlI\r`F=t!S,9M"poWHVY9Al&<hPYmNFXc4RGA4$%@aG]6H7K4JIObX.Jh's)TV;qo<XA&Kb`Nq1X^J$[nu%o3Wi-W]9Q#"<PT769;#KOIR&u$8]N0Vr<\+2YkHo!;G=jBEU?iDL<l9/$%FVWg#>[ViLfrY%O1bu*qGE;@p88!($lMLMaAhBE?B#PmJpcrD53)TIhA-Ljb+Vj0*A;-LU(<)Clju>3G=S69cJ-XHB@)_QC1)!bM%3:L#F0GYm[A?S%a/:F1Jnr<7LCACD+'g+HcA?H7\0JF,@);'58?q](rH$m^)C,cl@Q1(u7ZYJ3P&m="p8,.2`fHXtX-ib/q's7V3%QC4ra<sDoc#JM\SgELC3ZQG]B*YVc.Fb,44DW%NU<O$^VWWI@0I3bg:`&2C*<<RP,)MkCg/,VC=<<5G=rPVXri'^L40/*'8A#VM+%L'Kc>F*@tu"ZT@Y@GaC7*\"*=rcdM&!rp)3%^&8sKnYu\85;%EqM23#Gc?."P>/,X]j2kZ!i^k(@H40#haLk=#>-J0"#D*c/_Go@%WibS^8(H2iD<&iN<.7E0\>]8KeVKUh]s[AfNVD#L"VNqoCEfK^>:7p?"q''/S]KlsjT>l*T"iGYff;CW9t[Y#T*?bW\.U@p`&U=C%$KW7IAsRuW2-Il?m>]tof'e$VRtiG_kbgn.5U.VDk*>1u3*]t`GF77[JU5IC:<ZX*$%i>(8Uj,Q3>olh=Js1/2:AJ_a2U-i-_PHS%q'VUZV_H;lB]D2A$,/kQ-$1A%.4rQtp0nPS;^f81Y<0!`V-TT,D[o+"!ebrLKU?!!3)fl$V"Ag&O@Q1IUsb\VdF9W*hV5t)FfJin%`*oAYT-Mn.,pkQP^i)%&^)G>PWoYJEe01]EpD*IDHQAk9=g\+WC5+*ZWJ'1BVY`;m.>2kR'b&kq&P?13&):'ja1a+6rp@gg`)8Z)%36nm/6-P?6WtZ&sR8`DG3J@0_qgK;aEIT*qdUQoN.9coCX0qNhiFch/;F/hVhaT(E0WkO5Q&&!=3MD7'mmL'6$p7F<NlKMB`<\"'%e30^Dp'kgX;@`8OSO1K8JO+$H8dQCaUl``K-k3^c83+bH3/,kB8p0t!WU@+(Y@mms#NYJ-a\=rP,l[(6Qt5L'*&WQ/Km\?6itH:Z%,Wlm+pF`$ZL#'Za<>p/U6?M)&_"1`[/O\E#8p6?,&=hc-I(jILgnLMY)r$dTi0)CMHmFU?%&/;#8eH7\9pDsEB9js&cF9^ZKO)aZ%EMlPG;-EULM'+:[o=iU>=chZ/%V<^L%;"2H8.=$tfk@(:<q3s4Fo'cTE'b`62/6E@8uUrKYKdCgGEkQ;#bd?mR^_k'#B_Honnk+R%3fF5S@"SfLSKf#:5r0=AJSu2:<;UZJJi\!.(l=mqQH5S0TKjU'km[#3;"2jt9--WsGdf]Va8s8YoCJJ$TV.A@oJHh$dZcFtYRs,t%`TDsqs-#e`rKDkP,PtF>E?ftuO(d<E5*Up#aTqc&1-bGuCW'!k.tJJnH(S!^'.2G2,-m6<Jb5pd*+,Ig!^dkB?=SB*3cSMFgL8A#%K[;U32(,[W#=kqp;jgSeeIsK[q)g%%Vh@J4oP*6/H>p?h_,`M"4?Zg>I[p"<C!U!e[hlJC2b<rDf(P_Hg0RmZh`eJD5ME^;f'.lG%q<_m1F^E^t+"Z%XUD'^@e]ZX%d##@\hQ=[=c?)gF]m8keH1_!\#efj@h7Q8hcDH`FaYEY?N5qptdV560>YC[n%O\dE@a-]_PCkLu%H;!Uh\#4emah`PCaaZG"2`W_"2\G,;D<+D-Ur0$m2^)>inB:ssDF/215.!%'>tC+LZOo,bO=\D>[Y\+#r5khRJn?J.%@3+Y9dneM%a+CTG8_]dQRkDodG:.4L3\X(<VBU/(Uh_`!Ans0km:dh]C-V,k9aDR^:M6S?b)5GTR@8/#(f&SFNFT<D1r6i;%6mh)mKL$([(]-B%1J(MG@*"9H.JO!'H[mWNNM@pO'P+"Q8lC<hL*gGE(5<*:Ju0_]^k&(Ka@sn?XZA>gY+k4U0DZhL;p)CN:!?:N;hWdgb]NIgg<RmK%T/mrR/^lW)0l7R5dl,W-J_:HDrfMU8X!ZDcHjR6nK@W9M?7Nc<^QU<:'>uCpge5Vl.pc8MEGm)p'#7JlOa.6V2S?3L,Ln-t-')be%)ekY#%rm\tWj+0BI:B;D4`kT$>j>aHlZg4b\-*BBSUk_dg.46LO`0K1IP0lTl'@LO^C4pO.I3#'=;D:IV'HXo%uq?Pk(aP4@iXRJ%ZfD^^0-e^Snjeb*AsOa%?1Z]>QLNUZ+^0k8ae=Q#ahbHK@B'::&M1ajZ87ZCo..563RTDuZDeB$8r3/Vn_;`^85Bq[R9XH]M&>f3%i)W0T3;A8IZ[AZOME%oDMU2WT&<:`G7GLjeX)$K[%Sa<&;`c9[%\4%?+$+Bk?/Ti/g-:S179-H2T5)_DW&-=MhS;4"HrI:!79mi/%$N*.OEIb_1'JA#6h'a/\s0cCP<i#N1Y%.\R-?>riW>tfRXb=>PQAt+X8p-=%3\W'E1_D5u3:SK++*Unap4s4S:hETO)t_(J[-*QG%$0`R:M'JFO6PGfLK+jMJqf.+4oR<F?-&'cHI!Hh9_IABP2Ut)-B\u?_e``5)Pg_TH(caF8.CF>i2lZK$+b/cJV<$9"V3I\ar(a)Q%Q0g=8_iT^EWO6L%8A1o*NIr(8Pn_q1F!qq$[[O`s$Dg+0PnSc_dd!TZ(`Is'<"[WJ4t/!Vk&&XY,>\.b>O@PH#ol3(;4>Rj)Yu4P%.04!PhTJHe"B7;3:8ZOFM+hW"l"!E:GglsNV4'f/1f5\f%gc:K\hPX.TG&at75KY;Xs>&7oN=8dP%^)[V2Gd68hdLn/pLc$EbJoZ%Efa_ocD!-(VirN'i,.&3*(lTgBMO4MT`e1+XGoNfTnu%6[qkn5Qs!UJ3dhXR%X@Z'4UI=#R*E1(-QtJ`l&lP9A3g5QOUsTu'!.@&%SXG[bUl,HJd5L,4/qN#WUFFE\M)T-^kHmg2Y5<F5Bp4Xh)9hg$=Ha^EVo><c1T@j!PY'JbLaTJ_-G__N#+^T)W><&>?_.JAUhWsI%"%AT1I"8"bhThGja&&r99U>mO['_]u,b.;BGRnU^%S^b26T\pRWe^faE@+?LA[USk6FLa>OKM'<FM3"EfUSK]#n%goG9BLuB];U(%nE"AW8YQ4,<h?#4,^$B=Bp(pddV4l!QAm3t%mn'&Vb+a3D\b0B8ZLdslPrK8$trQrMBms(L8:N6'-ol:+_tNE8+Pnk?Hq_d*=6"f%Z-;9"%M%8beWR6DC8;2bp,lr!,h?Kt1G9BR&qpa]]ifj%j%)?Z7:O8ZW"UOV4_3"].$<fR[sBDi11[+H1(<'tacONEA8Ffsn^H0Q%-FC$$<VXL!Fc_I4IVF4U)RtkM5[1,;"(;0UkY+Nq6T$29LF+@DTq*t_e_oOg)A/.Yht(S\QS_7nRG;M<VUo`C8=2P?#TRN>0[%Vc%)H`(t,:GJ`-#k&eLJss5)Su<<Ad0N$/8XKCJE5Y(Irn#?7(99R<Y=abaF]9IkgTYQ\;sJV>ZI.0ooVTTo?kq1M2thQNV7%5An+!@%fHel`l-\u)%kkMi4ISH9UHFu/=JJ!q#P2NZ(lnmoU_=eTH^`[*^j"9d=^sN32Hf'$)E(`.3gp<69LgmR9LmR+E/f8IS`bfn(0gDI%'[73mVF4Hp3HAdW3U5uMa&*MuNT%riq=AX<QNTgec6mq5EC2^t;754hR#1N8]'^!Wm$D/BpcC;e)teB6fZ9bCf8+`H[Q/9=7QfC,%YGUn02/M80)I#8+d@b53?DC\MhFXJ"_F1%;TC&^LX<*[E5XoLAn%C_1Oc^PVR$/FCi]"=Z$t@_3!%k!hpj&VkR_X\S\0NmL'pZdO%e.n6<B@IZ]`b%%W.ZMYc<)fC2B[TftQdMIS1bPOp:MF''A'9;17S$<h>XkK_d\r,Y*b[r2>m"e'7\cj/BT.8L`a[FTPt#4>C+?\a%]i,c-MFqA4l=r^30^=Nfj"D;c'k\g2oTVgOeFf'WWqZNIN";>77P1GK(NhU3nJ3tgg/s7;$/.@s"ps!#Mafk+;&2k-Zr%U`W)FIk%RS%'@)RY_t=>YTS=#?p,NNT4\+H<O;<)jiBdEkX^R9`[(Cdk+nEgtZ,<tS3QC/l/k=-8+;=-5i`=4,C?\Va/#7\eBsV^h8:R$`bc%q.W5cO;To(AutM:?15eTZR?d?'_0'.pY85:KUWf9rg0NX;`',%;oB0Yp7&B&%83R<'FeR;'Lh'&D%&iHkQF>PrU%BrKPH,N)$<$a%6PDQ/d*B^hYRD,ZoQg*1QeXuH8=?E5`hhLjM&oMYe*pcl>8oFsQ]7Q)BU#6NRV6LSL9%2R)5ef"KP5!FEZs.^M4/DMZp]NXmAr^h%>pCZ4AK(9cc`>/j:_NRA4#%@.3"Q_=#/c8+c:9_)N7/BT&qu:PJW0q91E$W>)3H-W(Qj>',8JV!!o1io+VBj]kX7dKfZQNHe0_n,%&7I**'JV9Q\[FR4&AamhRRK.El3-SJ6c05efnY:q]TE_5n^,)E16N/jeZ"`CNCm5!*u\?Eq+tFGNI5Dc'B^EO(:[+&e5qnk%ulLn%M2-gdc9#!"%Xq`3M^@W7TH87$Tr&lRb+V#0NH&X%gdX7[:2])2)YKlN2`,@'`]#aAm)Ct@Ztt+WI<HRed't#5h,%<a:,^U7X`4f0%PM<$jL3Cj!eC:6g1c2.$pISZ;$k<&1B,PI\9.(TlqGHDm)YBe"*7P_!:,(03UnLq@_W+2d,^(@#jB%ZE*,(!FS@O=``C)hM#VEjk%o,gIR1qT\I)pg:i:+%lWF^uP._]$XM(>q/Q\5Z4V;.=o(9+dj7U8Zq*5A__+(&%#m.2dA-0j6Pg18D(@*6F'CW'+*LkbUQWg;CqS%anEmm2Z+76dm'>9i.FZU0s$5W/VGu%Qm#mP^`F&S8H.^c#&Sm>G@\6=(B3/2L6/]H%_kWdo%U=F^`WYA7=gS]O>V:_\U*)V$BY4>%IM^'*\-<9I,D<m'd;]_n#4]"a;%H8NpiVqKr4X6%U?)V&HG(pHLjliTed<iP`9#CtS>c1!l<jqD5A0cj!aIkM?`p=,o@)%bm;IID%m2u>q2m7`+c0p,Yos`h.qX56-IJTF_q!B.erRES#@Ga8^rpK_LJ+q"@rpnP,s5WGFr8uK*msb)W?[qoj=0)@@rS&U8+.k;t^R8)g%dO(g[r;qUs1f>d69"h<0IK9B4.3jR6CMr>N^6g]GXfmOBe]Y'@_rMUuf5A['W.O_E$1@f0X%-cR#=G7,6l/^4re@,qaq/\\A/AH4%r:ttR?>GFbY_3*=P121l3Zs&p.ND'I('EdQJh8OR?5\VM@r!"Tr06,Xb[\!Fqr9XAl't$b7FS-c^dQr"acK.'D,2O^#Fg.F_Dl+9%Lq=nOb`9WB,ia!(jg#FY\@r"&cLf>Q*^RV(<_i'Oi1\dM6mZ2Y6n!&m,JXncK+M#c5kNF&^LHP2#R':D#SX`b"]0aQP9t*rdWkit%&39i$?l?Z_57p+G?jr:*lnG%tYn:>/#ZVfu*U"%^r4:FO')9SY"p0+/b0B<(-/kr.dt5G0TK:I9VH$+Ea[G@l@rbcokP,<nUajI-%Qh/bb2*ZetdmT3kZ5$es)"Yi5UY!o0Xb#*a#j(>J\28Fr>Sb<6D0Ul5]4rPqbmVaZQ1R#"BaI#\`IpnCadZo%eI[?;`/&@`.Sph(%46D_Pk2tUi,)ETmfTPe+2%WtI><m?61G^%\P^k"7e0Rh<:1p*j&rU/tH1Io\Wm`mer(!3.-490MjS=rl5?4`_1QUaLrT-s9nbURa%T\Vg1j8B+q<-r]Qi_rgE;K>&U[Y0WkJ63GQVo\PI!9e`_`>TT2MpC<*GuVahJir%bqGnJ'<\QQ'MsrO8YFhYWWO7Zmm/$CL_p;[t%p@G]C'e#>+.rG*"+;<QN'N?#nM.&`LFO[#9l_g5Q`@q@Il^)-##XJ_C4X8jBCXA40G6fK]5]Udc+5%HU@5.CHJt14g)hNd5)g5Z2%j;a;.J,MAUco31R6@kL64nElT=!5"/-S@1TP">XR2iu!7^Vm0X-[RU@0q5Sp<Q;g^jt8\#8.ornG)ILa5/O>QZEo=A^4)30pm9jf%!6HNSd$T<t^fF7&)T!e]KDJk]W5elN1*PJHU>gSAH@8u*>PC$?oo"2$OKfmU[n:P7.,.E#$17Nh@J4Ai?D#fnDLL?4q.3kY.^?k%%NW(E/TA@<lDsq#u"/Oke@>QYl/UG#louk"l@>`sLdgqAn*B#8R4fLX3=&OH2^<E_8ZF>UeI]5!lYZ17+1>T7b=ufK?s4-ajcu.7c%D1R.mQauMBGCn$H&p>^M)$Ds(TAAfdQg9+RXr,4-d+^m+Hm*?7513.EaC,5//oVoH"7;:48*,"%JqgLm;/DQs1XN\,cM"6DQ#cC@%?LUhFH=%a%C)C/BdQp*Lq9ri'G9hVL-$^Yq[/DSMI,(r"62E8.n-A=r^"pWbQ["oge`33&Y4Y(R,W!^Vl]'(gpRWF+SM0LK2mFjg%.t]K`(;KAdODbKU]%Ng]Rje:L=0T9GHc:#-!_-XMF_6rXi[,]8=3-pO$c:>+XZM`pcN%jKj-se('-:>GYnJj'M:C;\[E<0l62WJZ%]uaFYg2:/$(Sc8QFXpLg1<Q$cY7'C4ih_[5XQup<f7Qhc7<O/=&.f_qGc.D8&!-i-EC6U1q"Yh<[IDOrfIe&s@e%W*bc(&>\2Q[`%;d_9?[3_"()%d?8Tct0SrP^l!f-;,L774A50*DZ--\e6;'Of<ts()"9Z4Ftfe6Oi`l#FX\acPDAn)hr`_&Y\qT[.FEg5f[F&-ibX%hXMJsIu_:"Q!e;D^iV"O0-R=VqKQ*M&)ajD(=;`'Yj1>GAOqI$bGmq^<$PAY5[-;9,_u`?SqG2!6)crDiodM'n22(W^iASMX52W1%I(WajHo:R%=1KBgXj0FIKWbbGc2eUncXA5[dGYbW;G>n[0E':I^,>fgeG]hJSc=RJH[<</ifipl%9!LE5)tX(Yq%]qg*:h;m4$@'%N:A5)"Q%):6Fbg(d.7M%$;l]XmUe>AVMsG_PVWd"2qZ+N-)=+(=b1SqW2l_!37gN<&n0d$0XNWt#`Bip`&.Oh+&jcOa?8Yl?;gu?%f3poM4"VDdO<EY]6r\mAo;b,10h,\81Za0!Pi?J`-b"ji:f+\iH%b[CD!Vc7-%V00RW]W(^BU@J)_3+!QnKd7FQf/eB^YFj+^./9%P_`7uM3fnVP5%P?N3WF$n;)3^/kE*cE-$H3C[SfMYm9`Eop&1r.%a[)0L819$X2X(<)^'32><cCqG.\Ng0(X`j>:]U-@[I'f_3I)%Qi2VTYG3H6OW>4Rj'*R!e!C8\7WZ[0F7j6_GVE3kd<m78]c+qY%R>EGZ\m3rK<-LAB'j4"f)&BsIjjpHJ\`td)n]k[!D'C29Q;BS%YVnO@3O%dYAU68hOVng-.7UuO;RM5&3'(Y_?`KPNl,(1I)&^)3;1XW3H(;:sjPh%[)=iuH!(p>D1PR=p,nV7hD(K!0Wai30;$"%i%mf[KaDb2cMRG!4()BfT?A<9S37,AaTO/ET\+k*[c=]iRPR"P:&HKOC#)%rG(A=liH,(1&*=;gB?o`1/p/RAkSHO4SJ6%o\^.qG["%C,3f%Ul#I3L1S8A8-lK<L!_hG'G$9NpRbM_^k+)ar,m+i,oPE0Zl3,tgrQA_6;X1mM']I1QN7do%6R&4KDtM""XS.khWO3Q4edua%p(>cp[3r-?rB*WM>(A9,GC3Q&r7,9%oc;*\_*acp5(H=N^,A"g"e\J.=W#u$$AFeJ;c"I2E@cg^l<F:GZ:Ao3d$>RDr[raij$%5f%A!K@Qf)$16!C3GX+N2'jO$pfV]If`@&M/jJnc!1F0Yj77%uD&J>?[M!rDM@gHrN@*P7Q.-)/32>[0Y4c>nalC@ll\>bD*AhQp_8K%8NWhP8DaDZc`<F!BG0(po3=H7'+iX@!@\QlQOsjK5qW.rB`JsrB=>/06@gfk]UJNdp\@@Y5DXf?Mdp4=Qon""V6jRMoUG2sITjg#%c1Oe30-pB\5d'23;V99(iWH0hOH0n.`TUUWNgo\:UYWT:p;UurD4IPpDh1O/:CL^Uf.tD+<BO3g1m3I3?E1dm]\rU"+_`6uD\@=E%[ib>5?V#&2POuA](0=VqJ3l2H5Ct6eb9/Jq"rMCTb9^pQ=q&!>Z<Wi;3YV^+d-FURbKrG]Hb2Or1tJpC5o9qB$PLAoie[YlnHk;^%#8FJL.Z,C+!<8&:-M(!;BV#hS4<]C:_a(T\!&9<2h'%1s=4=t8)4\2c#sq`R5$Q:D?XFDt_=)ei`rKD9+X06.f"nE!OR;btIiPb.%2LGQ-n,X9=#8BY#(SprN98qO!b(?%83ObI_h*Ee/;Q(<MTHIYFUo\OF5X@3PrXb7'\aF/f7h4J%Xss\`##`ZHO\"kG807-VK0V,/%aZ(7[doT(GCW.sC$><9<eiU3R?-hORY0Ike`'`"/qaQZeA&E(*j7;\A0j_6p8n(6`'&s:"GMj:@dFQQ6<mJR`+F<"_%s)&$!YD?[%\H]V&OJP?oF[7:g]C1M67M#J`Pfb)=JS]a/Jt7qW-*W1kO18/Ij0\;_a79hFYNhFfJj]:D7pfVgNJ^T,>S7t6i2ebtWn!R>,Vf2$%V>PUIFas39%f[VhYPnj2a.M:up^,g3TAX&Rnc&!<rICMhcjfc_MFVo:=ub[\*]uL>NlQsIY1R:Hi5!C@1H/8Ps3nhhpAC%[D&J`2%(r7B^(?TTE"hB>G4EJ[*i=_=s@WIWh%1b[XO=rH-,>JIK!9/+#MI6iI5-0]_N8TVF>6AZYa;\k2&OcbH'G9a3<'qXWrjQ$P#=2lr%!A]hO1J$s;UnFdl5DCrh$0jK3X\:LC;ePhR8m`d<ec:m,;l0[SWt#=<c=UZonjLenSjMPg_E(Chh;fG+f#X)sNA3#IPa#&6!\$nG%DQI$3RB<#3C-G)i["+'W'<0e7Ot&^93EmGUQn+[Ta#S\F^5*0Y^tXpL3-]r6o`QNT)A!PnTD;F7qb^Tt9-[Zc;F3nY+s`-M&;&g,%Vg1oF?6A@(2l,@0M`p(lrbs2K5Zk5T/UD=SD5IFnrN('d*>!b,0cX6YR<Sl0Or5*qEoXB"k>jGE+-SRf+<#&B3!>"a<_?2,#+E0(%-sNIA>^Y7<A^('@j$/%W>YQnpn'hc.#?ki.^joR-Sl*u/j%6;8dFHnG^O&T6p#fArJHmJ2k:VYtI$I67T$sTZ32q@Z?Cqk0R^e5Y%4.%9gZJ2-t&Y*^#12jM,]2pb/_'p`=$-4)5>pf%ZK\b'3\.DP'%V<"O=K1p5I%7o*-[I1d7-dAd6JYKU0)J#'gUg"HGlBZ?,AX;/%BM(5]3%N;0JtWRF>L(:\#:Ul>V89*dOMFN@8L4>7VYr5g)itB.C/!fo>R+`2@FRAPHO1E[4Q'4gYumSlC*h;\m^BJOoPPO4JZ2'[%V$W.75G(0]&o'Hh9%nf]=!1)gD;^dM(58nLMe''>>ppcsFA4;7Om/3Gi76_&I-\\2GK]?KW=3Oid&=.k"<M]*OeU>`Hs-go=E:X>%=tOiIF<k@N`bX&6r6!\KaW$5%*]m!Y]BG5rreif998O2&gKV[W>=.LSbUj+]4d\MC[J%`Upj`B*GgoQa]K$20;FOIMY+],:ZeNj[%JFJu1:BPd_dku4Nc@(MDiK4V`4q0mFmJ73thJP"CA]$nu\*eR]1G[R#A'/.@O:Jd;#?1Vp,Cn5h+^OWLI>&WBic3*(6mWZHP;t2_%:RA`(p(XpNCs2!,4i\`UAlJ-j6!]aZ#Xe\?#7qPIFb*"#%3?W6C"j8Np80[0*:/pm$*jh'r*5DJLttpPd>@rc>_f*Xedo_@`De']%\KY"YCSeOJni]>qGtGFPrA7FR:NZ#)[1dsH+O138OjRMP/f5o,9=\7-P/7)F-J,4`e(k:#'`HO]i=3h'PN?fdV!nOuWs'rYaK,MT%>"gfKT74q0WD%]DaoO8%#ABG8p2[r=^Zto$K`F?F.h"^IFU?abX>Br#h6Z$lhip5*:j"3>N(LiNaG`iL@d(W$.2k^B(EL7AWjaSl%pE`.l`1oCJ&2NJUJOn<EQ"rYsjq:",pFJre&?Cct!mg6nm$Hd(#"H=6+Jt/T+1gA\T/*\RTe.$E4?]qWlkZfi!&AUt[JLQ/6ST;*%;q?KpO`?8B+-88A!RWTCTPTBg/)Y0leIJ6j"ljG)'LF^6DK\9WL0uI$ICGi+hA#]DS"aY^5Cc:YGX*ksdEQRrMgAZ!JUH"sEfgKU%>`t1O[PoLJl)3q`h8f[k7)9<tT^NI:nNA&>\:,m')'J:l5]m#._G%QDY'j=#fo4T"^I3aKar]qR`<WSDLUH.q!+iLHTKNb]!)H`#%FqQqXi(l+<]!3:W3iWg)Jes=IQn75U8CKUp:Y*]_gb/FP$)\*We;9eA"t!Kb;e%mWED1^B)$U'UqZ[T6q66KW;ncHd;F7=.1KY`Q%'^I=H,>YY,*6N1%jG"c'W+#q%Xs5a5F$DNLjqT7g@P8_W'cq(f!$FUJC9$8s38bW5XVFFsJ<0tj&AL(Feq>/FOtFFZ[=Oh1):3*C%kbR.*K>]FTq6:GbXTE&/'7pf1(4]j%rLemfOQPa\V4:U5rU_pR:_G_*e`eB=OrIf%VZS^ORDl</Obl)^`[%UIHdf<W?NEa>!29bN%:TZ;]^qe9!g5BQs'*@HBZ##US?<T\Vi<#0]XC%(.9E?VC_go6BT*IUh4kkj;iGlHi!Q;"2JAd?Q-uJfl[Hp4f"iB0tpOl9%W?Q#+%FDV6#jOrjs88UL#"*o-D$%(8J3i,s];NPX:_HZqYDkcIF!WePaQb9=#Z#HM`j<]831=g"7FrG*\8(*A(=hhK[8nNs]M@e<69=8+R%35?"DfbQDA<>,g<3$"_Ia"Ir<jV%p#&>6PT>[&XnLe*8#Bcm2FHPifueR:m_$#qQKQK,GA\l-:-85qlf+rH265R*<"8cYS:72GU5%.0@%WAVg#16_"iE!1DJ3Lh8V5fE<HlhQ9Y;m1Wl>IPjBR>TF)#4XkRJ>s;=Tjq-?mSWrn`2X2K:3r3e0/,^4p4SjTPS$>=agE_&m%k"K)+rj5dT.j,U&42<X@<>6"T'CaK"W-/G]^o&if$`[HrVs\!s9T7qlh.^'MY6BXLJHP'aQNp*`\KkVZTflco@PYbQ6,gaS@">IM%`m)3oK\uk8,hiPH>&mrA!(ubaaOuFnrn2J\NHEBpbesr/X$]+*`C!+4ZLhD.)KCZE_/r,Og4"OZ91G%3\IJof_qr&b=\82s1e_$f%m6`aY0tQ@On,aI1!f47^#mJg9M@`gsk7?Z\j/6dU,D]8!&Bf"uJd)9Iq@$+i*WYtLZ3'GV2F/AaLe\aQZl;G9\#]PYd^ohNMr>M-%jTCS`d\4&^+J"AiI=-R=3(WuqDZ(t@)S!ij>/u;98)pL;M_!NsrsQo$[]N1F.\K@h$>S?IA4ATd%NRg_PGu./8/',<G1n`hCN2YY%e'o6RY5l*mhITB:m,PI.dY4irg1e6WBE2h0oO*?Z5dmf.e#"[<X]6.=+iq;>Y%c@<2MF(t1Xp0!r/u_=6d6Yp^&!8XRM"7No*LM*%au3l`5H*aG;f6<+"]U)d$<7HUOC.:Q9\9.*Sm="8*Y0SQ;,8=uNE8M9BW/!BT>*8ZA$/O9\-3Sb]RV0AEd3[7IQqF]*)\H$MU([;%pdI_t!!L>/XHG//2[*-=X/R\`;H+[%WB$?j5mg0Lq2'$"a&/![:_si25.+a*M_&dsXp[f9[-Q^K/c8b<+t2/-B<jJNoMq[]Z?Vi_%$+l5'@M&"d4R_@<WJZW<,,/[Uh]Oq%l;k[%0o-eTX1/ejbm[)ub;1ELBH>WPBau7Z@+6jS_H2^D*_M"k<rsRSK@C9eR3K28P`*GS%bk^&qWPg2<]op_BV-Sn(UT$(RD<BaXA=aN0hQ`]M%*>YFOLKKP6#/B7L/^K_eW(iXQ3p[;Cl/9keC1_X'Fn@O@C=B5la:K$bLr.>%W0W)n^20r6Z=HidU^f&9`=YdHb\&YG1J=5>1,fEMgXJ.,Za7B5p]G,Zra(hTHE>e)(thVh=5eLnF_l6c`"oW[p6eaQ'ALO`D#H:u%^%'[@!ai#Hb170/jg43I,UE+Vm:m38"1pdJLDMT[Z:pchH&5Ua9FL2iqcthrj[8MceDQN=\E#q(p<uZi1YX[O[XK]L02RXiZObD8%rXNW5Q(Q#f3>#_BV=%k`ItFZ'I+P=^I=r`bGtV)_$msiO)_GtOn_0-.gMOrb?khJ1/fp=@EE:=:gqr,>6&l0ZVmPU.fU`Vcfs=X6%%H[q'Pd:'M!rlWdOLQoCqd4jLS,`GBDh%B5?[qpQ^\uno]Y=C8rL\Q5LTf*I0PqlbT-?]1/<J./+r;O4C1V.MS#W;?Zj.>JNZJd9%%QB5C/i)Oa,k46"ng:+9$JNd%?MV<(3iNSh9*Bd9LR2EVC@TbPg;+8"haeNF(j3C-\P`iFrZ)M6Kr6*3D5S`Aa!Mh@XtadbrrrQp%aZ>/DG:CE5c]_K42R$lUE7drZ3\1]++^`_CK,.`hAIrS^qD5NZklMV6G6XTjKUMu_\h]E3SWgk@I`[2]"Hhjo"iUB#onX)Hn,G@Q%G>ZinJd6"pJ_HmC;*^u^#@DLR[]\IQXNCK\AE$Ri%+t5?S2dGFOSl$)d8ZP^Yrk-Kb1JiTfQl^(V!?7L=UM%_7C3"*PcAjl$s"O)%$R_WeqG0h4N`Kj,fR_i^aJ,V..uXhcf#!Ij4;)QHO^Xp,]n5#Gr!^^3WrQ-$U)@OBBA0ZiY\;i:eHM@sOms[HTE'8m2/tlYB.H:>%Me/%9;MdVC4tp/k&?j<2@e--t(M!W+Q8ge&4k*Hhi^%-gd=DJB4SaMp^-o\<\JL,SnUNai]QbP15d<#$:5gh5g>QL]OL3\km'o3\%0FrVY=r\NuaAunq#EXri86fq\Un7[hSufp=R1\#(kT\Qal/mX\:&i-bX%6\KgNPRH4`JPO'62@E0'_]1^4+*q]c@cn=TC0P/5?\&%M7E"bpE=!(Y/kCgpVs.$5Z&!m*(-F`Qi8^80c0,QXGO_K$t4Pr\)6-&3E27Dq.?gNfAN"3DH6nNdVsoJGaBm!!$L;F,M/Ab_@B4q%KO;,+.Hp3\-ALpjrAce,@PY7J!OrA9.m",-Lkf)#XZoC!;q\lt1R[/DMb$Va;4(ZHES+0F!/c,GQO+p<[`Lq.@HST(:^=A^1(Cg6%`4^D8@B68c?hOY@jm)r8>'1&*492>r'VRdo+jrAufLU6e!G!XE6.Trsk-huH^NtOf[kT&R>T`\cJmKE8<8<"oU:p`:;_mg`PGiKV%5hc<M+c\OHTZQ4=fUB'i"8jo4<G7_5'Te#oSS!R'ZlM%5cNlquU.l4:O)]T^^:\8WjK+!I%hMD'&L%C5esi&]!&B-DODg2>ENiWG%d6,LtCaUpZKPI0CGPC%>L\,E@((<9$nQ+dd*k01e(d(&!mqhM]Ok)*Fq`S0>p>i1Qq5W(&6G\.ToLX7.ih9uFh;s1+d5,MH!Z%Lr%6)sDfANk5m)bqk`iC?,?,]NOSn\$?!*8o4Bc&r4*SKr.oD:YdZAsmu\DD#5pX(VFKbq8+%V"rS-<h-$(VQYgJNjo6ZI\5%a0.=DH%:opaG;oNu&jMRDWi7ub[&M+]aq`q04mRrjn5\ku6&QMUN%CoLR=E2#lhRjOMWgd/W$BS+5,l>CD9E+s)@7srufqlbh<0NZ9J*5;t%]'9j^ETllp"!cWpa_K@(Sh'L@"bCGQ9TE:Y*HE<Bjb.^fbr@OkH3LK*,oQj1NA&W)j>,/`_:'E%\5<;jgJS?5<I5s"]0D\%O:`cX%V&W*jSJE$>4PFb!,YBu;6N+2>Ucp:tpKCu@*gO$:WW;^"4KFrnXVe7A$MI1^)9.IT]3Sd1V?Y[?NB8;%$4bL0TmU@i8O82mLKjcq%?q&U-5W.3EBT!dFYnV9_YHa[>7(@FKooks_Y2uEH)oVRCE'k2)kX1I96]F#mkPIYM**D\f(K=a<f>\M+I];.E>9FA_]ZlFY6F$UA%ekRH\OPbl"<gb]K<Q5K36=fgUGL7'hQHQn#d/;)hj'Q>*5=>uVbh.^tM2ZemG4@HGB48.i((hdpO/N`B6IB<VS3]g'68HS.@T;Cl%EfR&`_5Pg1&-AAMqU<tmVJ3,Cj)RS*n/E,pa>]<>RjCqBs6*H%)Wos_TeiV[;bSno;1X@6eIpDll#iT6LO&1oqG;<&>g(@faJ;l%%59coE.Wb^0N6WTi#f,a]9DLL0p%i6=J$">G?JWlKQ&eX>ElH&@!Y461k9@+S$mNrPr'2EOnPMa@g1qVoD$d)h4Fdbc`K*Tfn3V;#%V-p#D,=$4o%n_Y!kdr2^6lX;S%df.#:Th7Hh49=X-J.DKGr;S=N'jdWC/TE#G<W#Va_#ehi^YBZ9pq&?1Qm4oI"3%4r&P.aL.-H[%ISSejYS?<aNt70?4s5fMnV2);KHO_$cF3]p")5$%o-@F-.TNcKX'el-c)Vm1Su;OOAX3\&>bo`3&QZ`k4`*(d_GC,b4g_P"p"3L@%3?4Y0jWiaJ=;)L3&67r`%_$ZL"d`oV<;M8D/gd=(k@aPuV[5nC0T4$8I4g>eJ!\2dKFj2k*Qu)>n[0ALQ$#r!7VbJ;G7"Fo$-$_X%'L/7(3ClrITE(4#7(a?GIrZkroH!*b#*Y`dPYQ<pZu[E=bM^9b7<pH*`cChWW0E^o,]oG`Wck7t1':KA!*F>/K(mK$d[7i0[)g'5%m"cTb)X@[Gl70sSiTDn%do>f:5((%P0>_QKmZtcG8_9k/(,DYIn\N!RNIWaph@C:<n@l+`Fba:qkYU?*Uk(0%-0,SH>/?:M7>I`[%lSL?R2s15<N[*.eH"\!fA`=pGH,0>>L2eBiCm2i,epg,H,M<JK8W(o:R;%?6eK_(6_HTE@.<^e=4!^*;?F>HH>rc,;igs5Xl%MLg%%qETc^-Y8A2^Z+<L#*$^-_sAs8?_*3c^(CCFBi:2S!=EaOUUh%h?[:m%#Tm_N4iB[r\f_GYSro!/Z-5iB7qtcdPhMGKcO"(G2\CP%)okb,]m^AoL278Y8Whkg+OCu/gHeX?qOX8,Ad!$>l3eHr<2Xh?^]5tC9a_e'4n`k!;]7D;?sLNM/0XAPVA0N961GtD$"IfhYEH(`%oI+)+Y_M[;Q=ne&TieWQCKn],//4b\@1].PR?=[]LjF-<\$[+OL-MhLndB<teF$:8iin0B:?jRZh=GAJI1;AkLrG4+29`NFPCS9J%I>m>[CD_lt!V]$A)iM_lf5QPgV!;a*[q`V67e*^9O&M>uc.gMF/K"_:F`&o1oNIWM20I>%5hG`kJsgM3G+l/eRDTf%WZP^>G.$>]%eFA.T0BD`A?n<o;RLj9I"tI:i\]h8Z?FltS6QJ7L0T;j\cM)AcDisd)H9I0<E[\Sa2@)\'SFN8[$dKg/1D88jn&_"oZ99eY;fkCI%mM^_1_lPhNiC.h]&+/.s`Jk,#\Fs_RZ7E"P>9V8f0NYu3<2ai&)m+TIH7W)JciuLHQFB[e@1$C'P-#%j06j"Hc?32N2Ua;/+H.Un%W,6Hc-R]5iH*s:L!JJscm#0\$>==.Ph\NSVONQJ+&798d"XhaRm]aQ*IC2LVf,@^p"M7#`k1,3d#.<T=[39P/0-=A68GQ[V_m%ci%M-6)dg1j!@T(9;C.Z0"rfWa)hmZBe`<E=O;Bset(4M5O=`>/L0<`,KS@C9PC=GUp0k;E88C5YZhA6Nk*q9=%aDW$X31")C-N88Z(%oCWkXWua:(\%#T:`kL<4pTX1qFbIRJ\Q`EZZ$6[[CBo2(aY1\'G@+FhU-l6^_=[4AHR2F/6dJNF?AR-[<3(Z]`W9=/n1Y5]_WMPN%emb['=HY="bKA[2kr9u&JnalH%3Lj^DhmF,1CaV)eJ#S)>_kn?qS?H@Mq"?m]R%b0$<Xi,=(V9J4$h%X*#+\)H#jSu3n.:U>0H0!%o1VVCUlif2gCNV/g7NM@^14!pCk^>A]3T]/HmdJX8!<DVCPPq$:]X[mc3$:c;/n2_R82<R<2ug<ZU(c7Z)D#V4(JMQF!)H#DSP?S%.._T2Tj%08"Q$#[*VJ@_81sHaS,h#J\r;9/StpcUM?t*C=PWMcCIbR]EG\"l7m`BBpjip5s5X#-gt!WqDs9"e^9C)IQ<cGTgZN%m%F&bjYQ!$eUht>hd2'IVb"GqYD2n)F,.0OZCZ\Cp^!B9^CHm@65eBMiW,CCYP%q=J(E/L>lQKPaO"^h#/+7h:.3G$Ij/dE7)nF-Xk%2gt?pHT'\f33_=rYWJ_5A1oWXP+=XaN2:$SKOUWQr3V/gkbV"QNtE6h9JpPrhIWUgBmc1R_&VZt65u#$btbT!nnYOE3hXr<:AtUp%=.N@1_MEled.pF'-5toe>bi@!V9./H6P\.)^aq92Y\6S53U&]_reH9q>FOr4"]^adT;L?L!Aa\8rTslH!gFG3%L!nA-\.q2j0f6p%H'NBX&!@HcPim.0&jr7%0(d`tf_`&-,>"2#bPlfo@(?^c%gciBC9Nt>$[;$B7j>9])c!X,UBul/C&-:eVIQ7"r;-I`>6rKfR2(*a%Rg\'_N8"Eo*VrNP<rCa\G*^lRM!d5r\&na3$,#HTk<"+l_F9EeHo0$@FdB+2GD#D.lBMp,]@0-QrLsNFQl0<,`n*s9kPU;U9=PAC%Z<Kr]..Anl(T7N>;LRLNn-\b7[#k.jORaOJ:DZn45n<#Kai;a^.#?(%]g:Qk`6KH'1K[;XA6W]?<DaSS)E+X.gVa5^r/<J*]u'_J%?/f9Tir'c@?>9E1#+#4l0]+5I$A0rP,Taa;`\3O#JBi"pG^+`X+Ig;"]+[15m>=nEC*F1lVh"=-Tr/Jq2MkLK%1)PUgg9Y>io*48%Eicf5^m8XKYMA#4G]p]j,!!ZDHQDkQ/#gDH[3"EH%#r6NV5A2J\0F`6l`1h&U38&(?rVU+=+eBmTJ7:+mfoAd)RpG_->?<S7E;6[%Z;t0MTM$9O\!3e6\6LC?DFAM>mM8#I\2tIi3p]/ffqf4%$PboO2NplE5aBWajf'5#)1/_eJ]*OrN#!niqha]\YYZ'>_,=24TVS;P%]CU,U(@Pqi;8$8AA@R=#O?I&TPMg7MPD-$PW1p;BDL')a*Xo%mYrguVTdhd#7!)@ea^THV=JuuKl=t)XfuYsP4>GHa)2J_)@qZrD%oIqE%k1i9,W_rBR1^b$Ph@%)=$e<V(omRk!_^=GMf$?Gpb7U&C@rtg\P2$q228VB&B/rBYo#dTXWH_P=5+jB2p"1"K#bF,a!>pDq%,'hY@cdo07HdpDF;*EIoRDj3V3AMFgaDiWS73DKq/T2B(=9$V!0*[Gj:j_%$V<n*Pp\dl@r):m=).%X\"k8%nWuk@>H#h!hdr(Ym%^eeK&*;fB,NqF"Whla1tR#`L8gS]OIElc8kMl2!0+NACTN'Jl5e7$DoK81O%_>`bMB@6'1^Vom>qO<`l_*s,Ka7lL&*/Cq\kf\d6%D90jF%m@#ATnd!'=??>j>Z@V!,2E\Z-O,;+I"]@n'$M/\7l"@R,Sj\bfL"e1"5Da_)#k%ZehFamN*#0g6E9b6Z7-hfHr"(8Q2.]R%Nn,nW0,V7i-5e%,.,OP_&(Yf3W[0kBbCm";n[<7LI2n6P(XLrTFPm-o7\!$S`g;$V$Mma5b?].:OOMu(WY8SZAM<]F-r9DB6r8cD%g2a\bmV\_p<EL>I2.#IN;Y7).io4)4TUtnPe2JmH)\.mg2p+75eci1-*@2K>*J8[I;"RcjGlDB\)t%08fi+@A(>jdK`"ae,?cp`L%71XQR-0h&R@2lR^GS5i9]Y6's4:-QGQ;;-ASl?UW>jiEO,?5nb8P)&]<\4]g=1B#J$tED5+9e0[M/-SCPoOOD'.(c2'tMUJ*mA*#%ll@-O_Lbk'B%FOIV+Io:oq=B88?6d:=Ql22SV]Drn"o/u=7K"`j]&J6oeg*pPTHr9f-pt]Alk;1-G.rb#,OXh_<YoY*0ij&?bU9Q%+RXcHFk&mo()pHr048!W)hMPA#]Z;VKq_@9E@W(bf7/cNUtt?HgJ^Z8\#!N\UJ')@8_$tBe#$87CgU/7D3bFjc-]c9/Qa)N#0WiO%d4p$$BDl!@XNFo)2pRoW7?U6)^Y]tH85_&4lQo>N,-V,,K44Q:8LP\qks*+<eJ1d#D>C8->\/D(Pe/n6b&p')XS=ZF6lq]o6-L<6%XLCLXgRHhf&ik0@7:B5>LEC*FIQFrDQQ^PbK_c'@lJUA.,J/;[,N9:Ybn/0$cTIjkKJmRHE?oUELt^<I-$a7a)hUi5e.90LU6`rU%>6`GU,&5p[elStlD'_sG*NZKkH<;/3D9;\Emc_2CRYpst'QYKSPcM-p_hjRl,L7rlG3-\#kZV1P.%uXha4oFBN"IY%3F)BeWu*.[%;jh;52sR)9&n7\^<Wu2N(RA%>Xg>uQR+L@r8a)?c3`'Fp.^&up^"'GRs6(13NK1g:+R-MTXVRGpKd\[fcqdalS`!Z"qE`#!LC]Gp%f%9s%ZD`VWYSj3TKcOJm*V%/.BQVA.4tS0uV=?VC[VRHW,IT;Zc,.ueKfY-UTl8,_eji[`]]"Wo)TCEQOO.<\.EdH_g\;@eT0@)%%kj[QQqD.U1J@oU$i/2i8!I\1\D):c;#PM2oEpG,..i7nH,I?!*[Cl6YHhOdqnV;&+0bq1&&krqo0mh[\Z"gs9Hp<X*eZq"ArSHT%%g!<q.:=@F!?lUjm^jVR`qNrq`(9K'W=M+1&eP`4PN#op:U:Qtu^J^s.m\>&6*=IXp$Fc"+9t/]\oM_H9l$b$3TYj"KD2l:`(Z*oP%XY%R`$-"S=:Q)\^9C(NEqVRWKokiB*H&9BRD7R>WFF!=?g[,#HM4)1-Cb)4nB%A#^n$pa#D^F?+d,"+VK3`1o^bFcefKi<DAJ?sU%j!\G(`(QY,%18`dHD,.SZ)HE64>i)*(kG%Ehh6k,Xe?Q>S"i:"6*G?lfR_5\Pu;2TSdU6n6odY,NZc'"l]!B'H=X_=Bk2(\G$=Z=%DOXX#e<#A=H_k4s'$HYq!CW8eUBKsKa%XtoVoR_!T\O/iBX]V#=b3KeHTJC]99ggc&`)gL78/$f7,^5qX_=^]o_(H71SFr'13SNl%HJe2TVDU68e6<C![q-(7f&X,<S2qG/GDc7uUHr:G\`lk#O'Gd"haYZ#6d$UPKV9OjV_!;7l?_qS[c@-"#.WF*[h1JKN!!5mnp.&@%?E;-b^tL?JrHaM$oki@tZ\VJ9jA+fDe,`I>_r6]ZCJ/Xn`9s@B[RKT4gB4%6K6^T,)NtH.\FQm$,sYZte:fl-G0(C>"Ac%WV\=an%=U'VZH,*MoFi0`5Pl!-h94&jII_Km^i@CYL"Uu7tMRm:UdOl"^X*0qp(<\>U6::LKQDCUf,,j9Wi*`aK0UqoB"4`$n=;R7N0bt9f%@s-6%"l.ID%Og0gAi%r9kUG[(\q.-#frPi#@7RMJ\c?*EHB!H9V,'knI"X"r?nWrIh?4>)Z*5bk'32Z%T,qj=PiHbQ/2gJ.%If!3%oMl:%f!J4)9-ZN0#uiN.j?Ui-`>Y\^>*oHH7g\hI&kJFZ[^8a]0q`+1"6\XEn?u%4G*`mKYSEe*`;iCe30La6:)3rO+\hY3A>X4H%Ou.Ld7K763\ucV0Kicf9qFVJP:E#Vpl\8;s'B;n(TsnT;.2p9fPL"G/s/_2\[DPrn/d@<[C<s3V>,oFj:5?3#/@9Gke_/k`V2c;5%<q#bUoYDO&BBjJ/q3YtuBd_@<jA9Y7^.n6FQjnkA,-1J;nb*Tk-Rkh6qgTDsl^Tj#!X<\RW4"lL83*LaNA$(RX51hO?4KcZl5tI^%RI<13+VKZk`n!=3\cdLslu`B)Y7'$CXIc#4I2Gg3P+?diG^IEkR<:Z'GO$O_n&=4#P!#IGWIg^E+c$=ILS:Mn`8EU5Chm/#*TR,E%Y35jM5K0:1;Td2ce<QqhCumTa23L%P(%Ujg^l8;PL%GGO?->`74Fb4G\UB,)jdWobR]]p@(nK4QA%><K?n:m24u_!,enooEr+bpW%Pp33-W#Odt`[r5+Zm$.$A/.pHe1@@$kjCjg"d/ooL:+h.5?rh-@Us&P3Yon$Ou?NdAeQ\T8goU;OO[3B_eU]L.Z_1(+-9P7;YS[h%mJcmhlDF7I^0HLJ++G0C*ihJ>WqnK?Kj1TCC;aiq7;PaNL3a0F$e`Tue"Q*(_H)">Pt/OMo^i=5!iL,r&nR*=N1T0XkpTn'>PNV6%M4$(1U$#hM-"]Vn(-aDIpdDS'jcbilM)A/>e#.\cka4R/-ndf,i&huSG2TH^Z/osa*tYVOl]Yk%i7s?ikGOT@Is_%M9N[i+2\Gua%F;*6A`;cT+^Bp+e%j^@2g>6E6+I?1#HePpS[k4alWG>Y`$As)5e2O(s)!f^M[?fpSp2[,K<o*#ml_Q5P\&nW]S6qlne%V]:(Kc[W%dnle2K"UTF_!<=h@DNhg=D&>&qb*\a*J9A\N(c7q'hJoF&r[i3iMQPpY/3PDALg_Pba@V,;CUKbM^-qJPnk#^fjZI3Wt`jSE*1Xg%X&aNu%q8:BA*$>9B68KQf.4P=_g!*4?n%eBg)OF@<&8E7CCNXdHZ>e.?F,l00HQGOHfUAo/<C#G'/PMB(,"DVqZQGH4;k5*.W#9d%Z8GUm'[?bhnu#R4MUSc2En$fR*:3:^.<q]M2OR+qp/9!F`7<!Z-W6jId,*u]"kf6q;].jt0^!H,n](lTMIl0LqBIL/oeE,G\G;QT%j*_SEU=Wq\2Zph:m]e.P-P<\2-5mffpls$h&kJJ=);M&<<P%M5c$"9gHMLHJHT?MbWda2LYMcpt3bm8SK(G;5G+THW>jT<cJ/8oi%'T(@2:O5.(QZt+u_?P:qB.ML@_H)b+&<];*E87;+lMBkEfJ%ho5LJl*2U/Cq(b8gr>F9o)DrmmC0NK6N[ib*)gjC"J&&cUrnFj6]%/$.M:O)BhV\M!e>cUqN@@K-n2_NpVqD`7;J&"^SiV6K[Z4h:XXBNY-=mln]\kMrn_Nl^c2Uh;Tb7a(;]_e_"V$lY=W[D<QK+Bf5g%:A$[=NkRL,gIdM/(fKdpTVE;=NOrV^,*#M,En6OW+I!`='LgPBH*EXkErK#^oX%uoIY;s*:h'=a"F*hp9.+Xp<C2E-fm_.`B6Sf'%SlmH5/9^4F<C-/,2drI3/EMuQOfY"IaWZ1DX>9)72hB8nAsG\9/1WKc=8O6YFB\?@U"=K=<nt9[DaHCRN;`K1]FXHeJV\oFZqAjV%AT9,l;MeO1<(eQ:G5$T^JopFEDC>uZcIGd<lK/RB:%k-e1]fGP5<V8N$.r07Iu8$d5]uX%d83.\5]9XipJVS_SZb1\R'@oUn05+/%aY4LJ(.U"tauQquLu'npW`>,\)_WSJYDn7/ODZ+4)p8>@kFU3A("\gP9%Za]DMTE.V>2`gKtp>ti8tZA^=VpdT]==.)\qVU-JlV=%"RD'k1^T,ObbSt:-"IT_mR5M4.D)fY.2j\+#`JJYr'<qq:dr]i^V82<07p@Q[-^maod_QWaZun^!7JP/E:Xi]C13qSnkYLd@pnCS%Df/J<cRS;QGo7h&-F?qkJfnB/@`G[q0X"1:(687h5mZi_dC-<[@[3XGg5E@1nm0gd/HZ:uQM915@1]hEA&ob-.O,]l!gD6a`?K'V%#!p6`g"N@6]#QBi>/&h>*mHg%.">P,1G^;dWOFGM\QP8S=4cL@E))I%$+q`]a=0D1a_A>[0[)<Sbs[ZY./H@$S&A>,4c53bc8M/S%2*&,2X7el\QV@'uT@\.Y?$B<<'*lYqP*N@`_9]2b4s^/$HEuNX[':(N-6eI]aj43U/LK:s4\p&5a0YW,HW@_pLjEaffpU)<L&J7&%+:GD/lrDbkeL-qlm[KE<H\Wic8)(3f4[kMrp';BRq5!&W*IE2Q#!"O,n'X;1]sZ(QRkcB%#b_\CPQHc<$G1q"(B<3!o7W1qe%bn2%dsf/YAY/"Z@Q*Zg$GLu#N]P2V@2SlagT8PhZi!J+FA=4j`c,G?oCZmPd7-nD,76pMBhrLbIp^)?*qA2L*OG:O+k/4gq:gRc4+T/S%fm(*Li#mRV7_1o_N.E+1&Q^5`I1>7Q-VKkG59=F74_$4-CX;JV-!]UYQ4bACh^>cLht_`<1gjBUOM"j$"$a<&N/h16a,/k_n]/#&%PuR#uS`)^AQp2On%GJ6'#OlR5aUEV)U?`I^(:p<`.=imW(f%t&**h^pC>N-+.t]g)fWfEU*<h,t\a.921%9$?Q#rOgGcK8<R#_i<%N%(ptL.4^V1++O<G1,9B'4kH_D+:SnkD\P/F_]Oe5B#:nfQL[nj[J2I8eUBSd,8W*L;!pnJP7>.dF^gn=Fh?sQ$mo[8(f%P%)\af%TQEe&IXc8Rbc6HJ6F-8>Rm7SUa=W'g#SE&r0rO"\`/e?QN]k/+_5s@_FRN,p23_p4lEj_M!gr=j8@qP<`9\+b=;EP3e/9Bb]kTm8%k*i'hqq+nmD]I9@2,iuMhBp##M-d*$C2@j$emZ9b:I37"I_N&B%ChEa&OmCWb59[$$VL*]Jru]=1\/Lm2$mX_CL.O-k$t^to@224%&L(QUL7X\WaEg&e'RtQm5nl=60HugN0:"^kHQV.#Wk0#Mb\nDrU0AVtLog6ae2!I='GrSD^OK_*]m/K*E,`+(Y"oSA2K50/K/gkV%<JlQTT_D7-5=ABk@[7441q9acXcI'qjMm+4e$GZl+Z%V?O+jU^"\KJ":9[!t%XuH7>gZ(a/_9L(OsJcjb`U8.Ng^336TVlIm*IMG%LP6Ru`965sS(==U2'o(HM^@/ZP>N<#..TFU[RMVVF9fI_I7RrsL7s1j\`N?c!I:CTk7/YFGn$Q=8H.l81.$eRU(ISIK6OY@T&(+4%iRE=`'GEQdV(\Icn5icn9%L\5M%W;,Fm-e)Rad.NCU+4Xj9_GRi9;gj]^r?ZaK5@K.jDdo;u+(r?r(7/j\e:.*/mUH-I1H5&N\(V%G:pNPXpJS2]O38s*%d[[*Z;k^IM6J<PJPCa9J--_DBkT+RV@C0diHL4&9@Cq<,i-#/D+O08?/o8Y2%;6/^^S,ZiD'eS)bu`#$.<n%O,#<B3R%*Z[54[n'"6B>3B<8$`!nSm\L8QHMk87bp)@bI3(-2[&WKPRg:,n#h$iTdbnX8g?tssF#2r5k>XC`C@%Yd.jXcI^2P,o>%Z(LD;^2?Z([X!\^$L^fG=(Ot@-u4LZQu_:hd\t@Ch4fZq21#i`;)b(c#b,Y)`khP^hA!2!AT:$B(<^)fG!eI$Hk#2A>YYL.5fcuB%Zn0tX<>hC$&U<]/H,HQDQ4&ZA?.Ubh59(ZL/=\7g2REmqg%6=!.;eDKBZ0ccb=#/^%j+_]Zle/dnYKTJ0::L*Ac..a8(!PWIDL$*%n:Gh80@*U%<*WLOJ4AR:a1>aX7IiR^@3ado.t?!W&Rdd.cAC44@QN:a22u?LM[/l^Okk;^pmkdoZ`4!</;X&-=#Ku$Lg#Wq`,X@-%#7S3p:\QoXK_qZ*%8'M>gh^\c_g1aaSGmMT2(re##'T*0,f6p"^u1N<L@>0ZNe)@7^onUc]8h+%9RcRkU41-hAU^NfI;E%EhjKLQ%03e=&\qWs=m#)'_d>^+7,L<6'<&,Kk:B$C#\FFmgB]b"7Q%T$5!Y.&MQ?*4nW<IT[2<;Xc%jf0Lkn:lDN"a9)m$T@MD!*$FRc)r.%JB^f.LAeWW*\0DG:caO#Lu,l1oYjc+&;(aO0N$rWF=i;4n9rf'0!$H*A_)H077hTNUD@t>^0\A`"LCa*NMbEoCnCPr#srsC$KhmN%p[JG4-)eW<Gb,FL:pF,YEIZ=9>A#gl<"E.MeK>!-fJdIqOe32UKuhad,VI8g3iYL?)=D5N3;p<`%saMr`ZeTtG(NES`l;dt&3bmk%2ekW4XDR-Q&qi+/bo&]>$0hus;]^_cVui[fVD5Oi.M)mO:&6[e#Sqt\ULg0d[eY!oM`>*gR89QDKgH:teTE/DL#qUnGYFW_1R_$O%DHpq/)MA7mE79%c#2P@f[/)g)oq:$hX/=\qAB9A.#<f$*7O?Vi>$u9tJnef.)7?.76k>bF+FI0J!Z].V`H$R7D&7\sTu?l51$h!/%goNj!fQ)&]7?mKH"#DYHk%W:ra9>U<4<LFS0S!p!f6YhsS4g%FPnRYlN,KKSZerYd$SNG$9\8EKY%AK>Y[i#Rr4-8G_97*e?s6gd%<j<\*Y^lRD%A18@7"Ye/rM0b3);u0(AZ*RT'k>(J2K@`Dc..9Q(?R3DCZ:hD]?eYr3e$R!h6,F\nA2rr[eiJf]"cMr-^/pC6fZKJ%,=fP7HQ0/X(R,lb<gUOJ%C*bBL1.^pgDW+P:NdAbHo9_[S+$kkj#(]u2:++'N#7!Q981cd[[,"\BRGNpf_E+LUaBd&GJ@;OaQAL3%D1*?qCbm]h9-n*'+XY1/%#jY?RoooKf^#5sSRkWP%F"D2*+sq2of]kf7.`o$C[1_g=Y'bAPJ2deZ57-pVAQKQ_SEKPoL6T!3LAuG%_!#3)6HihjA?ToD2Fi1aM;_9:41:'lfI<p&_-M5b*OLCu)*7'o01(`;FD2ZY#jt_^]5)&(d!=+#&F!f[0LO%5.!F@f7#_7PDr^0E%-MH8caB*3%Njde2YfNPY@2^ZYe1RdKS(8nBk4A0(N*Dc6I;uWW]F4+],Um,WHJ\AK%)j@7X_Gg>eHfd":GlTp'_pE?0SC]42.#%k%3,uoh36D6,/^Cq2E#-'*WhBqP*,jU`cj\?gVe$*3d_cKFDU2(q@B*0u?pF8<nncak'ei#W>*@U4J1YBCbCq/tG/^V8E<8l_Mj/+4%g%WbP)Ap5FSi:=jJOLCQ-L*&t:qqq"$9#?Zcaf&!#:S\m8FGr<i+D^m_)reuk'0ANBiL\Nd?b.cpNP8Hp)_dun)6e!TdCOEX8>$!%"IF[sTFYNPcs\au%r68*j.F=@L\bFaVXp`qYfk!BWfE+cmldc"hS[)m^&79Hc[PBpl/2L>\%d=dqYP3FrT^G]TDe,+IJrJMrm/&\%s5r^<DkDLWqldd3k0qqsr@LY)IIj)_hgG:n\)7,_&&8#8Rnpg!O5KnC+P0E%q9ON`p]("QTDfp?It3:~>%AI9_PrivateDataEnd